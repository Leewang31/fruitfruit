(self["webpackChunkfruitfruit"]=self["webpackChunkfruitfruit"]||[]).push([[998],{9662:function(e,t,n){"use strict";var s=n(614),r=n(6330),i=TypeError;e.exports=function(e){if(s(e))return e;throw i(r(e)+" is not a function")}},6077:function(e,t,n){"use strict";var s=n(614),r=String,i=TypeError;e.exports=function(e){if("object"==typeof e||s(e))return e;throw i("Can't set "+r(e)+" as a prototype")}},5787:function(e,t,n){"use strict";var s=n(7976),r=TypeError;e.exports=function(e,t){if(s(t,e))return e;throw r("Incorrect invocation")}},9670:function(e,t,n){"use strict";var s=n(111),r=String,i=TypeError;e.exports=function(e){if(s(e))return e;throw i(r(e)+" is not an object")}},3013:function(e){"use strict";e.exports="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView},260:function(e,t,n){"use strict";var s,r,i,a=n(3013),o=n(9781),l=n(7854),u=n(614),c=n(111),h=n(2597),d=n(648),p=n(6330),f=n(8880),g=n(8052),m=n(7045),b=n(7976),x=n(9518),y=n(7674),v=n(5112),w=n(9711),k=n(9909),I=k.enforce,C=k.get,S=l.Int8Array,$=S&&S.prototype,N=l.Uint8ClampedArray,T=N&&N.prototype,E=S&&x(S),R=$&&x($),A=Object.prototype,_=l.TypeError,F=v("toStringTag"),D=w("TYPED_ARRAY_TAG"),O="TypedArrayConstructor",L=a&&!!y&&"Opera"!==d(l.opera),M=!1,z={Int8Array:1,Uint8Array:1,Uint8ClampedArray:1,Int16Array:2,Uint16Array:2,Int32Array:4,Uint32Array:4,Float32Array:4,Float64Array:8},P={BigInt64Array:8,BigUint64Array:8},B=function(e){if(!c(e))return!1;var t=d(e);return"DataView"===t||h(z,t)||h(P,t)},W=function(e){var t=x(e);if(c(t)){var n=C(t);return n&&h(n,O)?n[O]:W(t)}},U=function(e){if(!c(e))return!1;var t=d(e);return h(z,t)||h(P,t)},V=function(e){if(U(e))return e;throw _("Target is not a typed array")},G=function(e){if(u(e)&&(!y||b(E,e)))return e;throw _(p(e)+" is not a typed array constructor")},H=function(e,t,n,s){if(o){if(n)for(var r in z){var i=l[r];if(i&&h(i.prototype,e))try{delete i.prototype[e]}catch(a){try{i.prototype[e]=t}catch(u){}}}R[e]&&!n||g(R,e,n?t:L&&$[e]||t,s)}},j=function(e,t,n){var s,r;if(o){if(y){if(n)for(s in z)if(r=l[s],r&&h(r,e))try{delete r[e]}catch(i){}if(E[e]&&!n)return;try{return g(E,e,n?t:L&&E[e]||t)}catch(i){}}for(s in z)r=l[s],!r||r[e]&&!n||g(r,e,t)}};for(s in z)r=l[s],i=r&&r.prototype,i?I(i)[O]=r:L=!1;for(s in P)r=l[s],i=r&&r.prototype,i&&(I(i)[O]=r);if((!L||!u(E)||E===Function.prototype)&&(E=function(){throw _("Incorrect invocation")},L))for(s in z)l[s]&&y(l[s],E);if((!L||!R||R===A)&&(R=E.prototype,L))for(s in z)l[s]&&y(l[s].prototype,R);if(L&&x(T)!==R&&y(T,R),o&&!h(R,F))for(s in M=!0,m(R,F,{configurable:!0,get:function(){return c(this)?this[D]:void 0}}),z)l[s]&&f(l[s],D,s);e.exports={NATIVE_ARRAY_BUFFER_VIEWS:L,TYPED_ARRAY_TAG:M&&D,aTypedArray:V,aTypedArrayConstructor:G,exportTypedArrayMethod:H,exportTypedArrayStaticMethod:j,getTypedArrayConstructor:W,isView:B,isTypedArray:U,TypedArray:E,TypedArrayPrototype:R}},7745:function(e,t,n){"use strict";var s=n(6244);e.exports=function(e,t){var n=0,r=s(t),i=new e(r);while(r>n)i[n]=t[n++];return i}},1318:function(e,t,n){"use strict";var s=n(5656),r=n(1400),i=n(6244),a=function(e){return function(t,n,a){var o,l=s(t),u=i(l),c=r(a,u);if(e&&n!=n){while(u>c)if(o=l[c++],o!=o)return!0}else for(;u>c;c++)if((e||c in l)&&l[c]===n)return e||c||0;return!e&&-1}};e.exports={includes:a(!0),indexOf:a(!1)}},3658:function(e,t,n){"use strict";var s=n(9781),r=n(3157),i=TypeError,a=Object.getOwnPropertyDescriptor,o=s&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(e){return e instanceof TypeError}}();e.exports=o?function(e,t){if(r(e)&&!a(e,"length").writable)throw i("Cannot set read only .length");return e.length=t}:function(e,t){return e.length=t}},206:function(e,t,n){"use strict";var s=n(1702);e.exports=s([].slice)},1843:function(e,t,n){"use strict";var s=n(6244);e.exports=function(e,t){for(var n=s(e),r=new t(n),i=0;i<n;i++)r[i]=e[n-i-1];return r}},1572:function(e,t,n){"use strict";var s=n(6244),r=n(9303),i=RangeError;e.exports=function(e,t,n,a){var o=s(e),l=r(n),u=l<0?o+l:l;if(u>=o||u<0)throw i("Incorrect index");for(var c=new t(o),h=0;h<o;h++)c[h]=h===u?a:e[h];return c}},4326:function(e,t,n){"use strict";var s=n(1702),r=s({}.toString),i=s("".slice);e.exports=function(e){return i(r(e),8,-1)}},648:function(e,t,n){"use strict";var s=n(1694),r=n(614),i=n(4326),a=n(5112),o=a("toStringTag"),l=Object,u="Arguments"==i(function(){return arguments}()),c=function(e,t){try{return e[t]}catch(n){}};e.exports=s?i:function(e){var t,n,s;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=c(t=l(e),o))?n:u?i(t):"Object"==(s=i(t))&&r(t.callee)?"Arguments":s}},9920:function(e,t,n){"use strict";var s=n(2597),r=n(3887),i=n(1236),a=n(3070);e.exports=function(e,t,n){for(var o=r(t),l=a.f,u=i.f,c=0;c<o.length;c++){var h=o[c];s(e,h)||n&&s(n,h)||l(e,h,u(t,h))}}},8544:function(e,t,n){"use strict";var s=n(7293);e.exports=!s((function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype}))},8880:function(e,t,n){"use strict";var s=n(9781),r=n(3070),i=n(9114);e.exports=s?function(e,t,n){return r.f(e,t,i(1,n))}:function(e,t,n){return e[t]=n,e}},9114:function(e){"use strict";e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},7045:function(e,t,n){"use strict";var s=n(6339),r=n(3070);e.exports=function(e,t,n){return n.get&&s(n.get,t,{getter:!0}),n.set&&s(n.set,t,{setter:!0}),r.f(e,t,n)}},8052:function(e,t,n){"use strict";var s=n(614),r=n(3070),i=n(6339),a=n(3072);e.exports=function(e,t,n,o){o||(o={});var l=o.enumerable,u=void 0!==o.name?o.name:t;if(s(n)&&i(n,u,o),o.global)l?e[t]=n:a(t,n);else{try{o.unsafe?e[t]&&(l=!0):delete e[t]}catch(c){}l?e[t]=n:r.f(e,t,{value:n,enumerable:!1,configurable:!o.nonConfigurable,writable:!o.nonWritable})}return e}},3072:function(e,t,n){"use strict";var s=n(7854),r=Object.defineProperty;e.exports=function(e,t){try{r(s,e,{value:t,configurable:!0,writable:!0})}catch(n){s[e]=t}return t}},9781:function(e,t,n){"use strict";var s=n(7293);e.exports=!s((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},4154:function(e){"use strict";var t="object"==typeof document&&document.all,n="undefined"==typeof t&&void 0!==t;e.exports={all:t,IS_HTMLDDA:n}},317:function(e,t,n){"use strict";var s=n(7854),r=n(111),i=s.document,a=r(i)&&r(i.createElement);e.exports=function(e){return a?i.createElement(e):{}}},7207:function(e){"use strict";var t=TypeError,n=9007199254740991;e.exports=function(e){if(e>n)throw t("Maximum allowed index exceeded");return e}},3678:function(e){"use strict";e.exports={IndexSizeError:{s:"INDEX_SIZE_ERR",c:1,m:1},DOMStringSizeError:{s:"DOMSTRING_SIZE_ERR",c:2,m:0},HierarchyRequestError:{s:"HIERARCHY_REQUEST_ERR",c:3,m:1},WrongDocumentError:{s:"WRONG_DOCUMENT_ERR",c:4,m:1},InvalidCharacterError:{s:"INVALID_CHARACTER_ERR",c:5,m:1},NoDataAllowedError:{s:"NO_DATA_ALLOWED_ERR",c:6,m:0},NoModificationAllowedError:{s:"NO_MODIFICATION_ALLOWED_ERR",c:7,m:1},NotFoundError:{s:"NOT_FOUND_ERR",c:8,m:1},NotSupportedError:{s:"NOT_SUPPORTED_ERR",c:9,m:1},InUseAttributeError:{s:"INUSE_ATTRIBUTE_ERR",c:10,m:1},InvalidStateError:{s:"INVALID_STATE_ERR",c:11,m:1},SyntaxError:{s:"SYNTAX_ERR",c:12,m:1},InvalidModificationError:{s:"INVALID_MODIFICATION_ERR",c:13,m:1},NamespaceError:{s:"NAMESPACE_ERR",c:14,m:1},InvalidAccessError:{s:"INVALID_ACCESS_ERR",c:15,m:1},ValidationError:{s:"VALIDATION_ERR",c:16,m:0},TypeMismatchError:{s:"TYPE_MISMATCH_ERR",c:17,m:1},SecurityError:{s:"SECURITY_ERR",c:18,m:1},NetworkError:{s:"NETWORK_ERR",c:19,m:1},AbortError:{s:"ABORT_ERR",c:20,m:1},URLMismatchError:{s:"URL_MISMATCH_ERR",c:21,m:1},QuotaExceededError:{s:"QUOTA_EXCEEDED_ERR",c:22,m:1},TimeoutError:{s:"TIMEOUT_ERR",c:23,m:1},InvalidNodeTypeError:{s:"INVALID_NODE_TYPE_ERR",c:24,m:1},DataCloneError:{s:"DATA_CLONE_ERR",c:25,m:1}}},9363:function(e){"use strict";e.exports="function"==typeof Bun&&Bun&&"string"==typeof Bun.version},6833:function(e,t,n){"use strict";var s=n(8113);e.exports=/(?:ipad|iphone|ipod).*applewebkit/i.test(s)},5268:function(e,t,n){"use strict";var s=n(4326);e.exports="undefined"!=typeof process&&"process"==s(process)},8113:function(e){"use strict";e.exports="undefined"!=typeof navigator&&String(navigator.userAgent)||""},7392:function(e,t,n){"use strict";var s,r,i=n(7854),a=n(8113),o=i.process,l=i.Deno,u=o&&o.versions||l&&l.version,c=u&&u.v8;c&&(s=c.split("."),r=s[0]>0&&s[0]<4?1:+(s[0]+s[1])),!r&&a&&(s=a.match(/Edge\/(\d+)/),(!s||s[1]>=74)&&(s=a.match(/Chrome\/(\d+)/),s&&(r=+s[1]))),e.exports=r},748:function(e){"use strict";e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},1060:function(e,t,n){"use strict";var s=n(1702),r=Error,i=s("".replace),a=function(e){return String(r(e).stack)}("zxcasd"),o=/\n\s*at [^:]*:[^\n]*/,l=o.test(a);e.exports=function(e,t){if(l&&"string"==typeof e&&!r.prepareStackTrace)while(t--)e=i(e,o,"");return e}},2109:function(e,t,n){"use strict";var s=n(7854),r=n(1236).f,i=n(8880),a=n(8052),o=n(3072),l=n(9920),u=n(4705);e.exports=function(e,t){var n,c,h,d,p,f,g=e.target,m=e.global,b=e.stat;if(c=m?s:b?s[g]||o(g,{}):(s[g]||{}).prototype,c)for(h in t){if(p=t[h],e.dontCallGetSet?(f=r(c,h),d=f&&f.value):d=c[h],n=u(m?h:g+(b?".":"#")+h,e.forced),!n&&void 0!==d){if(typeof p==typeof d)continue;l(p,d)}(e.sham||d&&d.sham)&&i(p,"sham",!0),a(c,h,p,e)}}},7293:function(e){"use strict";e.exports=function(e){try{return!!e()}catch(t){return!0}}},2104:function(e,t,n){"use strict";var s=n(4374),r=Function.prototype,i=r.apply,a=r.call;e.exports="object"==typeof Reflect&&Reflect.apply||(s?a.bind(i):function(){return a.apply(i,arguments)})},9974:function(e,t,n){"use strict";var s=n(1470),r=n(9662),i=n(4374),a=s(s.bind);e.exports=function(e,t){return r(e),void 0===t?e:i?a(e,t):function(){return e.apply(t,arguments)}}},4374:function(e,t,n){"use strict";var s=n(7293);e.exports=!s((function(){var e=function(){}.bind();return"function"!=typeof e||e.hasOwnProperty("prototype")}))},6916:function(e,t,n){"use strict";var s=n(4374),r=Function.prototype.call;e.exports=s?r.bind(r):function(){return r.apply(r,arguments)}},6530:function(e,t,n){"use strict";var s=n(9781),r=n(2597),i=Function.prototype,a=s&&Object.getOwnPropertyDescriptor,o=r(i,"name"),l=o&&"something"===function(){}.name,u=o&&(!s||s&&a(i,"name").configurable);e.exports={EXISTS:o,PROPER:l,CONFIGURABLE:u}},5668:function(e,t,n){"use strict";var s=n(1702),r=n(9662);e.exports=function(e,t,n){try{return s(r(Object.getOwnPropertyDescriptor(e,t)[n]))}catch(i){}}},1470:function(e,t,n){"use strict";var s=n(4326),r=n(1702);e.exports=function(e){if("Function"===s(e))return r(e)}},1702:function(e,t,n){"use strict";var s=n(4374),r=Function.prototype,i=r.call,a=s&&r.bind.bind(i,i);e.exports=s?a:function(e){return function(){return i.apply(e,arguments)}}},5005:function(e,t,n){"use strict";var s=n(7854),r=n(614),i=function(e){return r(e)?e:void 0};e.exports=function(e,t){return arguments.length<2?i(s[e]):s[e]&&s[e][t]}},8173:function(e,t,n){"use strict";var s=n(9662),r=n(8554);e.exports=function(e,t){var n=e[t];return r(n)?void 0:s(n)}},7854:function(e,t,n){"use strict";var s=function(e){return e&&e.Math==Math&&e};e.exports=s("object"==typeof globalThis&&globalThis)||s("object"==typeof window&&window)||s("object"==typeof self&&self)||s("object"==typeof n.g&&n.g)||function(){return this}()||this||Function("return this")()},2597:function(e,t,n){"use strict";var s=n(1702),r=n(7908),i=s({}.hasOwnProperty);e.exports=Object.hasOwn||function(e,t){return i(r(e),t)}},3501:function(e){"use strict";e.exports={}},490:function(e,t,n){"use strict";var s=n(5005);e.exports=s("document","documentElement")},4664:function(e,t,n){"use strict";var s=n(9781),r=n(7293),i=n(317);e.exports=!s&&!r((function(){return 7!=Object.defineProperty(i("div"),"a",{get:function(){return 7}}).a}))},8361:function(e,t,n){"use strict";var s=n(1702),r=n(7293),i=n(4326),a=Object,o=s("".split);e.exports=r((function(){return!a("z").propertyIsEnumerable(0)}))?function(e){return"String"==i(e)?o(e,""):a(e)}:a},9587:function(e,t,n){"use strict";var s=n(614),r=n(111),i=n(7674);e.exports=function(e,t,n){var a,o;return i&&s(a=t.constructor)&&a!==n&&r(o=a.prototype)&&o!==n.prototype&&i(e,o),e}},2788:function(e,t,n){"use strict";var s=n(1702),r=n(614),i=n(5465),a=s(Function.toString);r(i.inspectSource)||(i.inspectSource=function(e){return a(e)}),e.exports=i.inspectSource},9909:function(e,t,n){"use strict";var s,r,i,a=n(4811),o=n(7854),l=n(111),u=n(8880),c=n(2597),h=n(5465),d=n(6200),p=n(3501),f="Object already initialized",g=o.TypeError,m=o.WeakMap,b=function(e){return i(e)?r(e):s(e,{})},x=function(e){return function(t){var n;if(!l(t)||(n=r(t)).type!==e)throw g("Incompatible receiver, "+e+" required");return n}};if(a||h.state){var y=h.state||(h.state=new m);y.get=y.get,y.has=y.has,y.set=y.set,s=function(e,t){if(y.has(e))throw g(f);return t.facade=e,y.set(e,t),t},r=function(e){return y.get(e)||{}},i=function(e){return y.has(e)}}else{var v=d("state");p[v]=!0,s=function(e,t){if(c(e,v))throw g(f);return t.facade=e,u(e,v,t),t},r=function(e){return c(e,v)?e[v]:{}},i=function(e){return c(e,v)}}e.exports={set:s,get:r,has:i,enforce:b,getterFor:x}},3157:function(e,t,n){"use strict";var s=n(4326);e.exports=Array.isArray||function(e){return"Array"==s(e)}},4067:function(e,t,n){"use strict";var s=n(648);e.exports=function(e){var t=s(e);return"BigInt64Array"==t||"BigUint64Array"==t}},614:function(e,t,n){"use strict";var s=n(4154),r=s.all;e.exports=s.IS_HTMLDDA?function(e){return"function"==typeof e||e===r}:function(e){return"function"==typeof e}},4705:function(e,t,n){"use strict";var s=n(7293),r=n(614),i=/#|\.prototype\./,a=function(e,t){var n=l[o(e)];return n==c||n!=u&&(r(t)?s(t):!!t)},o=a.normalize=function(e){return String(e).replace(i,".").toLowerCase()},l=a.data={},u=a.NATIVE="N",c=a.POLYFILL="P";e.exports=a},8554:function(e){"use strict";e.exports=function(e){return null===e||void 0===e}},111:function(e,t,n){"use strict";var s=n(614),r=n(4154),i=r.all;e.exports=r.IS_HTMLDDA?function(e){return"object"==typeof e?null!==e:s(e)||e===i}:function(e){return"object"==typeof e?null!==e:s(e)}},1913:function(e){"use strict";e.exports=!1},2190:function(e,t,n){"use strict";var s=n(5005),r=n(614),i=n(7976),a=n(3307),o=Object;e.exports=a?function(e){return"symbol"==typeof e}:function(e){var t=s("Symbol");return r(t)&&i(t.prototype,o(e))}},6244:function(e,t,n){"use strict";var s=n(7466);e.exports=function(e){return s(e.length)}},6339:function(e,t,n){"use strict";var s=n(1702),r=n(7293),i=n(614),a=n(2597),o=n(9781),l=n(6530).CONFIGURABLE,u=n(2788),c=n(9909),h=c.enforce,d=c.get,p=String,f=Object.defineProperty,g=s("".slice),m=s("".replace),b=s([].join),x=o&&!r((function(){return 8!==f((function(){}),"length",{value:8}).length})),y=String(String).split("String"),v=e.exports=function(e,t,n){"Symbol("===g(p(t),0,7)&&(t="["+m(p(t),/^Symbol\(([^)]*)\)/,"$1")+"]"),n&&n.getter&&(t="get "+t),n&&n.setter&&(t="set "+t),(!a(e,"name")||l&&e.name!==t)&&(o?f(e,"name",{value:t,configurable:!0}):e.name=t),x&&n&&a(n,"arity")&&e.length!==n.arity&&f(e,"length",{value:n.arity});try{n&&a(n,"constructor")&&n.constructor?o&&f(e,"prototype",{writable:!1}):e.prototype&&(e.prototype=void 0)}catch(r){}var s=h(e);return a(s,"source")||(s.source=b(y,"string"==typeof t?t:"")),e};Function.prototype.toString=v((function(){return i(this)&&d(this).source||u(this)}),"toString")},4758:function(e){"use strict";var t=Math.ceil,n=Math.floor;e.exports=Math.trunc||function(e){var s=+e;return(s>0?n:t)(s)}},6277:function(e,t,n){"use strict";var s=n(1340);e.exports=function(e,t){return void 0===e?arguments.length<2?"":t:s(e)}},3070:function(e,t,n){"use strict";var s=n(9781),r=n(4664),i=n(3353),a=n(9670),o=n(4948),l=TypeError,u=Object.defineProperty,c=Object.getOwnPropertyDescriptor,h="enumerable",d="configurable",p="writable";t.f=s?i?function(e,t,n){if(a(e),t=o(t),a(n),"function"===typeof e&&"prototype"===t&&"value"in n&&p in n&&!n[p]){var s=c(e,t);s&&s[p]&&(e[t]=n.value,n={configurable:d in n?n[d]:s[d],enumerable:h in n?n[h]:s[h],writable:!1})}return u(e,t,n)}:u:function(e,t,n){if(a(e),t=o(t),a(n),r)try{return u(e,t,n)}catch(s){}if("get"in n||"set"in n)throw l("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},1236:function(e,t,n){"use strict";var s=n(9781),r=n(6916),i=n(5296),a=n(9114),o=n(5656),l=n(4948),u=n(2597),c=n(4664),h=Object.getOwnPropertyDescriptor;t.f=s?h:function(e,t){if(e=o(e),t=l(t),c)try{return h(e,t)}catch(n){}if(u(e,t))return a(!r(i.f,e,t),e[t])}},8006:function(e,t,n){"use strict";var s=n(6324),r=n(748),i=r.concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return s(e,i)}},5181:function(e,t){"use strict";t.f=Object.getOwnPropertySymbols},9518:function(e,t,n){"use strict";var s=n(2597),r=n(614),i=n(7908),a=n(6200),o=n(8544),l=a("IE_PROTO"),u=Object,c=u.prototype;e.exports=o?u.getPrototypeOf:function(e){var t=i(e);if(s(t,l))return t[l];var n=t.constructor;return r(n)&&t instanceof n?n.prototype:t instanceof u?c:null}},7976:function(e,t,n){"use strict";var s=n(1702);e.exports=s({}.isPrototypeOf)},6324:function(e,t,n){"use strict";var s=n(1702),r=n(2597),i=n(5656),a=n(1318).indexOf,o=n(3501),l=s([].push);e.exports=function(e,t){var n,s=i(e),u=0,c=[];for(n in s)!r(o,n)&&r(s,n)&&l(c,n);while(t.length>u)r(s,n=t[u++])&&(~a(c,n)||l(c,n));return c}},5296:function(e,t){"use strict";var n={}.propertyIsEnumerable,s=Object.getOwnPropertyDescriptor,r=s&&!n.call({1:2},1);t.f=r?function(e){var t=s(this,e);return!!t&&t.enumerable}:n},7674:function(e,t,n){"use strict";var s=n(5668),r=n(9670),i=n(6077);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{e=s(Object.prototype,"__proto__","set"),e(n,[]),t=n instanceof Array}catch(a){}return function(n,s){return r(n),i(s),t?e(n,s):n.__proto__=s,n}}():void 0)},2140:function(e,t,n){"use strict";var s=n(6916),r=n(614),i=n(111),a=TypeError;e.exports=function(e,t){var n,o;if("string"===t&&r(n=e.toString)&&!i(o=s(n,e)))return o;if(r(n=e.valueOf)&&!i(o=s(n,e)))return o;if("string"!==t&&r(n=e.toString)&&!i(o=s(n,e)))return o;throw a("Can't convert object to primitive value")}},3887:function(e,t,n){"use strict";var s=n(5005),r=n(1702),i=n(8006),a=n(5181),o=n(9670),l=r([].concat);e.exports=s("Reflect","ownKeys")||function(e){var t=i.f(o(e)),n=a.f;return n?l(t,n(e)):t}},7066:function(e,t,n){"use strict";var s=n(9670);e.exports=function(){var e=s(this),t="";return e.hasIndices&&(t+="d"),e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.dotAll&&(t+="s"),e.unicode&&(t+="u"),e.unicodeSets&&(t+="v"),e.sticky&&(t+="y"),t}},4488:function(e,t,n){"use strict";var s=n(8554),r=TypeError;e.exports=function(e){if(s(e))throw r("Can't call method on "+e);return e}},7152:function(e,t,n){"use strict";var s=n(7854),r=n(2104),i=n(614),a=n(9363),o=n(8113),l=n(206),u=n(8053),c=s.Function,h=/MSIE .\./.test(o)||a&&function(){var e=s.Bun.version.split(".");return e.length<3||0==e[0]&&(e[1]<3||3==e[1]&&0==e[2])}();e.exports=function(e,t){var n=t?2:1;return h?function(s,a){var o=u(arguments.length,1)>n,h=i(s)?s:c(s),d=o?l(arguments,n):[],p=o?function(){r(h,this,d)}:h;return t?e(p,a):e(p)}:e}},6200:function(e,t,n){"use strict";var s=n(2309),r=n(9711),i=s("keys");e.exports=function(e){return i[e]||(i[e]=r(e))}},5465:function(e,t,n){"use strict";var s=n(7854),r=n(3072),i="__core-js_shared__",a=s[i]||r(i,{});e.exports=a},2309:function(e,t,n){"use strict";var s=n(1913),r=n(5465);(e.exports=function(e,t){return r[e]||(r[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.32.0",mode:s?"pure":"global",copyright:"© 2014-2023 Denis Pushkarev (zloirock.ru)",license:"https://github.com/zloirock/core-js/blob/v3.32.0/LICENSE",source:"https://github.com/zloirock/core-js"})},6293:function(e,t,n){"use strict";var s=n(7392),r=n(7293),i=n(7854),a=i.String;e.exports=!!Object.getOwnPropertySymbols&&!r((function(){var e=Symbol();return!a(e)||!(Object(e)instanceof Symbol)||!Symbol.sham&&s&&s<41}))},261:function(e,t,n){"use strict";var s,r,i,a,o=n(7854),l=n(2104),u=n(9974),c=n(614),h=n(2597),d=n(7293),p=n(490),f=n(206),g=n(317),m=n(8053),b=n(6833),x=n(5268),y=o.setImmediate,v=o.clearImmediate,w=o.process,k=o.Dispatch,I=o.Function,C=o.MessageChannel,S=o.String,$=0,N={},T="onreadystatechange";d((function(){s=o.location}));var E=function(e){if(h(N,e)){var t=N[e];delete N[e],t()}},R=function(e){return function(){E(e)}},A=function(e){E(e.data)},_=function(e){o.postMessage(S(e),s.protocol+"//"+s.host)};y&&v||(y=function(e){m(arguments.length,1);var t=c(e)?e:I(e),n=f(arguments,1);return N[++$]=function(){l(t,void 0,n)},r($),$},v=function(e){delete N[e]},x?r=function(e){w.nextTick(R(e))}:k&&k.now?r=function(e){k.now(R(e))}:C&&!b?(i=new C,a=i.port2,i.port1.onmessage=A,r=u(a.postMessage,a)):o.addEventListener&&c(o.postMessage)&&!o.importScripts&&s&&"file:"!==s.protocol&&!d(_)?(r=_,o.addEventListener("message",A,!1)):r=T in g("script")?function(e){p.appendChild(g("script"))[T]=function(){p.removeChild(this),E(e)}}:function(e){setTimeout(R(e),0)}),e.exports={set:y,clear:v}},1400:function(e,t,n){"use strict";var s=n(9303),r=Math.max,i=Math.min;e.exports=function(e,t){var n=s(e);return n<0?r(n+t,0):i(n,t)}},4599:function(e,t,n){"use strict";var s=n(7593),r=TypeError;e.exports=function(e){var t=s(e,"number");if("number"==typeof t)throw r("Can't convert number to bigint");return BigInt(t)}},5656:function(e,t,n){"use strict";var s=n(8361),r=n(4488);e.exports=function(e){return s(r(e))}},9303:function(e,t,n){"use strict";var s=n(4758);e.exports=function(e){var t=+e;return t!==t||0===t?0:s(t)}},7466:function(e,t,n){"use strict";var s=n(9303),r=Math.min;e.exports=function(e){return e>0?r(s(e),9007199254740991):0}},7908:function(e,t,n){"use strict";var s=n(4488),r=Object;e.exports=function(e){return r(s(e))}},7593:function(e,t,n){"use strict";var s=n(6916),r=n(111),i=n(2190),a=n(8173),o=n(2140),l=n(5112),u=TypeError,c=l("toPrimitive");e.exports=function(e,t){if(!r(e)||i(e))return e;var n,l=a(e,c);if(l){if(void 0===t&&(t="default"),n=s(l,e,t),!r(n)||i(n))return n;throw u("Can't convert object to primitive value")}return void 0===t&&(t="number"),o(e,t)}},4948:function(e,t,n){"use strict";var s=n(7593),r=n(2190);e.exports=function(e){var t=s(e,"string");return r(t)?t:t+""}},1694:function(e,t,n){"use strict";var s=n(5112),r=s("toStringTag"),i={};i[r]="z",e.exports="[object z]"===String(i)},1340:function(e,t,n){"use strict";var s=n(648),r=String;e.exports=function(e){if("Symbol"===s(e))throw TypeError("Cannot convert a Symbol value to a string");return r(e)}},6330:function(e){"use strict";var t=String;e.exports=function(e){try{return t(e)}catch(n){return"Object"}}},9711:function(e,t,n){"use strict";var s=n(1702),r=0,i=Math.random(),a=s(1..toString);e.exports=function(e){return"Symbol("+(void 0===e?"":e)+")_"+a(++r+i,36)}},3307:function(e,t,n){"use strict";var s=n(6293);e.exports=s&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},3353:function(e,t,n){"use strict";var s=n(9781),r=n(7293);e.exports=s&&r((function(){return 42!=Object.defineProperty((function(){}),"prototype",{value:42,writable:!1}).prototype}))},8053:function(e){"use strict";var t=TypeError;e.exports=function(e,n){if(e<n)throw t("Not enough arguments");return e}},4811:function(e,t,n){"use strict";var s=n(7854),r=n(614),i=s.WeakMap;e.exports=r(i)&&/native code/.test(String(i))},5112:function(e,t,n){"use strict";var s=n(7854),r=n(2309),i=n(2597),a=n(9711),o=n(6293),l=n(3307),u=s.Symbol,c=r("wks"),h=l?u["for"]||u:u&&u.withoutSetter||a;e.exports=function(e){return i(c,e)||(c[e]=o&&i(u,e)?u[e]:h("Symbol."+e)),c[e]}},7658:function(e,t,n){"use strict";var s=n(2109),r=n(7908),i=n(6244),a=n(3658),o=n(7207),l=n(7293),u=l((function(){return 4294967297!==[].push.call({length:4294967296},1)})),c=function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(e){return e instanceof TypeError}},h=u||!c();s({target:"Array",proto:!0,arity:1,forced:h},{push:function(e){var t=r(this),n=i(t),s=arguments.length;o(n+s);for(var l=0;l<s;l++)t[n]=arguments[l],n++;return a(t,n),n}})},2087:function(e,t,n){"use strict";var s=n(7854),r=n(9781),i=n(7045),a=n(7066),o=n(7293),l=s.RegExp,u=l.prototype,c=r&&o((function(){var e=!0;try{l(".","d")}catch(c){e=!1}var t={},n="",s=e?"dgimsy":"gimsy",r=function(e,s){Object.defineProperty(t,e,{get:function(){return n+=s,!0}})},i={dotAll:"s",global:"g",ignoreCase:"i",multiline:"m",sticky:"y"};for(var a in e&&(i.hasIndices="d"),i)r(a,i[a]);var o=Object.getOwnPropertyDescriptor(u,"flags").get.call(t);return o!==s||n!==s}));c&&i(u,"flags",{configurable:!0,get:a})},1439:function(e,t,n){"use strict";var s=n(1843),r=n(260),i=r.aTypedArray,a=r.exportTypedArrayMethod,o=r.getTypedArrayConstructor;a("toReversed",(function(){return s(i(this),o(this))}))},7585:function(e,t,n){"use strict";var s=n(260),r=n(1702),i=n(9662),a=n(7745),o=s.aTypedArray,l=s.getTypedArrayConstructor,u=s.exportTypedArrayMethod,c=r(s.TypedArrayPrototype.sort);u("toSorted",(function(e){void 0!==e&&i(e);var t=o(this),n=a(l(t),t);return c(n,e)}))},5315:function(e,t,n){"use strict";var s=n(1572),r=n(260),i=n(4067),a=n(9303),o=n(4599),l=r.aTypedArray,u=r.getTypedArrayConstructor,c=r.exportTypedArrayMethod,h=!!function(){try{new Int8Array(1)["with"](2,{valueOf:function(){throw 8}})}catch(e){return 8===e}}();c("with",{with:function(e,t){var n=l(this),r=a(e),c=i(n)?o(t):+t;return s(n,u(n),r,c)}}["with"],!h)},1091:function(e,t,n){"use strict";var s=n(2109),r=n(7854),i=n(261).clear;s({global:!0,bind:!0,enumerable:!0,forced:r.clearImmediate!==i},{clearImmediate:i})},2801:function(e,t,n){"use strict";var s=n(2109),r=n(7854),i=n(5005),a=n(9114),o=n(3070).f,l=n(2597),u=n(5787),c=n(9587),h=n(6277),d=n(3678),p=n(1060),f=n(9781),g=n(1913),m="DOMException",b=i("Error"),x=i(m),y=function(){u(this,v);var e=arguments.length,t=h(e<1?void 0:arguments[0]),n=h(e<2?void 0:arguments[1],"Error"),s=new x(t,n),r=b(t);return r.name=m,o(s,"stack",a(1,p(r.stack,1))),c(s,this,y),s},v=y.prototype=x.prototype,w="stack"in b(m),k="stack"in new x(1,2),I=x&&f&&Object.getOwnPropertyDescriptor(r,m),C=!!I&&!(I.writable&&I.configurable),S=w&&!C&&!k;s({global:!0,constructor:!0,forced:g||S},{DOMException:S?y:x});var $=i(m),N=$.prototype;if(N.constructor!==$)for(var T in g||o(N,"constructor",a(1,$)),d)if(l(d,T)){var E=d[T],R=E.s;l($,R)||o($,R,a(6,E.c))}},4633:function(e,t,n){"use strict";n(1091),n(2986)},2986:function(e,t,n){"use strict";var s=n(2109),r=n(7854),i=n(261).set,a=n(7152),o=r.setImmediate?a(i,!1):i;s({global:!0,bind:!0,enumerable:!0,forced:r.setImmediate!==o},{setImmediate:o})},6229:function(e,t,n){"use strict";var s=n(8052),r=n(1702),i=n(1340),a=n(8053),o=URLSearchParams,l=o.prototype,u=r(l.append),c=r(l["delete"]),h=r(l.forEach),d=r([].push),p=new o("a=1&a=2&b=3");p["delete"]("a",1),p["delete"]("b",void 0),p+""!=="a=2"&&s(l,"delete",(function(e){var t=arguments.length,n=t<2?void 0:arguments[1];if(t&&void 0===n)return c(this,e);var s=[];h(this,(function(e,t){d(s,{key:t,value:e})})),a(t,1);var r,o=i(e),l=i(n),p=0,f=0,g=!1,m=s.length;while(p<m)r=s[p++],g||r.key===o?(g=!0,c(this,r.key)):f++;while(f<m)r=s[f++],r.key===o&&r.value===l||u(this,r.key,r.value)}),{enumerable:!0,unsafe:!0})},7330:function(e,t,n){"use strict";var s=n(8052),r=n(1702),i=n(1340),a=n(8053),o=URLSearchParams,l=o.prototype,u=r(l.getAll),c=r(l.has),h=new o("a=1");!h.has("a",2)&&h.has("a",void 0)||s(l,"has",(function(e){var t=arguments.length,n=t<2?void 0:arguments[1];if(t&&void 0===n)return c(this,e);var s=u(this,e);a(t,1);var r=i(n),o=0;while(o<s.length)if(s[o++]===r)return!0;return!1}),{enumerable:!0,unsafe:!0})},2062:function(e,t,n){"use strict";var s=n(9781),r=n(1702),i=n(7045),a=URLSearchParams.prototype,o=r(a.forEach);s&&!("size"in a)&&i(a,"size",{get:function(){var e=0;return o(this,(function(){e++})),e},configurable:!0,enumerable:!0})},8773:function(e,t,n){"use strict";n.d(t,{NqF:function(){return Tl},Xhn:function(){return s},BHj:function(){return Kp},FBF:function(){return EI},iD$:function(){return Ya}});var s={};n.r(s),n.d(s,{draw:function(){return tl},fromPixels:function(){return nl},fromPixelsAsync:function(){return Yo},toPixels:function(){return el}});var r={};n.r(r),n.d(r,{assertParamsValid:function(){return il},computeFlatOffset:function(){return xl},computeOutShape:function(){return ol},getNormalizedAxes:function(){return hl},isSliceContinous:function(){return bl},maskToAxes:function(){return al},parseSliceParams:function(){return yl},sliceInfo:function(){return vl},startForAxis:function(){return gl},startIndicesWithElidedDims:function(){return dl},stopForAxis:function(){return ml},stopIndicesWithElidedDims:function(){return pl},stridesForAxis:function(){return fl},stridesWithElidedDims:function(){return ll}});var i={};n.r(i),n.d(i,{collectGatherOpShapeInfo:function(){return ag},computeOutShape:function(){return ig},segOpComputeOptimalWindowSize:function(){return rg}});var a={};n.r(a),n.d(a,{ERF_A1:function(){return kf},ERF_A2:function(){return If},ERF_A3:function(){return Cf},ERF_A4:function(){return Sf},ERF_A5:function(){return $f},ERF_P:function(){return wf},PARALLELIZE_THRESHOLD:function(){return of},RowPartitionType:function(){return tf},SELU_SCALE:function(){return vf},SELU_SCALEALPHA:function(){return yf},applyActivation:function(){return kd},assertAndGetBroadcastShape:function(){return bo},assertAxesAreInnerMostDims:function(){return Mc},assertParamsConsistent:function(){return Qp},assignToTypedArray:function(){return _f},axesAreInnerMostDims:function(){return Fc},calculateShapes:function(){return xf},checkEinsumDimSizes:function(){return Wf},checkPadOnDimRoundingMode:function(){return Kl},combineLocations:function(){return Dc},combineRaggedTensorToTensorShapes:function(){return nf},complexWithEvenIndex:function(){return Ef},complexWithOddIndex:function(){return Rf},computeConv2DInfo:function(){return _l},computeConv3DInfo:function(){return Fl},computeDefaultPad:function(){return Ll},computeDilation2DInfo:function(){return El},computeOptimalWindowSize:function(){return lf},computeOutAndReduceShapes:function(){return Oc},computeOutShape:function(){return ef},computePool2DInfo:function(){return Rl},computePool3DInfo:function(){return Al},convertConv2DDataFormat:function(){return jl},decodeEinsumEquation:function(){return Pf},eitherStridesOrDilationsAreOne:function(){return Gl},expandShapeToKeepDim:function(){return Lc},exponent:function(){return Df},exponents:function(){return Ff},fromStringArrayToUint8:function(){return lg},fromUint8ToStringArray:function(){return og},getAxesPermutation:function(){return zc},getBroadcastDims:function(){return go},getComplexWithIndex:function(){return Af},getEinsumComputePath:function(){return Uf},getEinsumPermutation:function(){return Bf},getFusedBiasGradient:function(){return wd},getFusedDyActivation:function(){return vd},getImageCenter:function(){return uf},getInnerMostAxes:function(){return Bc},getPermuted:function(){return hf},getRaggedRank:function(){return rf},getReductionAxes:function(){return mo},getReshaped:function(){return cf},getReshapedPermuted:function(){return df},getRowPartitionTypesHelper:function(){return sf},getSliceBeginCoords:function(){return pf},getSliceSize:function(){return ff},getSparseFillEmptyRowsIndicesDenseShapeMismatch:function(){return jf},getSparseFillEmptyRowsNegativeIndexErrorMessage:function(){return Kf},getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:function(){return qf},getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:function(){return Yf},getSparseReshapeInputOutputMismatchErrorMessage:function(){return Qf},getSparseReshapeInputOutputMultipleErrorMessage:function(){return Zf},getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:function(){return Xf},getSparseReshapeNegativeOutputDimErrorMessage:function(){return Jf},getSparseSegmentReductionIndicesOutOfRangeErrorMessage:function(){return sg},getSparseSegmentReductionNegativeSegmentIdsErrorMessage:function(){return eg},getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:function(){return tg},getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:function(){return ng},getUndoAxesPermutation:function(){return Pc},isIdentityPermutation:function(){return Vf},log:function(){return Ns},mergeRealAndImagArrays:function(){return Nf},prepareAndValidate:function(){return gf},prepareSplitSize:function(){return Hf},segment_util:function(){return i},shouldFuse:function(){return Id},slice_util:function(){return r},splitRealAndImagArrays:function(){return Tf},stridesOrDilationsArePositive:function(){return Hl},tupleValuesAreOne:function(){return Vl},upcastType:function(){return Br},validateDefaultValueShape:function(){return af},validateInput:function(){return bf},validateUpdateShape:function(){return mf},warn:function(){return $s}});var o={};n.r(o),n.d(o,{addImpl:function(){return SN},bincountImpl:function(){return AT},bincountReduceImpl:function(){return _T},bitwiseAndImpl:function(){return OT},castImpl:function(){return vN},ceilImpl:function(){return BT},concatImpl:function(){return KT},equalImpl:function(){return KE},expImpl:function(){return rR},expm1Impl:function(){return uR},floorImpl:function(){return RR},gatherNdImpl:function(){return BR},gatherV2Impl:function(){return VR},greaterEqualImpl:function(){return XR},greaterImpl:function(){return jR},lessEqualImpl:function(){return uA},lessImpl:function(){return aA},linSpaceImpl:function(){return dA},logImpl:function(){return gA},maxImpl:function(){return _A},maximumImpl:function(){return OA},minimumImpl:function(){return ZA},multiplyImpl:function(){return ME},negImpl:function(){return c_},notEqualImpl:function(){return k_},prodImpl:function(){return z_},raggedGatherImpl:function(){return q_},raggedRangeImpl:function(){return Z_},raggedTensorToTensorImpl:function(){return iF},rangeImpl:function(){return lF},rsqrtImpl:function(){return $F},scatterImpl:function(){return EF},sigmoidImpl:function(){return hN},simpleAbsImpl:function(){return ON},sliceImpl:function(){return $T},sparseFillEmptyRowsImpl:function(){return tD},sparseReshapeImpl:function(){return rD},sparseSegmentReductionImpl:function(){return oD},sqrtImpl:function(){return mD},staticRegexReplaceImpl:function(){return ID},stridedSliceImpl:function(){return TD},stringNGramsImpl:function(){return _D},stringSplitImpl:function(){return LD},stringToHashBucketFastImpl:function(){return PD},subImpl:function(){return gR},tileImpl:function(){return qD},topKImpl:function(){return QD},transposeImpl:function(){return GN},uniqueImpl:function(){return dO}});n(7658);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const l=1e-7,u=1e-4;class c{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class h{refCount(e){return d("refCount")}incRef(e){return d("incRef")}timerAvailable(){return!0}time(e){return d("time")}read(e){return d("read")}readSync(e){return d("readSync")}readToGPU(e,t){return d("readToGPU")}numDataIds(){return d("numDataIds")}disposeData(e,t){return d("disposeData")}write(e,t,n){return d("write")}move(e,t,n,s,r){return d("move")}createTensorFromGPUData(e,t,n){return d("createTensorFromGPUData")}memory(){return d("memory")}floatPrecision(){return d("floatPrecision")}epsilon(){return 32===this.floatPrecision()?l:u}dispose(){return d("dispose")}}function d(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}n(2087),n(1439),n(7585),n(5315);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function p(e){let t=e.length,n=0;while(t>0)n=Math.random()*t|0,t--,m(e,t,n)}function f(e,t,n){return Math.max(e,Math.min(t,n))}function g(e){return e%2===0?e:e+1}function m(e,t,n){const s=e[t];e[t]=e[n],e[n]=s}function b(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function x(e,t){if(!e)throw new Error("string"===typeof t?t:t())}function y(e,t,n=""){x(k(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function v(e){x(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function w(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function k(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function I(e){return e%1===0}function C(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function S(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function $(e,t=(e=>0),n,s){return new Promise(((r,i)=>{let a=0;const o=()=>{if(e())return void r();a++;const l=t(a);null!=n&&a>=n?i():null!=s?s(o,l):setTimeout(o,l)};o()}))}function N(e,t){let n=1,s=-1;for(let i=0;i<e.length;++i)if(e[i]>=0)n*=e[i];else if(-1===e[i]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${i}`);s=i}else if(e[i]<0)throw Error(`Shapes can not be < 0. Found ${e[i]} at dim ${i}`);if(-1===s){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const r=e.slice();return r[s]=t/n,r}function T(e,t){const n=t.length;return e=null==e?t.map(((e,t)=>t)):[].concat(e),x(e.every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),x(e.every((e=>I(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function E(e,t){const n=[],s=[],r=null!=t&&Array.isArray(t)&&0===t.length,i=null==t||r?null:T(t,e).sort();let a=0;for(let o=0;o<e.length;++o){if(null!=i){if(i[a]===o&&1!==e[o])throw new Error(`Can't squeeze axis ${o} since its dim '${e[o]}' is not 1`);(null==i[a]||i[a]>o)&&1===e[o]&&(n.push(e[o]),s.push(o)),i[a]<=o&&a++}1!==e[o]&&(n.push(e[o]),s.push(o))}return{newShape:n,keptDims:s}}function R(e,t){return A(e,t)}function A(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function _(e,t){for(let n=0;n<e.length;n++){const s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function F(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function D(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function O(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function L(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function M(e){return"string"===typeof e||e instanceof String}function z(e){return"boolean"===typeof e}function P(e){return"number"===typeof e}function B(e){return Array.isArray(e)?B(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":P(e)?"float32":M(e)?"string":z(e)?"bool":"float32"}function W(e){return!!(e&&e.constructor&&e.call&&e.apply)}function U(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function V(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function G(e,t,n,s=!1){const r=new Array;if(1===t.length){const i=t[0]*(s?2:1);for(let t=0;t<i;t++)r[t]=n[e+t]}else{const i=t[0],a=t.slice(1),o=a.reduce(((e,t)=>e*t))*(s?2:1);for(let t=0;t<i;t++)r[t]=G(e+t*o,a,n,s)}return r}function H(e,t,n=!1){if(0===e.length)return t[0];const s=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===s)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return G(0,e,t,n)}function j(e,t){if(Array.isArray(e))return e;if("float32"===t)return e instanceof Float32Array?e:new Float32Array(e);if("int32"===t)return e instanceof Int32Array?e:new Int32Array(e);if("bool"===t||"string"===t)return Uint8Array.from(new Int32Array(e));throw new Error(`Unknown dtype ${t}`)}function K(e,t){const n=q(e,t);for(let s=0;s<n.length;s++)n[s]=1;return n}function q(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function X(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return H(e,new Float32Array(n));if("int32"===t)return H(e,new Int32Array(n));if("bool"===t)return H(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function J(e){e.forEach((t=>{x(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Y(e,t,n){if(0===t)return 0;if(1===t)return e[0];let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=n[r]*e[r];return s}function Z(e,t,n){if(0===t)return[];if(1===t)return[e];const s=new Array(t);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(e/n[r]),e-=s[r]*n[r];return s[s.length-1]=e,s}function Q(e){return e&&e.then&&"function"===typeof e.then}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ee="tfjsflags";class te{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=ne,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(ie().getBool("IS_TEST")||ie().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];ie().getBool("IS_TEST")||ie().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Q(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getString(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if("undefined"===typeof this.global||"undefined"===typeof this.global.location||"undefined"===typeof this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);if(ee in e){const t=e[ee].split(",");t.forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=re(t,n)}))}}}function ne(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(se(t,n[0],n[1]),n.join("=")))),t}function se(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function re(e,t){const n=t.toLowerCase();return"true"===n||"false"===n?"true"===n:""+ +n===n?+n:t}function ie(){return oe}let ae,oe=null;function le(e){oe=e}function ue(){if(null==ae){let e;if("undefined"!==typeof window)e=window;else if("undefined"!==typeof n.g)e=n.g;else if("undefined"!==typeof process)e=process;else{if("undefined"===typeof self)throw new Error("Could not find a global object");e=self}ae=e}return ae}function ce(){const e=ue();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}function he(e,t){const n=ce();if(n.has(e))return n.get(e);{const s=t();return n.set(e,s),n.get(e)}}const de="Abs",pe="Acos",fe="Acosh",ge="Add",me="AddN",be="All",xe="Any",ye="ArgMax",ve="ArgMin",we="Asin",ke="Asinh",Ie="Atan",Ce="Atanh",Se="Atan2",$e="AvgPool",Ne="AvgPoolGrad",Te="AvgPool3D",Ee="AvgPool3DGrad",Re="BatchMatMul",Ae="BatchToSpaceND",_e="Bincount",Fe="BitwiseAnd",De="BroadcastTo",Oe="BroadcastArgs",Le="Cast",Me="Ceil",ze="ClipByValue",Pe="Complex",Be="ComplexAbs",We="Concat",Ue="Conv2D",Ve="Conv2DBackpropFilter",Ge="Conv2DBackpropInput",He="Conv3D",je="Conv3DBackpropFilterV2",Ke="Conv3DBackpropInputV2",qe="Cos",Xe="Cosh",Je="Cumprod",Ye="Cumsum",Ze="CropAndResize",Qe="DenseBincount",et="DepthToSpace",tt="DepthwiseConv2dNative",nt="DepthwiseConv2dNativeBackpropFilter",st="DepthwiseConv2dNativeBackpropInput",rt="Diag",it="Dilation2D",at="Dilation2DBackpropInput",ot="Dilation2DBackpropFilter",lt="Draw",ut="RealDiv",ct="Einsum",ht="Elu",dt="EluGrad",pt="Erf",ft="Equal",gt="Exp",mt="ExpandDims",bt="Expm1",xt="FFT",yt="Fill",vt="FlipLeftRight",wt="Floor",kt="FloorDiv",It="FusedBatchNorm",Ct="GatherV2",St="GatherNd",$t="Greater",Nt="GreaterEqual",Tt="Identity",Et="IFFT",Rt="Imag",At="IsFinite",_t="IsInf",Ft="IsNan",Dt="LeakyRelu",Ot="Less",Lt="LessEqual",Mt="LinSpace",zt="Log",Pt="Log1p",Bt="LogicalAnd",Wt="LogicalNot",Ut="LogicalOr",Vt="LogSoftmax",Gt="LRN",Ht="LRNGrad",jt="Max",Kt="Maximum",qt="MaxPool",Xt="MaxPoolGrad",Jt="MaxPool3D",Yt="MaxPool3DGrad",Zt="MaxPoolWithArgmax",Qt="Mean",en="Min",tn="Minimum",nn="MirrorPad",sn="Mod",rn="Multinomial",an="Multiply",on="Neg",ln="NotEqual",un="NonMaxSuppressionV3",cn="NonMaxSuppressionV4",hn="NonMaxSuppressionV5",dn="OnesLike",pn="OneHot",fn="Pack",gn="PadV2",mn="Pow",bn="Prelu",xn="Prod",yn="RaggedGather",vn="RaggedRange",wn="RaggedTensorToTensor",kn="Range",In="Real",Cn="Reciprocal",Sn="Relu",$n="Reshape",Nn="ResizeNearestNeighbor",Tn="ResizeNearestNeighborGrad",En="ResizeBilinear",Rn="ResizeBilinearGrad",An="Relu6",_n="Reverse",Fn="Round",Dn="Rsqrt",On="ScatterNd",Ln="TensorScatterUpdate",Mn="SearchSorted",zn="Select",Pn="Selu",Bn="Slice",Wn="Sin",Un="Sinh",Vn="Sign",Gn="Sigmoid",Hn="Softplus",jn="Sqrt",Kn="Sum",qn="SpaceToBatchND",Xn="SplitV",Jn="Softmax",Yn="SparseFillEmptyRows",Zn="SparseReshape",Qn="SparseSegmentMean",es="SparseSegmentSum",ts="SparseToDense",ns="SquaredDifference",ss="Square",rs="StaticRegexReplace",is="StridedSlice",as="StringNGrams",os="StringSplit",ls="StringToHashBucketFast",us="Sub",cs="Tan",hs="Tanh",ds="Tile",ps="TopK",fs="Transform",gs="Transpose",ms="Unique",bs="Unpack",xs="UnsortedSegmentSum",ys="ZerosLike",vs="Step",ws="FromPixels",ks="RotateWithOffset",Is="_FusedMatMul",Cs="FusedConv2D",Ss="FusedDepthwiseConv2D";
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $s(...e){ie().getBool("IS_TEST")||ie().getBool("PROD")||console.warn(...e)}function Ns(...e){ie().getBool("IS_TEST")||ie().getBool("PROD")||console.log(...e)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Ts=he("kernelRegistry",(()=>new Map)),Es=he("gradRegistry",(()=>new Map));function Rs(e,t){const n=Os(e,t);return Ts.get(n)}function As(e){return Es.get(e)}function _s(e){const t=Ts.entries(),n=[];while(1){const{done:s,value:r}=t.next();if(s)break;const[i,a]=r,[o]=i.split("_");o===e&&n.push(a)}return n}function Fs(e){const{kernelName:t,backendName:n}=e,s=Os(t,n);Ts.has(s)&&$s(`The kernel '${t}' for backend '${n}' is already registered`),Ts.set(s,e)}function Ds(e){const{kernelName:t}=e;Es.has(t)&&ie().getBool("DEBUG")&&$s(`Overriding the gradient for '${t}'`),Es.set(t,e)}function Os(e,t){return`${t}_${e}`}
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ls(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}var Ms=n(9438),zs=n.n(Ms);
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Ps=zs()||Ms;function Bs(e){return Ps.fromString(e,!0,16)}const Ws=Bs("c3a5c85c97cb3127"),Us=Bs("b492b66fbe98f273"),Vs=Bs("9ae16a3b2f90404f");function Gs(e){return e.xor(e.shru(47))}function Hs(e,t,n){const s=e.slice(t,t+n);return Ps.fromBytes(Array.from(s),!0,!0)}function js(e,t){return Hs(e,t,8)}function Ks(e,t){return Hs(e,t,4)}function qs(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Xs(e,t,n=Bs("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function Js(e,t,n,s,r,i){r=r.add(e),i=qs(i.add(r).add(s),21);const a=r;return r=r.add(t),r=r.add(n),i=i.add(qs(r,44)),[r.add(s),i.add(a)]}function Ys(e,t,n,s){return Js(js(e,t),js(e,t+8),js(e,t+16),js(e,t+24),n,s)}function Zs(e,t=e.length){if(t>=8){const n=Vs.add(2*t),s=js(e,0).add(Vs),r=js(e,t-8),i=qs(r,37).mul(n).add(s),a=qs(s,25).add(r).mul(n);return Xs(i,a,n)}if(t>=4){const n=Vs.add(2*t),s=Ks(e,0);return Xs(s.shl(3).add(t),Ks(e,t-4),n)}if(t>0){const n=e[0],s=e[t>>1],r=e[t-1],i=n+(s<<8),a=t+(r<<2);return Gs(Vs.mul(i).xor(Ws.mul(a))).mul(Vs)}return Vs}function Qs(e,t=e.length){const n=Vs.add(2*t),s=js(e,0).mul(Us),r=js(e,8),i=js(e,t-8).mul(n),a=js(e,t-16).mul(Vs);return Xs(qs(s.add(r),43).add(qs(i,30)).add(a),s.add(qs(r.add(Vs),18)).add(i),n)}function er(e,t=e.length){const n=Vs.add(2*t),s=js(e,0).mul(Vs),r=js(e,8),i=js(e,t-8).mul(n),a=js(e,t-16).mul(Vs),o=qs(s.add(r),43).add(qs(i,30)).add(a),l=Xs(o,s.add(qs(r.add(Vs),18)).add(i),n),u=js(e,16).mul(n),c=js(e,24),h=o.add(js(e,t-32)).mul(n),d=l.add(js(e,t-24)).mul(n);return Xs(qs(u.add(c),43).add(qs(h,30)).add(d),u.add(qs(c.add(s),18)).add(h),n)}function tr(e,t=e.length){const n=Ps.fromNumber(81,!0);if(t<=32)return t<=16?Zs(e,t):Qs(e,t);if(t<=64)return er(e,t);let s=n,r=n.mul(Us).add(113),i=Gs(r.mul(Vs).add(113)).mul(Vs),a=[Ps.UZERO,Ps.UZERO],o=[Ps.UZERO,Ps.UZERO];s=s.mul(Vs).add(js(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{s=qs(s.add(r).add(a[0]).add(js(e,l+8)),37).mul(Us),r=qs(r.add(a[1]).add(js(e,l+48)),42).mul(Us),s=s.xor(o[1]),r=r.add(a[0]).add(js(e,l+40)),i=qs(i.add(o[0]),33).mul(Us),a=Ys(e,l,a[1].mul(Us),s.add(o[0])),o=Ys(e,l+32,i.add(o[1]),r.add(js(e,l+16))),[i,s]=[s,i],l+=64}while(l!==u);const h=Us.add(i.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),a[0]=a[0].add(o[0]),o[0]=o[0].add(a[0]),s=qs(s.add(r).add(a[0]).add(js(e,l+8)),37).mul(h),r=qs(r.add(a[1]).add(js(e,l+48)),42).mul(h),s=s.xor(o[1].mul(9)),r=r.add(a[0].mul(9).add(js(e,l+40))),i=qs(i.add(o[0]),33).mul(h),a=Ys(e,l,a[1].mul(h),s.add(o[0])),o=Ys(e,l+32,i.add(o[1]),r.add(js(e,l+16))),[i,s]=[s,i],Xs(Xs(a[0],o[0],h).add(Gs(r).mul(Ws)).add(i),Xs(a[1],o[1],h).add(s),h)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nr(e,t){return"string"===t?ar(e):rr([e],t)}function sr(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}function rr(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ur(e)),ie().getBool("DEBUG")&&_(e,t),sr(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function ir(){return ie().platform.now()}function ar(e,t="utf-8"){return t=t||"utf-8",ie().platform.encode(e,t)}function or(e,t="utf-8"){return t=t||"utf-8",ie().platform.decode(e,t)}function lr(e){return null!=ie().platform.isTypedArray?ie().platform.isTypedArray(e):Ls(e)}function ur(e,t=[],n=!1){if(null==t&&(t=[]),"boolean"===typeof e||"number"===typeof e||"string"===typeof e||Q(e)||null==e||lr(e)&&n)t.push(e);else if(Array.isArray(e)||lr(e))for(let s=0;s<e.length;++s)ur(e[s],t,n);else{let s=-1;for(const t of Object.keys(e))/^([1-9]+[0-9]*|0)$/.test(t)&&(s=Math.max(s,Number(t)));for(let r=0;r<=s;r++)ur(e[r],t,n)}return t}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class cr{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new dr)}profileKernel(e,t,n){let s;const r=()=>{s=n()};let i;const a=ir();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(r);else{r();for(const e of s)e.dataSync();i=Promise.resolve({kernelMs:ir()-a})}if(ie().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let l=0;l<s.length;l++){const t=s[l];t.data().then((n=>{hr(n,t.dtype,e)}))}const o={kernelName:e,outputs:s,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))};return o}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:i}=e;n.forEach((e=>{Promise.all([e.data(),s,i]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function hr(e,t,n){if("float32"!==t)return!1;for(let s=0;s<e.length;s++){const t=e[s];if(isNaN(t)||!isFinite(t))return console.warn(`Found ${t} in the result of '${n}'`),!0}return!1}class dr{logKernelProfile(e,t,n,s,r,i){const a="number"===typeof s?S(`${s}ms`,9):s["error"],o=S(e,25),l=t.rank,u=t.size,c=S(t.shape.toString(),14);let h="";for(const d in r){const e=r[d];if(null!=e){const n=e.shape||t.shape,s=n.length;h+=`${d}: ${s}D ${s>0?n:""} `}}console.log(`%c${o}\t%c${a}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pr(e,t,n){const s={},r={};for(let l=0;l<t.length;l++)s[t[l].id]=!0;for(let l=0;l<e.length;l++){const n=e[l],i=n.inputs;for(const e in i){const a=i[e];let o=!1;for(let e=0;e<t.length;e++)if(s[a.id]){n.outputs.forEach((e=>s[e.id]=!0)),o=!0,r[n.id]=!0;break}if(o)break}}const i={};i[n.id]=!0;const a={};for(let l=e.length-1;l>=0;l--){const t=e[l],n=t.inputs;for(let e=0;e<t.outputs.length;e++)if(i[t.outputs[e].id]){for(const e in n)i[n[e].id]=!0,a[t.id]=!0;break}}const o=[];for(let l=0;l<e.length;l++){const t=e[l];if(r[t.id]&&a[t.id]){const e={};for(const r in t.inputs){const n=t.inputs[r];s[n.id]&&(e[r]=n)}const n=Object.assign({},t);n.inputs=e,n.outputs=t.outputs,o.push(n)}}return o}function fr(e,t,n,s){for(let r=t.length-1;r>=0;r--){const i=t[r],a=[];if(i.outputs.forEach((t=>{const n=e[t.id];null!=n?a.push(n):a.push(null)})),null==i.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${i.kernelName}.`);const o=i.gradient(a);for(const t in i.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[t]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);const a=i.inputs[t];if(!k(r.shape,a.shape))throw new Error(`Error in gradient for op ${i.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${a.shape}'`);if(null==e[a.id])e[a.id]=r;else{const t=e[a.id];e[a.id]=s(t,r),t.dispose()}}}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const gr=20,mr=3,br=7;function xr(e,t,n,s){const r=V(t),i=yr(e,t,n,r),a=t.length,o=kr(e,t,n,r,i),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${a}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function yr(e,t,n,s){const r=w(t),i=s[s.length-1],a=new Array(i).fill(0),o=t.length,l="complex64"===n?Ir(e):e;if(o>1)for(let u=0;u<r/i;u++){const e=u*i;for(let t=0;t<i;t++)a[t]=Math.max(a[t],vr(l[e+t],0,n).length)}return a}function vr(e,t,n){let s;return s=Array.isArray(e)?`${parseFloat(e[0].toFixed(br))} + ${parseFloat(e[1].toFixed(br))}j`:M(e)?`'${e}'`:"bool"===n?wr(e):parseFloat(e.toFixed(br)).toString(),S(s,t)}function wr(e){return 0===e?"false":"true"}function kr(e,t,n,s,r,i=!0){const a="complex64"===n?2:1,o=t[0],l=t.length;if(0===l){if("complex64"===n){const t=Ir(e);return[vr(t[0],0,n)]}return"bool"===n?[wr(e[0])]:[e[0].toString()]}if(1===l){if(o>gr){const t=mr*a;let s=Array.from(e.slice(0,t)),i=Array.from(e.slice((o-mr)*a,o*a));return"complex64"===n&&(s=Ir(s),i=Ir(i)),["["+s.map(((e,t)=>vr(e,r[t],n))).join(", ")+", ..., "+i.map(((e,t)=>vr(e,r[o-mr+t],n))).join(", ")+"]"]}const t="complex64"===n?Ir(e):Array.from(e);return["["+t.map(((e,t)=>vr(e,r[t],n))).join(", ")+"]"]}const u=t.slice(1),c=s.slice(1),h=s[0]*a,d=[];if(o>gr){for(let t=0;t<mr;t++){const s=t*h,i=s+h;d.push(...kr(e.slice(s,i),u,n,c,r,!1))}d.push("...");for(let t=o-mr;t<o;t++){const s=t*h,i=s+h;d.push(...kr(e.slice(s,i),u,n,c,r,t===o-1))}}else for(let g=0;g<o;g++){const t=g*h,s=t+h;d.push(...kr(e.slice(t,s),u,n,c,r,g===o-1))}const p=2===l?",":"";d[0]="["+(o>0?d[0]+p:"");for(let g=1;g<d.length-1;g++)d[g]=" "+d[g]+p;let f=",\n";for(let g=2;g<l;g++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(i?"":f),d}function Ir(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Cr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=w(e),null!=n){const e=n.length;x(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||A(t,this.size),this.strides=V(e)}set(e,...t){0===t.length&&(t=[0]),x(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const s of e){if(s<0||s>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let s=0;s<e.length-1;++s)n+=this.strides[s]*e[s];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Sr().makeTensor(this.values,this.shape,this.dtype)}}let Sr=null,$r=null,Nr=null;function Tr(e){Sr=e}function Er(e){$r=e}function Rr(e){Nr=e}class Ar{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=w(e),this.strides=V(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return $r.buffer(this.shape,this.dtype,e)}bufferSync(){return $r.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return H(this.shape,e,"complex64"===this.dtype)}arraySync(){return H(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Sr().read(this.dataId);if("string"===this.dtype){const n=await e;try{return n.map((e=>or(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Sr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Sr().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>or(e)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Sr().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Sr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return $r.print(this,e)}clone(){return this.throwIfDisposed(),$r.clone(this)}toString(e=!1){const t=this.dataSync();return xr(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),$r.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Sr().makeVariable(this,e,t,n)}}function _r(){return he("Tensor",(()=>Ar))}Object.defineProperty(Ar,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),_r();class Fr extends Ar{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!k(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Sr().disposeTensor(this),this.dataId=e.dataId,Sr().incRef(this,null)}dispose(){Sr().disposeVariable(this),this.isDisposedInternal=!0}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var Dr,Or,Lr,Mr,zr;Object.defineProperty(Fr,Symbol.hasInstance,{value:e=>e instanceof Ar&&null!=e.assign&&e.assign instanceof Function}),function(e){e["R0"]="R0",e["R1"]="R1",e["R2"]="R2",e["R3"]="R3",e["R4"]="R4",e["R5"]="R5",e["R6"]="R6"}(Dr||(Dr={})),function(e){e["float32"]="float32",e["int32"]="int32",e["bool"]="int32",e["complex64"]="complex64"}(Or||(Or={})),function(e){e["float32"]="float32",e["int32"]="int32",e["bool"]="bool",e["complex64"]="complex64"}(Lr||(Lr={})),function(e){e["float32"]="float32",e["int32"]="float32",e["bool"]="float32",e["complex64"]="complex64"}(Mr||(Mr={})),function(e){e["float32"]="complex64",e["int32"]="complex64",e["bool"]="complex64",e["complex64"]="complex64"}(zr||(zr={}));const Pr={float32:Mr,int32:Or,bool:Lr,complex64:zr};function Br(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Pr[e][t]}function Wr(e){return Br(e,"int32")}function Ur(e){return null!=e&&"object"===typeof e&&"texture"in e&&e.texture instanceof WebGLTexture}function Vr(e){return"undefined"!==typeof GPUBuffer&&null!=e&&"object"===typeof e&&"buffer"in e&&e.buffer instanceof GPUBuffer}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Gr(e,t){if(e.dtype===t.dtype)return[e,t];const n=Br(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Hr(e,t){return t.some((t=>t.id===e.id))}function jr(e){const t=[],n=new Set;return Kr(e,t,n),t}function Kr(e,t,n){if(null==e)return;if(e instanceof Ar)return void t.push(e);if(!qr(e))return;const s=e;for(const r in s){const e=s[r];n.has(e)||(n.add(e),Kr(e,t,n))}}function qr(e){return Array.isArray(e)||"object"===typeof e}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xr(e){return null!=e.kernelName}class Jr{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Yr{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Jr}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],s=await this.initializeBackend(n).success;if(s)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?($s(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e),s=n?await t:t;if(!s)return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new cr(this.backendInstance),!0}setupRegisteredKernels(){const e=_s(this.backendName);e.forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){const t=_s(e);t.forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof h||"function"!==typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,s=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,$s(`Initialization of backend ${e} failed`),$s(n.stack||n.message)),!1)));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}}catch(n){return $s(`Initialization of backend ${e} failed`),$s(n.stack||n.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),i=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,s=null;if(null==t){if("function"!==typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!==typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!==typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(s){throw t(),s}}nextTensorId(){return Yr.nextTensorId++}nextVariableId(){return Yr.nextVariableId++}clone(e){const t=ei.runKernel(Tt,{x:e}),n={x:e},s=e=>({x:()=>{const t="float32",n={x:e},s={dtype:t};return ei.runKernel(Le,n,s)}}),r=[];return this.addTapeNode(this.state.activeScope.name,n,[t],s,r,{}),t}runKernel(e,t,n){null==this.backendName&&this.backend;const s=null!=Rs(e,this.backendName);if(!s)throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const s=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],a=s-t-r-i;if(a>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${a} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const s=this.isTapeOn(),r=this.state.numBytes,i=this.state.numTensors;let a,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=Xr(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Xr(e)){const{kernelName:t,inputs:r,attrs:i}=e;null==this.backendName&&this.backend;const l=Rs(t,this.backendName);x(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),a=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:r,attrs:i,backend:this.backend});const a=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,a);const u=a.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(s){const e=this.getTensorsForGradient(t,r,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,r=e=>{s&&(n=e.map((e=>this.keep(this.clone(e)))))};a=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=Xr(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,(()=>a())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=a()})),s&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const s=As(e);if(null!=s){const e=s.inputsToSave||[],r=s.outputsToSave||[];let i;s.saveAllInputs?(x(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),i=Object.keys(t).map((e=>t[e]))):i=e.map((e=>t[e]));const a=n.filter(((e,t)=>r[t]));return i.concat(a)}return[]}makeTensor(e,t,n,s){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;"string"===n&&M(e[0])&&(r=e.map((e=>ar(e))));const i=s.write(r,t,n),a=new Ar(t,n,i,this.nextTensorId());if(this.trackTensor(a,s),"string"===n){const e=this.state.tensorInfo.get(i),t=L(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return a}makeTensorFromDataId(e,t,n,s){n=n||"float32";const r={dataId:e,shape:t,dtype:n};return this.makeTensorFromTensorInfo(r,s)}makeTensorFromTensorInfo(e,t){const{dataId:n,shape:s,dtype:r}=e,i=new Ar(s,r,n,this.nextTensorId());return this.trackTensor(i,t),i}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),null!=s&&s!==e.dtype&&(e=e.cast(s));const r=new Fr(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*O(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Fr||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*O(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const s of this.state.activeProfile.kernels)s.kernelTimeMs=await s.kernelTimeMs,s.extraInfo=await s.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,s,r,i){const a={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=As(e);null!=o&&(s=o.gradFunc),null!=s&&(a.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],s=q(e.size,e.dtype);return this.makeTensor(s,e.shape,e.dtype)}return e})),s(e.length>1?e:e[0],r,i))),this.state.activeTape.push(a)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=jr(e),n=new Set(t.map((e=>e.id)));for(let r=0;r<this.state.activeScope.track.length;r++){const e=this.state.activeScope.track[r];e.kept||n.has(e.id)||e.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==s.id||this.track(e)}))}gradients(e,t,n,s=!1){if(x(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));x(r instanceof Ar,(()=>"The result y returned by f() must be a tensor."));const i=pr(this.state.activeTape,t,r);if(!s&&0===i.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?Zr(r.shape):n,fr(e,i,(e=>this.tidy(e)),ti);const s=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:s}}))}customGrad(e){return x(W(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;x(t.every((e=>e instanceof Ar)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};t.forEach(((e,t)=>{s[t]=e}));const r=(s,r)=>(n=e(...t,r),x(n.value instanceof Ar,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),x(W(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),i=(e,s)=>{const r=n.gradFunc(e,s),i=Array.isArray(r)?r:[r];x(i.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),x(i.every((e=>e instanceof Ar)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const a={};return i.forEach(((e,t)=>{a[t]=()=>e})),a};return this.runKernelFunc({forwardFunc:r,backwardsFunc:i,inputs:s})}}readSync(e){const t=this.state.tensorInfo.get(e);return t.backend.readSync(e)}read(e){const t=this.state.tensorInfo.get(e);return t.backend.read(e)}readToGPU(e,t){const n=this.state.tensorInfo.get(e);return n.backend.readToGPU(e,t)}async time(e){const t=ir(),n=await this.backend.time(e);return n.wallMs=ir()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Jr;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Zr(e){const t=K(w(e),"float32");return ei.makeTensor(t,e,"float32")}function Qr(){const e=ue();if(null==e._tfengine){const t=new te(e);e._tfengine=new Yr(t)}return le(e._tfengine.ENV),Tr((()=>e._tfengine)),e._tfengine}Yr.nextTensorId=0,Yr.nextVariableId=0;const ei=Qr();function ti(e,t){const n={a:e,b:t};return ei.runKernel(ge,n)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ni(){return"undefined"!==typeof navigator&&null!=navigator}let si;function ri(e){if(void 0!==si)return si;if(e||ni()){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!==typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function ii(){return"undefined"!==typeof window&&null!=window.document||"undefined"!==typeof WorkerGlobalScope}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ai=ie();ai.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),ai.registerFlag("IS_BROWSER",(()=>ii())),ai.registerFlag("IS_NODE",(()=>"undefined"!==typeof process&&"undefined"!==typeof process.versions&&"undefined"!==typeof process.versions.node)),ai.registerFlag("IS_CHROME",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),ai.registerFlag("IS_SAFARI",(()=>"undefined"!==typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor))),ai.registerFlag("PROD",(()=>!1)),ai.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>ai.getBool("DEBUG"))),ai.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),ai.registerFlag("IS_TEST",(()=>!1)),ai.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>ai.getBool("DEBUG"))),ai.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),ai.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),ai.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));n(2801);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oi(e,t){let n=e;if(lr(e))return"string"===t?[]:[e.length];if(Ur(e)){const t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(Vr(e))return[e.buffer.size/(null==t?4:O(t))];if(!Array.isArray(e))return[];const s=[];while(Array.isArray(n)||lr(n)&&"string"!==t)s.push(n.length),n=n[0];return Array.isArray(e)&&ie().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&li(e,s,[]),s}function li(e,t,n){if(n=n||[],!Array.isArray(e)&&!lr(e))return void x(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));x(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),x(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const s=t.slice(1);for(let r=0;r<e.length;++r)li(e[r],s,n.concat(r))}function ui(e,t,n,s){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function ci(e,t,n,s="numeric"){if(e instanceof Ar)return ui(s,e.dtype,t,n),e;let r=B(e);if("string"!==r&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),ui(s,r,t,n),null==e||!lr(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e){const s=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${s}'`)}const i=oi(e,r);lr(e)||Array.isArray(e)||(e=[e]);const a=!0,o="string"!==r?rr(e,r):ur(e,[],a);return ei.makeTensor(o,i,r)}function hi(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);const r=e;return r.map(((e,r)=>ci(e,`${t}[${r}]`,n,s)))}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const di="__op";function pi(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=di;const r=(...e)=>{ei.startScope(n);try{const t=s(...e);return Q(t)&&console.error("Cannot return a Promise inside of tidy."),ei.endScope(t),t}catch(t){throw ei.endScope(null),t}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fi(e,t){const n=ci(e,"real","complex"),s=ci(t,"imag","complex");y(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:n,imag:s};return ei.runKernel(Pe,r)}const gi=pi({complex_:fi});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mi(e,t,n,s){if(null==s)s=B(e);else if("complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(Vr(e)||Ur(e)){if("float32"!==s&&"int32"!==s)throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return ei.backend.createTensorFromGPUData(e,t||n,s)}if(!lr(e)&&!Array.isArray(e)&&"number"!==typeof e&&"boolean"!==typeof e&&"string"!==typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){J(t);const e=w(t),s=w(n);x(e===s,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${s}`));for(let r=0;r<n.length;++r){const e=n[r],s=r!==n.length-1||e!==w(t.slice(r));x(n[r]===t[r]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return lr(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==s?rr(e,s):ur(e,[],!0),ei.makeTensor(e,t,s)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bi(e,t,n){const s=oi(e,n);return mi(e,t,s,n)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const xi={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class yi{static join(e){return new yi(e).slice()}constructor(e){if(this.shards=[],this.previousShardIndex=0,null==e)return;if(e instanceof Array||(e=[e]),e=e.map((e=>lr(e)?e.buffer:e)),0===e.length)return;this.bufferUniformSize=e[0].byteLength;let t=0;for(let n=0;n<e.length;n++){const s=e[n];n!==e.length-1&&s.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=t+s.byteLength;this.shards.push({buffer:s,start:t,end:r}),t=r}0===this.shards.length&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(e=0,t=this.byteLength){if(0===this.shards.length)return new ArrayBuffer(0);if(e=isNaN(Number(e))?0:e,t=isNaN(Number(t))?0:t,e=Math.max(0,e),t=Math.min(this.byteLength,t),t<=e)return new ArrayBuffer(0);const n=this.findShardForByte(e);if(-1===n)throw new Error(`Could not find start shard for byte ${e}`);const s=t-e,r=new ArrayBuffer(s),i=new Uint8Array(r);let a=0;for(let o=n;o<this.shards.length;o++){const n=this.shards[o],s=e+a,r=s-n.start,l=a,u=Math.min(t,n.end),c=u-n.start,h=new Uint8Array(n.buffer,r,c-r);if(i.set(h,l),a+=h.length,t<n.end)break}return r}findShardForByte(e){if(0===this.shards.length||e<0||e>=this.byteLength)return-1;if(null!=this.bufferUniformSize)return this.previousShardIndex=Math.floor(e/this.bufferUniformSize),this.previousShardIndex;function t(t){return e<t.start?-1:e>=t.end?1:0}if(0===t(this.shards[this.previousShardIndex]))return this.previousShardIndex;const n=vi(this.shards,t);return-1===n?-1:(this.previousShardIndex=n,this.previousShardIndex)}}function vi(e,t){let n=0,s=e.length;while(n<=s){const r=Math.floor((s-n)/2)+n,i=t(e[r]);if(0===i)return r;i<0?s=r:n=r+1}return-1}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const wi=4;async function ki(e,t){const n=[],s=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<r.length;++a){const i=r[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+wi*t.length,s=new Uint8Array(n);let r=0;for(let i=0;i<t.length;i++){const e=t[i],n=new Uint8Array(new Uint32Array([e.length]).buffer);s.set(n,r),r+=wi,s.set(e,r),r+=e.length}e(s)}));s.push(e)}else s.push(o.data());null!=t&&(l.group=t),n.push(l)}const i=await Promise.all(s);return{data:Ci(i),specs:n}}function Ii(e,t){const n=new yi(e),s={};let r,i=0;for(const a of t){const e=a.name,t=a.dtype,o=a.shape,l=w(o);let u;if("quantization"in a){const s=a.quantization;if("uint8"===s.dtype||"uint16"===s.dtype){if(!("min"in s)||!("scale"in s))throw new Error(`Weight ${a.name} with quantization ${s.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==s.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${s.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==t)throw new Error(`Weight ${a.name} is quantized with ${s.dtype} which only supports weights of type float32 not ${t}.`)}const o=xi[s.dtype],c=n.slice(i,i+l*o),h="uint8"===s.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===t)if("uint8"===s.dtype||"uint16"===s.dtype){u=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=t*s.scale+s.min}}else{if("float16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type float32.`);void 0===r&&(r=zi()),u=r(h)}else{if("int32"!==t)throw new Error(`Unsupported dtype in weight '${e}': ${t}`);if("uint8"!==s.dtype&&"uint16"!==s.dtype)throw new Error(`Unsupported quantization type ${s.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=Math.round(t*s.scale+s.min)}}i+=l*o}else if("string"===t){const e=w(a.shape);u=[];for(let t=0;t<e;t++){const e=new Uint32Array(n.slice(i,i+wi))[0];i+=wi;const t=new Uint8Array(n.slice(i,i+e));u.push(t),i+=e}}else{const r=xi[t],a=n.slice(i,i+l*r);if("float32"===t)u=new Float32Array(a);else if("int32"===t)u=new Int32Array(a);else if("bool"===t)u=new Uint8Array(a);else{if("complex64"!==t)throw new Error(`Unsupported dtype in weight '${e}': ${t}`);{u=new Float32Array(a);const t=new Float32Array(u.length/2),n=new Float32Array(u.length/2);for(let e=0;e<t.length;e++)t[e]=u[2*e],n[e]=u[2*e+1];const r=bi(t,o,"float32"),i=bi(n,o,"float32");s[e]=gi(r,i),r.dispose(),i.dispose()}}i+=l*r}"complex64"!==t&&(s[e]=bi(u,o,t))}return s}function Ci(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const s=new Uint8Array(t);let r=0;return n.forEach((e=>{s.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),s.buffer}const Si="undefined"!==typeof Buffer&&("undefined"===typeof Blob||"undefined"===typeof atob||"undefined"===typeof btoa);function $i(e){return Si?Buffer.byteLength(e,"utf8"):new Blob([e]).size}function Ni(e){if(Si)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let s=0,r=t.length;s<r;s++)n+=String.fromCharCode(t[s]);return btoa(n)}function Ti(e){if(Si){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let s=0;s<t.length;++s)n.set([t.charCodeAt(s)],s);return n.buffer}function Ei(e){return yi.join(e)}function Ri(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function Ai(e,t,n){const s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(s.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=t,s.weightData=n}return null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(s.initializerSignature=e.initializerSignature),s}async function _i(e,t){let n,s;return null!=e.weightsManifest&&([n,s]=await t(e.weightsManifest)),Ai(e,n,s)}function Fi(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:$i(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:$i(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:new yi(e.weightData).byteLength}}function Di(e){const t=[];for(const n of e)t.push(...n.weights);return t}function Oi(){const e=e=>{let t=e<<13,n=0;while(0===(8388608&t))n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let n=1024;n<2048;n++)t[n]=939524096+(n-1024<<13);return t}function Li(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function Mi(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function zi(){const e=Oi(),t=Li(),n=Mi();return s=>{const r=new ArrayBuffer(4*s.length),i=new Uint32Array(r);for(let a=0;a<s.length;a++){const r=s[a],o=e[n[r>>10]+(1023&r)]+t[r>>10];i[a]=o}return new Float32Array(r)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Pi{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Pi.instance&&(Pi.instance=new Pi),Pi.instance}static registerSaveRouter(e){Pi.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Pi.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Pi.getHandlers(e,"save")}static getLoadHandlers(e,t){return Pi.getHandlers(e,"load",t)}static getHandlers(e,t,n){const s=[],r="load"===t?Pi.getInstance().loadRouters:Pi.getInstance().saveRouters;return r.forEach((t=>{const r=t(e,n);null!==r&&s.push(r)})),s}}const Bi=e=>Pi.getSaveHandlers(e),Wi=(e,t)=>Pi.getLoadHandlers(e,t),Ui="tensorflowjs",Vi=1,Gi="models_store",Hi="model_info_store";function ji(){if(!ie().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Ki(e){const t=e.result;t.createObjectStore(Gi,{keyPath:"modelPath"}),t.createObjectStore(Hi,{keyPath:"modelPath"})}class qi{constructor(e){if(this.indexedDB=ji(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const s=this.indexedDB.open(Ui,Vi);s.onupgradeneeded=()=>Ki(s),s.onsuccess=()=>{const r=s.result;if(null==t){const t=r.transaction(Gi,"readonly"),s=t.objectStore(Gi),i=s.get(this.modelPath);i.onsuccess=()=>{if(null==i.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(i.result.modelArtifacts)},i.onerror=e=>(r.close(),n(i.error)),t.oncomplete=()=>r.close()}else{t.weightData=yi.join(t.weightData);const s=Fi(t),a=r.transaction(Hi,"readwrite");let o,l,u=a.objectStore(Hi);try{o=u.put({modelPath:this.modelPath,modelArtifactsInfo:s})}catch(i){return n(i)}o.onsuccess=()=>{l=r.transaction(Gi,"readwrite");const o=l.objectStore(Gi);let c;try{c=o.put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s})}catch(i){return n(i)}c.onsuccess=()=>e({modelArtifactsInfo:s}),c.onerror=e=>{u=a.objectStore(Hi);const t=u.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(c.error)),t.onerror=e=>(r.close(),n(c.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}}},s.onerror=e=>n(s.error)}))}}qi.URL_SCHEME="indexeddb://";const Xi=e=>ie().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(qi.URL_SCHEME)?Ji(e.slice(qi.URL_SCHEME.length)):null;function Ji(e){return new qi(e)}function Yi(e){return e.startsWith(qi.URL_SCHEME)?e.slice(qi.URL_SCHEME.length):e}Pi.registerSaveRouter(Xi),Pi.registerLoadRouter(Xi);class Zi{constructor(){this.indexedDB=ji()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Ui,Vi);n.onupgradeneeded=()=>Ki(n),n.onsuccess=()=>{const s=n.result,r=s.transaction(Hi,"readonly"),i=r.objectStore(Hi),a=i.getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(s.close(),t(a.error)),r.oncomplete=()=>s.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){return e=Yi(e),new Promise(((t,n)=>{const s=this.indexedDB.open(Ui,Vi);s.onupgradeneeded=()=>Ki(s),s.onsuccess=()=>{const r=s.result,i=r.transaction(Hi,"readwrite"),a=i.objectStore(Hi),o=a.get(e);let l;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const s=a.delete(e),i=()=>{l=r.transaction(Gi,"readwrite");const s=l.objectStore(Gi),i=s.delete(e);i.onsuccess=()=>t(o.result.modelArtifactsInfo),i.onerror=e=>n(o.error)};s.onsuccess=i,s.onerror=e=>(i(),r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),i.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}},s.onerror=e=>n(s.error)}))}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Qi="/",ea="tensorflowjs_models",ta="info",na="model_topology",sa="weight_specs",ra="weight_data",ia="model_metadata";function aa(e){return{info:[ea,e,ta].join(Qi),topology:[ea,e,na].join(Qi),weightSpecs:[ea,e,sa].join(Qi),weightData:[ea,e,ra].join(Qi),modelMetadata:[ea,e,ia].join(Qi)}}function oa(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function la(e){const t=e.split(Qi);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Qi)}function ua(e){return e.startsWith(ca.URL_SCHEME)?e.slice(ca.URL_SCHEME.length):e}class ca{constructor(e){if(!ie().getBool("IS_BROWSER")||"undefined"===typeof window||"undefined"===typeof window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=aa(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const n=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),r=Fi(e),i=yi.join(e.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,n),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,Ni(i));const t={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(t)),{modelArtifactsInfo:r}}catch(t){throw oa(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(null==i)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=Ti(i),t}}ca.URL_SCHEME="localstorage://";const ha=e=>ie().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ca.URL_SCHEME)?da(e.slice(ca.URL_SCHEME.length)):null;function da(e){return new ca(e)}Pi.registerSaveRouter(ha),Pi.registerLoadRouter(ha);class pa{constructor(){x(ie().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),x("undefined"===typeof window||"undefined"!==typeof window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=ea+Qi,n=Qi+ta;for(let s=0;s<this.LS.length;++s){const r=this.LS.key(s);if(r.startsWith(t)&&r.endsWith(n)){const t=la(r);e[t]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=ua(e);const t=aa(e);if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);const n=JSON.parse(this.LS.getItem(t.info));return oa(t),n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const fa="://";class ga{constructor(){this.managers={}}static getInstance(){return null==ga.instance&&(ga.instance=new ga),ga.instance}static registerManager(e,t){x(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(fa)&&(e=e.slice(0,e.indexOf(fa))),x(e.length>0,(()=>"scheme must not be an empty string."));const n=ga.getInstance();x(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=ga.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(ga.getInstance().managers)}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ma{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!==typeof window&&ie().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{if(e.source===window&&e.data.name===this.messageName){e.stopPropagation();const t=this.functionRefs[e.data.index];t(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}}),!0))):setTimeout(e,t)}isTypedArray(e){return Ls(e)}}if(ie().get("IS_BROWSER")){ie().setPlatform("browser",new ma);try{ga.registerManager(ca.URL_SCHEME,new pa)}catch(iJ){}try{ga.registerManager(qi.URL_SCHEME,new Zi)}catch(iJ){}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ba={importFetch:()=>n(5410)};let xa;class ya{constructor(){this.util=n(8628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=ie().global.fetch?ie().global.fetch(e,t):(null==xa&&(xa=ba.importFetch()),xa(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}isTypedArray(e){return this.util.types.isFloat32Array(e)||this.util.types.isInt32Array(e)||this.util.types.isUint8Array(e)||this.util.types.isUint8ClampedArray(e)}}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function va(e,t="float32",n){return t=t||"float32",J(e),new Cr(e,t,n)}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wa(e,t){const n=ci(e,"x","cast");if(!F(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const s={x:n},r={dtype:t};return ei.runKernel(Le,s,r)}ie().get("IS_NODE")&&!ie().get("IS_BROWSER")&&ie().setPlatform("node",new ya);const ka=pi({cast_:wa});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ia(e){const t=ci(e,"x","clone","string_or_numeric"),n={x:t};return ei.runKernel(Tt,n)}const Ca=pi({clone_:Ia});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Sa(e,t=!1){console.log(e.toString(t))}
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Qr();const $a={buffer:va,cast:ka,clone:Ca,print:Sa};function Na(e){ie().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Ta(){return ei}function Ea(){return ei.memory()}function Ra(e,t){return ei.tidy(e,t)}function Aa(e){const t=jr(e);t.forEach((e=>e.dispose()))}function _a(e){return ei.keep(e)}function Fa(e,t,n=1){return ei.registerBackend(e,t,n)}function Da(){return ei.backend}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Oa(e,t){let n=ci(e,"a","add"),s=ci(t,"b","add");[n,s]=Gr(n,s);const r={a:n,b:s};return ei.runKernel(ge,r)}Er($a),Rr(Na);const La=pi({add_:Oa});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ma(e,t){let n=ci(e,"a","floorDiv"),s=ci(t,"b","floorDiv");[n,s]=Gr(n,s);const r={a:n,b:s};return ei.runKernel(kt,r)}const za=pi({floorDiv_:Ma});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Pa(e,t){let n=ci(e,"a","div"),s=ci(t,"b","div");if([n,s]=Gr(n,s),"int32"===n.dtype&&"int32"===s.dtype)return za(n,s);const r={a:n,b:s},i={};return ei.runKernel(ut,r,i)}const Ba=pi({div_:Pa});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Wa(e,t){let n=ci(e,"a","mul"),s=ci(t,"b","mul");[n,s]=Gr(n,s);const r={a:n,b:s};return ei.runKernel(an,r)}const Ua=pi({mul_:Wa});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Va(e){const t=ci(e,"x","sqrt","float32"),n={x:t};return ei.runKernel(jn,n)}const Ga=pi({sqrt_:Va});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ha(e){const t=ci(e,"x","square"),n={};return ei.runKernel("Square",{x:t},n)}const ja=pi({square_:Ha});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ka(e){const t=ci(e,"x","zerosLike"),n={x:t};return ei.runKernel(ys,n)}const qa=pi({zerosLike_:Ka});function Xa(e,t){x(W(e),(()=>"The f passed in variableGrads(f) must be a function")),x(null==t||Array.isArray(t)&&t.every((e=>e instanceof Fr)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in ei.registeredVariables)t.push(ei.registeredVariables[e])}const s=n?t.filter((e=>!e.trainable)):null,r=t.length;t=t.filter((e=>e.trainable)),x(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));const i=!0,{value:a,grads:o}=ei.gradients(e,t,null,i);x(o.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),x(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const l={};return t.forEach(((e,t)=>{null!=o[t]&&(l[e.name]=o[t])})),null!=s&&s.forEach((e=>l[e.name]=null)),{value:a,grads:l}}function Ja(e){return ei.customGrad(e)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ya(e,t){if((lr(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&lr(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");const n=[],s=[];return mi(e,n,s,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Za=new Map,Qa=new Map;class eo{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class to{constructor(){this.classNameMap={}}static getMap(){return null==to.instance&&(to.instance=new to),to.instance}static register(e){to.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function no(e,t,n){x(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),x("string"===typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),x(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),"undefined"===typeof t&&(t="Custom"),"undefined"===typeof n&&(n=e.className);const s=n,r=t+">"+s;return to.register(e),Za.set(r,e),Qa.set(e,r),e}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class so extends eo{minimize(e,t=!1,n){const{value:s,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return Aa(r),t?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Xa(e,t)}dispose(){null!=this.iterations_&&Aa(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Ya(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(so,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ro extends so{static get className(){return"Adadelta"}constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=ei.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);t.forEach(((t,n)=>{const s=ei.registeredVariables[t],r=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Ra((()=>qa(s).variable(r)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Ra((()=>qa(s).variable(r)))});const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const a=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;Ra((()=>{const e=La(Ua(a,this.rho),Ua(ja(i),1-this.rho)),t=Ua(Ba(Ga(La(o,this.epsilon)),Ga(La(a,this.epsilon))),i),n=La(Ua(o,this.rho),Ua(ja(t),1-this.rho));a.assign(e),o.assign(n);const r=La(Ua(t,-this.learningRate),s);s.assign(r)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Aa(this.accumulatedGrads.map((e=>e.variable))),Aa(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t["learningRate"],t["rho"],t["epsilon"])}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function io(e,t,n){J(e),n=n||B(t);const s={shape:e,value:t,dtype:n};return ei.runKernel(yt,{},s)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ao extends so{static get className(){return"Adagrad"}constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);t.forEach(((t,n)=>{const s=ei.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Ra((()=>io(s.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const i=this.accumulatedGrads[n].variable;Ra((()=>{const e=La(i,ja(r));i.assign(e);const t=La(Ua(Ba(r,Ga(La(e,ei.backend.epsilon()))),-this.learningRate),s);s.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Aa(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(t)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t["learningRate"],t["initialAccumulatorValue"])}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oo(e,t){let n=ci(e,"base","pow"),s=ci(t,"exp","pow");[n,s]=Gr(n,s);const r={a:n,b:s};return ei.runKernel(mn,r)}const lo=pi({pow_:oo});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uo(e,t){let n=ci(e,"a","sub"),s=ci(t,"b","sub");[n,s]=Gr(n,s);const r={a:n,b:s};return ei.runKernel(us,r)}const co=pi({sub_:uo});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ho extends so{static get className(){return"Adam"}constructor(e,t,n,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Ra((()=>{this.accBeta1=Ya(t).variable(),this.accBeta2=Ya(n).variable()})),null==s&&(this.epsilon=ei.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Ra((()=>{const n=co(1,this.accBeta1),s=co(1,this.accBeta2);t.forEach(((t,r)=>{const i=ei.registeredVariables[t],a=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:Ra((()=>qa(i).variable(a)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${t}/v`,variable:Ra((()=>qa(i).variable(a)))});const o=Array.isArray(e)?e[r].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[r].variable,u=this.accumulatedSecondMoment[r].variable,c=La(Ua(l,this.beta1),Ua(o,1-this.beta1)),h=La(Ua(u,this.beta2),Ua(ja(o),1-this.beta2)),d=Ba(c,n),p=Ba(h,s);l.assign(c),u.assign(h);const f=La(Ua(Ba(d,La(Ga(p),this.epsilon)),-this.learningRate),i);i.assign(f)})),this.accBeta1.assign(Ua(this.accBeta1,this.beta1)),this.accBeta2.assign(Ua(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Aa(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Aa(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Ra((()=>{this.accBeta1.assign(lo(this.beta1,this.iterations_+1)),this.accBeta2.assign(lo(this.beta2,this.iterations_+1))}));const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t["learningRate"],t["beta1"],t["beta2"],t["epsilon"])}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function po(e){const t=ci(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return ei.runKernel(Be,e)}{const e={x:t};return ei.runKernel(de,e)}}const fo=pi({abs_:po});
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function go(e,t){const n=e.length,s=[];for(let r=0;r<n;r++){const i=n-1-r,a=e[i]||1,o=t[t.length-1-r]||1;o>1&&1===a&&s.unshift(i)}return s}function mo(e,t){const n=[];for(let s=0;s<t.length;s++){const r=e[e.length-s-1],i=t.length-s-1,a=t[i];(null==r||1===r&&a>1)&&n.unshift(i)}return n}function bo(e,t){const n=Math.max(e.length,t.length),s=new Array(n);for(let r=0;r<n;r++){let i=e[e.length-r-1];null==i&&(i=1);let a=t[t.length-r-1];if(null==a&&(a=1),1===i)s[n-r-1]=a;else if(1===a)s[n-r-1]=i;else{if(i!==a){const n=`Operands could not be broadcast together with shapes ${e} and ${t}.`;throw Error(n)}s[n-r-1]=i}}return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xo(e,t){let n=ci(e,"a","maximum"),s=ci(t,"b","maximum");[n,s]=Gr(n,s),"bool"===n.dtype&&(n=ka(n,"int32"),s=ka(s,"int32")),bo(n.shape,s.shape);const r={a:n,b:s};return ei.runKernel(Kt,r)}const yo=pi({maximum_:xo});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class vo extends so{static get className(){return"Adamax"}constructor(e,t,n,s=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Ra((()=>{this.iteration=Ya(0).variable(),this.accBeta1=Ya(t).variable()})),null==s&&(this.epsilon=ei.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Ra((()=>{const n=co(1,this.accBeta1),s=Ba(-this.learningRate,La(Ua(this.iteration,this.decay),1));t.forEach(((t,r)=>{const i=ei.registeredVariables[t],a=!1;null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:qa(i).variable(a)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${t}/v`,variable:qa(i).variable(a)});const o=Array.isArray(e)?e[r].tensor:e[t];if(null==o)return;const l=this.accumulatedFirstMoment[r].variable,u=this.accumulatedWeightedInfNorm[r].variable,c=La(Ua(l,this.beta1),Ua(o,1-this.beta1)),h=Ua(u,this.beta2),d=fo(o),p=yo(h,d);l.assign(c),u.assign(p);const f=La(Ua(Ba(s,n),Ba(c,La(p,this.epsilon))),i);i.assign(f)})),this.iteration.assign(La(this.iteration,1)),this.accBeta1.assign(Ua(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Aa(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Aa(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t["learningRate"],t["beta1"],t["beta2"],t["epsilon"],t["decay"])}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class wo extends so{static get className(){return"SGD"}constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);t.forEach(((t,n)=>{const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const r=ei.registeredVariables[t];Ra((()=>{const e=La(Ua(this.c,s),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=_a(Ya(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),0!==e.length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t["learningRate"])}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ko extends wo{static get className(){return"Momentum"}constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Ya(this.momentum)}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);t.forEach(((t,n)=>{const s=ei.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Ra((()=>qa(s).variable(e)))}}const r=this.accumulations[n].variable,i=Array.isArray(e)?e[n].tensor:e[t];null!=i&&Ra((()=>{let e;const t=La(Ua(this.m,r),i);e=this.useNesterov?La(Ua(this.c,La(i,Ua(t,this.m))),s):La(Ua(this.c,t),s),r.assign(t),s.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Aa(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(t)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t["learningRate"],t["momentum"],t["useNesterov"])}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Io extends so{static get className(){return"RMSProp"}constructor(e,t=.9,n=0,s=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==s&&(this.epsilon=ei.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);t.forEach(((t,n)=>{const s=ei.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Ra((()=>qa(s).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Ra((()=>qa(s).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Ra((()=>qa(s).variable(r)))});const i=Array.isArray(e)?e[n].tensor:e[t];if(null==i)return;const a=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Ra((()=>{const e=La(Ua(a,this.decay),Ua(ja(i),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=La(Ua(t,this.decay),Ua(i,1-this.decay)),l=Ba(Ua(i,this.learningRate),Ga(co(e,La(ja(r),this.epsilon)))),u=La(Ua(o,this.momentum),l);a.assign(e),t.assign(r),o.assign(u);const c=co(s,u);s.assign(c)}else{const e=La(Ua(a,this.decay),Ua(ja(i),1-this.decay)),t=La(Ua(o,this.momentum),Ba(Ua(i,this.learningRate),Ga(La(e,this.epsilon))));a.assign(e),o.assign(t);const n=co(s,t);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Aa(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Aa(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Aa(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t["learningRate"],t["decay"],t["momentum"],t["epsilon"],t["centered"])}}
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Co=[ro,ao,ho,vo,ko,Io,wo];function So(){for(const e of Co)no(e)}n(6229),n(7330),n(2062);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const $o="model",No=".json",To=".weights.bin";function Eo(e){return new Promise((e=>setTimeout(e))).then(e)}class Ro{constructor(e){if(!ie().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ro.URL_SCHEME)&&(e=e.slice(Ro.URL_SCHEME.length)),null!=e&&0!==e.length||(e=$o),this.modelJsonFileName=e+No,this.weightDataFileName=e+To}async save(e){if("undefined"===typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=yi.join(e.weightData),n=window.URL.createObjectURL(new Blob([t],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const t=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s=Ri(e,t),r=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),i=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(i.download=this.modelJsonFileName,i.href=r,await Eo((()=>i.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=n,await Eo((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Fi(e)}}}}Ro.URL_SCHEME="downloads://";const Ao=e=>ie().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ro.URL_SCHEME)?_o(e.slice(Ro.URL_SCHEME.length)):null;function _o(e="model"){return new Ro(e)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Fo(e,t,n,s){a(e),n=null==n?0:n,s=null==s?1:s,o(n,s);let r=0;const i=i=>(i.then((i=>{const a=n+ ++r/e.length*(s-n);return t(a),i})),i);function a(e){x(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}function o(e,t){x(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),x(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),x(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}return Promise.all(e.map(i))}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function Do(e,t){null==t&&(t={});const n=null==t.fetchFunc?ie().platform.fetch:t.fetchFunc,s=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=0,i=.5,a=null==t.onProgress?await Promise.all(s):await Fo(s,t.onProgress,r,i),o=a.map((e=>e.arrayBuffer())),l=.5,u=1,c=null==t.onProgress?await Promise.all(o):await Fo(o,t.onProgress,l,u);return c}Pi.registerSaveRouter(Ao);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Oo="application/octet-stream",Lo="application/json";class Mo{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(x("function"===typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=ie().platform.fetch,x(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&x(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s=Ri(e,n);if(t.body.append("model.json",new Blob([JSON.stringify(s)],{type:Lo}),"model.json"),null!=e.weightData){const n=yi.join(e.weightData);t.body.append("model.weights.bin",new Blob([n],{type:Oo}),"model.weights.bin")}const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Fi(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(r){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=t.modelTopology,s=t.weightsManifest;if(null==n&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return _i(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=zo(t),r=this.weightPathPrefix||n,i=Di(e),a=[],o=[];for(const u of e)for(const e of u.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):a.push(r+e+s);this.weightUrlConverter&&a.push(...await Promise.all(o));const l=await Do(a,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[i,l]}}function zo(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),s=e.substring(0,t),r=n>t?e.substring(n):"";return[s+"/",r]}function Po(e){return null!=e.match(Mo.URL_SCHEME_REGEX)}Mo.URL_SCHEME_REGEX=/^https?:\/\//;const Bo=(e,t)=>{if("undefined"===typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Po(e))):Po(e),n)return Wo(e,t)}return null};function Wo(e,t){return new Mo(e,t)}function Uo(e,t){return Wo(e,t)}Pi.registerSaveRouter(Bo),Pi.registerLoadRouter(Bo);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Vo(e,t,n){if(v(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const s=oi(e,n);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return mi(e,t,s,n)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
let Go,Ho=!1;function jo(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,i=!1,a=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!==typeof ImageData&&e instanceof ImageData)s=!0;else if("undefined"!==typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!==typeof HTMLImageElement&&e instanceof HTMLImageElement)i=!0;else if(null!=e.getContext)a=!0;else{if(!("undefined"!==typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}const l=Rs(ws,ei.backendName);if(null!=l){const n={pixels:e},s={numChannels:t};return ei.runKernel(ws,n,s)}const[u,c]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];let h,d;if(a)h=e.getContext("2d").getImageData(0,0,u,c).data;else if(s||n)h=e.data;else if(i||r||o){if(null==Go)if("undefined"===typeof document){if("undefined"===typeof OffscreenCanvas||"undefined"===typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Go=new OffscreenCanvas(1,1).getContext("2d")}else Go=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Go.canvas.width=u,Go.canvas.height=c,Go.drawImage(e,0,0,u,c),h=Go.getImageData(0,0,u,c).data}if(4===t)d=new Int32Array(h);else{const e=u*c;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=h[4*n+e]}const p=[c,u,t];return Vo(d,p,"int32")}function Ko(e){return null!=e&&e.data instanceof Uint8Array}function qo(){return"undefined"!==typeof window&&"undefined"!==typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")}function Xo(e){return null!=e&&0!==e.width&&0!==e.height}function Jo(e){return qo()&&!(e instanceof ImageBitmap)&&Xo(e)&&!Ko(e)}async function Yo(e,t=3){let n=null;if(ie().getBool("WRAP_TO_IMAGEBITMAP")&&Jo(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(s){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return jo(n,t)}function Zo(e){if(2!==e.rank&&3!==e.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${e.rank}.`);const t=2===e.rank?1:e.shape[2];if(t>4||2===t)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if("float32"!==e.dtype&&"int32"!==e.dtype)throw new Error(`Unsupported type for toPixels: ${e.dtype}. Please use float32 or int32 tensors.`)}function Qo(e){const t=(null===e||void 0===e?void 0:e.alpha)||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}async function el(e,t){let n=ci(e,"img","toPixels");if(!(e instanceof Ar)){const e=n;n=ka(e,"int32"),e.dispose()}Zo(n);const[s,r]=n.shape.slice(0,2),i=2===n.rank?1:n.shape[2],a=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(r*s*4);for(let u=0;u<s*r;++u){const e=[0,0,0,255];for(let s=0;s<i;s++){const t=a[u*i+s];if("float32"===n.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===n.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===i?(e[0]=t*o,e[1]=t*o,e[2]=t*o):e[s]=t*o}const t=4*u;l[t+0]=Math.round(e[0]),l[t+1]=Math.round(e[1]),l[t+2]=Math.round(e[2]),l[t+3]=Math.round(e[3])}if(null!=t){if(!Ho){const e=Rs(lt,ei.backendName);null!=e&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),Ho=!0)}t.width=r,t.height=s;const e=t.getContext("2d"),n=new ImageData(l,r,s);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}function tl(e,t,n){let s=ci(e,"img","draw");if(!(e instanceof Ar)){const e=s;s=ka(e,"int32"),e.dispose()}Zo(s),Qo(null===n||void 0===n?void 0:n.imageOptions);const r={image:s},i={canvas:t,options:n};ei.runKernel(lt,r,i)}const nl=pi({fromPixels_:jo}),sl=-2,rl=-1;function il(e,t,n){const s=e.shape.length;x(s===t.length,(()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`)),x(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let r=0;r<s;++r)x(t[r]+n[r]<=e.shape[r],(()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`))}function al(e){const t=[];let n=0;while(e>0)1&e&&t.push(n),e/=2,n++;return t}function ol(e,t,n){const s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function ll(e,t,n,s){const r=[...e];for(let i=r.length;i<s.length;i++)r.push(1);for(let i=0;i<n;i++)0===i?r[t]=1:(r.splice(t,0,1),r.pop());return r}function ul(e,t,n){return n<=e?n:n-(t-1)}function cl(e,t){const n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function hl(e,t,n,s,r,i,a,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=dl(a,l,u,s,e),h=pl(o,l,u,r,e),d=ll(i,l,u,e)}else for(let p=0;p<u;p++)c[p]=gl(a,s,i,e,p,l),h[p]=ml(o,r,i,e,p,l),d[p]=fl(i,p,l);return{begin:c,end:h,strides:d}}function dl(e,t,n,s,r){const i=[...r],a=cl(n,t);for(let o=0;o<i.length;o++)if(a.indexOf(o)>-1)i[o]=0;else{const r=ul(t,n,o);let a=s[r];e&1<<r&&(a=0),i[o]=a}return i}function pl(e,t,n,s,r){const i=[...r],a=cl(n,t);for(let o=0;o<i.length;o++)if(a.indexOf(o)>-1)i[o]=Number.MAX_SAFE_INTEGER;else{const r=ul(t,n,o);let a=s[r];e&1<<r&&(a=Number.MAX_SAFE_INTEGER),i[o]=a}for(let o=0;o<i.length;o++){const e=r[o];i[o]<0&&(i[o]+=e),i[o]=f(0,i[o],r[o])}return i}function fl(e,t,n){let s=e[t];return(n&1<<t||null==s)&&(s=1),s}function gl(e,t,n,s,r,i){let a=t[r];const o=n[r]||1;(e&1<<r||i&1<<r||null==a)&&(a=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),a=f(0,a,l-1),a}function ml(e,t,n,s,r,i){let a=t[r];const o=n[r]||1;(e&1<<r||i&1<<r||null==a)&&(a=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[r];return a<0&&(a+=l),a=o>0?f(0,a,l):f(-1,a,l-1),a}function bl(e,t,n){let s=n.length;for(let r=0;r<n.length;r++)if(n[r]>1){s=r;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function xl(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function yl(e,t,n){let s;const r=e.shape.length;let i;return s="number"===typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),s.forEach((e=>{x(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(r).fill(-1):"number"===typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(x(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-s[n]))),[s,i]}function vl(e,t,n,s,r,i,a,o,l){let u;if(null==s?(u=new Array(t.length),u.fill(1)):u=s,null!=a&&0!==(a&a-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:r,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};for(let y=0;y<h.dims;y++)c&&0!==(1<<y&o)&&h.numAddAxisAfterEllipsis++,1<<y&a&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};wl(h,d);let p=!0,f=!0,g=!0;const m=[],b=[];for(let y=0;y<e.length;++y){if(0===d.strides[y])throw Error(`strides[${y}] must be non-zero`);const t=!!(d.shrinkAxisMask&1<<y),n=e[y];if(-1===n){m.push(t?1:-1);continue}const s=[d.beginMask&1<<y,d.endMask&1<<y],r=[d.strides[y]>0?0:-1,d.strides[y]>0?n:n-1];if(t&&d.strides[y]<=0)throw Error("only stride 1 allowed on non-range indexing.");g=g&&1===d.strides[y];const i=!!(d.beginMask&1<<y&&d.endMask&1<<y);if(d.beginValid&&d.endValid){if(t){const e=d.begin[y]<0?n+d.begin[y]:d.begin[y];if(d.begin[y]=e,d.end[y]=d.begin[y]+1,e<0||e>=n)throw Error(`slice index ${d.begin[y]} of dimension ${y} out of bounds.`)}else d.begin[y]=kl(d.begin[y],0,d.strides[y],n,s,r),d.end[y]=kl(d.end[y],1,d.strides[y],n,s,r);const e=1===d.strides[y]&&0===d.begin[y]&&d.end[y]===n;p=p&&e,f=f&&(0===y&&1===d.strides[y]||e)}else p=p&&1===d.strides[y]&&i,f=f&&(0===y&&1===d.strides[y]||i);let a,o=!1;if(d.beginValid&&d.endValid?(a=d.end[y]-d.begin[y],o=!0):t?(a=1,o=!0):i&&n>=0&&(a=d.strides[y]<0?-n:n,o=!0),o){let e;e=0===a||a<0!==d.strides[y]<0?0:Math.trunc(a/d.strides[y])+(a%d.strides[y]!==0?1:0),m.push(e)}else m.push(-1)}for(let y=0;y<d.finalShapeGatherIndices.length;++y){const e=d.finalShapeGatherIndices[y];e>=0?b.push(m[e]):e===sl&&b.push(1)}const x=b.filter(((e,t)=>d.finalShapeGatherIndices[t]!==sl));return{finalShapeSparse:x,finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:g,begin:d.begin,end:d.end,strides:d.strides}}function wl(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(sl),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[s]),null!=e.end&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(rl),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}function kl(e,t,n,s,r,i){if(r[t])return n>0?i[t]:i[t+1&1];{const t=e<0?s+e:e;return t<i[0]?i[0]:t>i[1]?i[1]:t}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Il(e,t=null,n=!1){const s=ci(e,"x","all","bool"),r={x:s},i={axis:t,keepDims:n};return ei.runKernel(be,r,i)}const Cl=pi({all_:Il});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Sl(e,t=null,n=!1){const s=ci(e,"x","any","bool"),r={x:s},i={axis:t,keepDims:n};return ei.runKernel(xe,r,i)}const $l=pi({any_:Sl});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Nl(e,t=0){const n=ci(e,"x","argMax"),s={x:n},r={axis:t};return ei.runKernel(ye,s,r)}const Tl=pi({argMax_:Nl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function El(e,t,n,s,r="NHWC",i){const a=e[3],o=[...t,a],l=jl(r);return _l(e,o,n,i,s,null,null,l)}function Rl(e,t,n,s,r,i,a="channelsLast"){const[o,l]=Ml(t);let u;if("channelsLast"===a)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);u=[o,l,e[1],e[1]]}return _l(e,u,n,s,r,i,!1,a)}function Al(e,t,n,s,r,i,a="NDHWC"){const[o,l,u]=zl(t);let c,h;if("NDHWC"===a)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==a)throw new Error(`Unknown dataFormat ${a}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return Fl(e,c,n,s,r,!1,h,i)}function _l(e,t,n,s,r,i,a=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,f]=t,[g,m]=Ml(n),[b,x]=Ml(s),y=Pl(d,b),v=Pl(p,x),{padInfo:w,outHeight:k,outWidth:I}=Bl(r,u,c,g,m,y,v,i,o),C=a?f*h:f;let S;return"channelsFirst"===o?S=[l,C,k,I]:"channelsLast"===o&&(S=[l,k,I,C]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:C,padInfo:w,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:y,effectiveFilterWidth:v,dilationHeight:b,dilationWidth:x,inShape:e,outShape:S,filterShape:t}}function Fl(e,t,n,s,r,i=!1,a="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[l,u,c,h,d]=e;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[l,d,u,c,h]=e}const[p,f,g,,m]=t,[b,x,y]=zl(n),[v,w,k]=zl(s),I=Pl(p,v),C=Pl(f,w),S=Pl(g,k),{padInfo:$,outDepth:N,outHeight:T,outWidth:E}=Wl(r,u,c,h,b,x,y,I,C,S,o),R=i?m*d:m;let A;return"channelsFirst"===a?A=[l,R,N,T,E]:"channelsLast"===a&&(A=[l,N,T,E,R]),{batchSize:l,dataFormat:a,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:N,outHeight:T,outWidth:E,outChannels:R,padInfo:$,strideDepth:b,strideHeight:x,strideWidth:y,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:I,effectiveFilterHeight:C,effectiveFilterWidth:S,dilationDepth:v,dilationHeight:w,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function Dl(e,t,n,s,r){null==s&&(s=Ll(e,t,n));const i=e[0],a=e[1],o=Ul((i-t+2*s)/n+1,r),l=Ul((a-t+2*s)/n+1,r);return[o,l]}function Ol(e,t,n,s,r,i){null==r&&(r=Ll(e,t[0],s[0]));const a=[0,0,0,n];for(let o=0;o<3;o++)e[o]+2*r>=t[o]&&(a[o]=Ul((e[o]-t[o]+2*r)/s[o]+1,i));return a}function Ll(e,t,n,s=1){const r=Pl(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function Ml(e){return"number"===typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function zl(e){return"number"===typeof e?[e,e,e]:e}function Pl(e,t){return t<=1?e:e+(e-1)*(t-1)}function Bl(e,t,n,s,r,i,a,o,l){let u,c,h;if("number"===typeof e){const r=0===e?"VALID":"NUMBER";u={top:e,bottom:e,left:e,right:e,type:r};const a=Dl([t,n],i,s,e,o);c=a[0],h=a[1]}else if("same"===e){c=Math.ceil(t/s),h=Math.ceil(n/r);const e=Math.max(0,(c-1)*s+i-t),o=Math.max(0,(h-1)*r+a-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2),f=o-p;u={top:l,bottom:d,left:p,right:f,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-i+1)/s),h=Math.ceil((n-a+1)/r);else{if("object"!==typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1],m=0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT";u={top:d,bottom:p,left:f,right:g,type:m},c=Ul((t-i+d+p)/s+1,o),h=Ul((n-a+f+g)/r+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}function Wl(e,t,n,s,r,i,a,o,l,u,c){let h,d,p,f;if("valid"===e&&(e=0),"number"===typeof e){const g=0===e?"VALID":"NUMBER";h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:g};const m=Ol([t,n,s,1],[o,l,u],1,[r,i,a],e,c);d=m[0],p=m[1],f=m[2]}else{if("same"!==e)throw Error(`Unknown padding parameter: ${e}`);{d=Math.ceil(t/r),p=Math.ceil(n/i),f=Math.ceil(s/a);const e=(d-1)*r+o-t,c=(p-1)*i+l-n,g=(f-1)*a+u-s,m=Math.floor(e/2),b=e-m,x=Math.floor(c/2),y=c-x,v=Math.floor(g/2),w=g-v;h={top:x,bottom:y,left:v,right:w,front:m,back:b,type:"SAME"}}}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}function Ul(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function Vl(e){const[t,n,s]=Ml(e);return 1===t&&1===n&&1===s}function Gl(e,t){return Vl(e)||Vl(t)}function Hl(e){return Ml(e).every((e=>e>0))}function jl(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Kl(e,t,n){if(null!=n){if("string"===typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"===typeof t)x(I(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!==typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{x(I(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ql(e,t){const n=ci(e,"x","reshape","string_or_numeric"),s={x:n},r={shape:t};return ei.runKernel($n,s,r)}const Xl=pi({reshape_:ql});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jl(e,t,n,s,r){const i=ci(e,"x","avgPool","float32"),a=1;x(Gl(n,a),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));let o=i,l=!1;3===i.rank&&(l=!0,o=Xl(i,[1,i.shape[0],i.shape[1],i.shape[2]])),x(4===o.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${o.rank}.`)),Kl("avgPool",s,r);const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r};let h=ei.runKernel($e,u,c);return h=ka(h,i.dtype),l?Xl(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Yl=pi({avgPool_:Jl});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zl(e,t,n,s,r,i="NDHWC"){const a=ci(e,"x","avgPool3d","float32");let o=a,l=!1;4===a.rank&&(l=!0,o=Xl(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),x(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),x("NDHWC"===i,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),x("number"===typeof n&&n>0||Array.isArray(n)&&n[0]>0&&n[1]>0&&n[2]>0,(()=>`Error in avgPool3d: Stride must be > 0, but got '${n}'`)),Kl("avgPool3d",s,r);const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:i};let h=ei.runKernel(Te,u,c);return h=ka(h,o.dtype),l?Xl(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const Ql=pi({avgPool3d_:Zl});function eu(e){let t;return t=0===e.rank||1===e.rank?Xl(e,[1,1,1,e.size]):2===e.rank?Xl(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Xl(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tu(e,t,n,s,r,i){null==i&&(i=.001);const a=ci(e,"x","batchNorm"),o=ci(t,"mean","batchNorm"),l=ci(n,"variance","batchNorm");let u,c;null!=r&&(u=ci(r,"scale","batchNorm")),null!=s&&(c=ci(s,"offset","batchNorm")),x(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),x(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),x(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=eu(a),d={x:h,scale:u,offset:c,mean:o,variance:l},p={varianceEpsilon:i},f=ei.runKernel(It,d,p);return Xl(f,a.shape)}const nu=pi({batchNorm_:tu});function su(e,t,n,s,r,i){const a=ci(e,"x","batchNorm"),o=ci(t,"mean","batchNorm"),l=ci(n,"variance","batchNorm");let u,c;return null!=r&&(u=ci(r,"scale","batchNorm")),null!=s&&(c=ci(s,"offset","batchNorm")),x(2===a.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`)),x(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),x(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&x(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&x(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),nu(a,o,l,c,u,i)}const ru=pi({batchNorm2d_:su});function iu(e,t,n,s,r,i){const a=ci(e,"x","batchNorm"),o=ci(t,"mean","batchNorm"),l=ci(n,"variance","batchNorm");let u,c;return null!=r&&(u=ci(r,"scale","batchNorm")),null!=s&&(c=ci(s,"offset","batchNorm")),x(3===a.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`)),x(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),x(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&x(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&x(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),nu(a,o,l,c,u,i)}const au=pi({batchNorm3d_:iu});function ou(e,t,n,s,r,i){const a=ci(e,"x","batchNorm"),o=ci(t,"mean","batchNorm"),l=ci(n,"variance","batchNorm");let u,c;return null!=r&&(u=ci(r,"scale","batchNorm")),null!=s&&(c=ci(s,"offset","batchNorm")),x(4===a.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`)),x(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),x(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&x(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&x(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),nu(a,o,l,c,u,i)}const lu=pi({batchNorm4d_:ou});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uu(e,t){let n=ci(e,"broadcastTo","x");const s=n.shape;if(J(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();while(e.length<t.length)e.unshift(1);n=Xl(n,e)}const r=n.shape,i=Array.from(t);for(let u=t.length-1;u>=0;u--)if(r[u]===t[u])i[u]=1;else if(1!==n.shape[u])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);const a=i.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0));if(0===a.length)return Ca(n);const o={x:n},l={reps:i};return ei.runKernel(ds,o,l)}const cu=pi({broadcastTo_:uu});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hu(e,t,n){const s=ci(e,"x","clipByValue");if(x(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return io(s.shape,t,s.dtype);const r={x:s},i={clipValueMin:t,clipValueMax:n};return ei.runKernel(ze,r,i)}const du=pi({clipByValue_:hu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pu(e,t=0){x(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=hi(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Ca(n[0]);const s=n,r={axis:t};return ei.runKernel(We,s,r)}const fu=pi({concat_:pu});function gu(e){return fu(e,0)}const mu=pi({concat1d_:gu});function bu(e,t){return fu(e,t)}const xu=pi({concat2d_:bu});function yu(e,t){return fu(e,t)}const vu=pi({concat3d_:yu});function wu(e,t){return fu(e,t)}const ku=pi({concat4d_:wu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Iu(e,t,n,s,r="NHWC",i=[1,1],a){const o=ci(e,"x","conv2d","float32"),l=ci(t,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Xl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),x(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),x(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),Kl("conv2d",s,a);const h="NHWC"===r?u.shape[3]:u.shape[1];x(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),x(Gl(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),x(Hl(i),(()=>"Error in conv2D: Dilated rates should be larger than 0.")),x(Hl(n),(()=>"Error in conv2D: Strides should be larger than 0."));const d={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a},f=ei.runKernel(Ue,d,p);return c?Xl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Cu=pi({conv2d_:Iu});function Su(e,t,n,s,r="NWC",i=1,a){const o=ci(e,"x","conv1d"),l=ci(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=Xl(o,[1,o.shape[0],o.shape[1]])),x(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),x(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),Kl("conv1d",s,a),x(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),x(Gl(n,i),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${i}'`)),x(Hl(i),(()=>"Error in conv1D: Dilated rates should be larger than 0.")),x(Hl(n),(()=>"Error in conv1D: Stride should be larger than 0.")),x("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));const h=Xl(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=Xl(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=[1,n],f=[1,i],g="NHWC",m=Cu(d,h,p,s,g,f,a);return Xl(m,c?[m.shape[2],m.shape[3]]:[m.shape[0],m.shape[2],m.shape[3]])}const $u=pi({conv1d_:Su});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Nu(e,t,n,s,r,i="NHWC",a){x(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=Xl(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),x(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),x(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),x(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===i?o[3]:o[1],h="NHWC"===i?l.shape[3]:l.shape[1];x(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),x(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),Kl("conv2dDerInput",r,a);const d={dy:l,filter:n},p={strides:s,pad:r,dataFormat:i,dimRoundingMode:a,inputShape:o},f=ei.runKernel(Ge,d,p);return u?Xl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Tu=pi({conv2DBackpropInput_:Nu});function Eu(e,t,n,s,r,i){const a=ci(e,"x","conv2dTranspose"),o=ci(t,"filter","conv2dTranspose");return Tu(n,a,o,s,r,"NHWC",i)}const Ru=pi({conv2dTranspose_:Eu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Au(e,t,n,s,r="NDHWC",i=[1,1,1]){const a=ci(e,"x","conv3d"),o=ci(t,"filter","conv3d");let l=a,u=!1;4===a.rank&&(u=!0,l=Xl(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),x(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),x(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),x(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),x(Gl(n,i),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`)),x("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`)),x(Hl(i),(()=>"Error in conv3D: Dilated rates should be larger than 0.")),x(Hl(n),(()=>"Error in conv3D: Strides should be larger than 0."));const c={x:l,filter:o},h={strides:n,pad:s,dataFormat:r,dilations:i},d=ei.runKernel(He,c,h);return u?Xl(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const _u=pi({conv3d_:Au});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Fu(e,t,n,s,r){x(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let i=e,a=t,o=!1;4===t.rank&&(o=!0,a=Xl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),i=[1,e[0],e[1],e[2],e[3]]);const l=i[4],u=a.shape[4];x(5===i.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${i.length}.`)),x(5===a.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`)),x(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),x(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),x(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:a,filter:n},h={pad:r,strides:s,inputShape:i},d=ei.runKernel(Ke,c,h);return o?Xl(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const Du=pi({conv3DBackpropInput_:Fu});function Ou(e,t,n,s,r){const i=ci(e,"x","conv3dTranspose"),a=ci(t,"filter","conv3dTranspose");return Du(n,i,a,s,r)}const Lu=pi({conv3dTranspose_:Ou});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Mu(e,t,n,s=!1){const r=ci(e,"x","denseBincount"),i=ci(t,"weights","denseBincount");x("int32"===r.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`)),x(r.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`)),x(n>=0,(()=>`size must be non-negative, but got ${n}.`)),x(i.size===r.size||0===i.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${i.shape}.`));const a={x:r,weights:i},o={size:n,binaryOutput:s};return ei.runKernel(Qe,a,o)}const zu=pi({denseBincount_:Mu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Pu(e,t,n,s,r="NHWC",i=[1,1],a){const o=ci(e,"x","depthwiseConv2d","float32"),l=ci(t,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=Xl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),x(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),x(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));const h="NHWC"===r?u.shape[3]:u.shape[1];x(h===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`)),Kl("depthwiseConv2d",s,a);const d={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a},f=ei.runKernel(tt,d,p);return c?Xl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Bu=pi({depthwiseConv2d_:Pu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Wu(e){const t=ci(e,"x","elu","float32"),n={x:t};return ei.runKernel(ht,n)}const Uu=pi({elu_:Wu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Vu(e,t){let n=ci(e,"a","equal","string_or_numeric"),s=ci(t,"b","equal","string_or_numeric");[n,s]=Gr(n,s),bo(n.shape,s.shape);const r={a:n,b:s};return ei.runKernel(ft,r)}const Gu=pi({equal_:Vu});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Hu(e){const t=ci(e,"x","exp"),n={x:t};return ei.runKernel(gt,n)}const ju=pi({exp_:Hu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ku(e,t=0){const n=ci(e,"x","expandDims","string_or_numeric");x(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const s={input:n},r={dim:t};return ei.runKernel(mt,s,r)}const qu=pi({expandDims_:Ku});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xu(e,t){const n=ci(e,"x","tile","string_or_numeric");x(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const s={x:n},r={reps:t};return ei.runKernel(ds,s,r)}const Ju=pi({tile_:Xu});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Yu(e,t,n,s="float32"){null==t&&(t=e);const r=va([e,t],s),i=e<=t?e:t;for(let o=0;o<i;++o)r.set(1,o,o);const a=Xl(r.toTensor(),[e,t]);if(null==n)return a;if(1===n.length)return Ju(qu(a,0),[n[0],1,1]);if(2===n.length)return Ju(qu(qu(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return Ju(qu(qu(qu(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}const Zu=pi({eye_:Yu});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Qu(e){const t=ci(e,"x","floor","float32"),n={x:t};return ei.runKernel(wt,n)}const ec=pi({floor_:Qu});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tc(e,t,n=0,s=0){const r=ci(e,"x","gather"),i=ci(t,"indices","gather","int32"),a={x:r,indices:i},o={axis:n,batchDims:s};return ei.runKernel(Ct,a,o)}const nc=pi({gather_:tc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sc(e,t){let n=ci(e,"a","greater","string_or_numeric"),s=ci(t,"b","greater","string_or_numeric");[n,s]=Gr(n,s),bo(n.shape,s.shape);const r={a:n,b:s};return ei.runKernel($t,r)}const rc=pi({greater_:sc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ic(e,t){let n=ci(e,"a","greaterEqual","string_or_numeric"),s=ci(t,"b","greaterEqual","string_or_numeric");[n,s]=Gr(n,s),bo(n.shape,s.shape);const r={a:n,b:s};return ei.runKernel(Nt,r)}const ac=pi({greaterEqual_:ic});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oc(e,t=.2){const n=ci(e,"x","leakyRelu"),s={x:n},r={alpha:t};return ei.runKernel(Dt,s,r)}const lc=pi({leakyRelu_:oc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uc(e){const t=ci(e,"x","log","float32"),n={x:t};return ei.runKernel(zt,n)}const cc=pi({log_:uc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hc(e){const t=ci(e,"x","log1p"),n={x:t};return ei.runKernel(Pt,n)}const dc=pi({log1p_:hc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pc(e,t=null,n=!1){const s=ci(e,"x","max"),r={x:s},i={reductionIndices:t,keepDims:n};return ei.runKernel(jt,r,i)}const fc=pi({max_:pc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gc(e,t=null,n=!1){let s=ci(e,"x","sum");"bool"===s.dtype&&(s=ka(s,"int32"));const r={x:s},i={axis:t,keepDims:n};return ei.runKernel(Kn,r,i)}const mc=pi({sum_:gc});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bc(e,t=-1){const n=ci(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const s=Ja(((e,n)=>{const s=!0,r=fc(e,t,!0),i=co(e,r),a=co(ka(i,"float32"),cc(mc(ju(i),t,s)));n([a]);const o=(e,n)=>{const[s]=n,r=!0,i=ju(s);return co(e,Ua(mc(e,t,r),i))};return{value:a,gradFunc:o}}));return s(n)}const xc=pi({logSoftmax_:bc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yc(e,t){const n=ci(e,"a","logicalAnd","bool"),s=ci(t,"b","logicalAnd","bool");bo(n.shape,s.shape);const r={a:n,b:s};return ei.runKernel(Bt,r)}const vc=pi({logicalAnd_:yc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wc(e,t,n=!1,s=!1){let r=ci(e,"a","matMul"),i=ci(t,"b","matMul");[r,i]=Gr(r,i);const a={a:r,b:i},o={transposeA:n,transposeB:s};return ei.runKernel(Re,a,o)}const kc=pi({matMul_:wc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ic(e,t,n,s,r){const i=ci(e,"x","maxPool"),a=1;let o=i,l=!1;3===i.rank&&(l=!0,o=Xl(i,[1,i.shape[0],i.shape[1],i.shape[2]])),x(4===o.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${o.rank}.`)),x(Gl(n,a),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),Kl("maxPool",s,r);const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r},h=ei.runKernel(qt,u,c);return l?Xl(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Cc=pi({maxPool_:Ic});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Sc(e,t=[1,1,1],n,s,r,i="NDHWC"){const a=ci(e,"x","maxPool3d");let o=a,l=!1;4===a.rank&&(l=!0,o=Xl(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),x(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),x("NDHWC"===i,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${i}`)),Kl("maxPool3d",s,r);const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:i},h=ei.runKernel(Jt,u,c);return l?Xl(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const $c=pi({maxPool3d_:Sc});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Nc(e,t=null,n=!1){const s=ci(e,"x","mean"),r={x:s},i={axis:t,keepDims:n};return ei.runKernel(Qt,r,i)}const Tc=pi({mean_:Nc});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ec(e,t=null,n=!1){const s=ci(e,"x","min"),r={x:s},i={axis:t,keepDims:n};return ei.runKernel(en,r,i)}const Rc=pi({min_:Ec});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ac(e,t){let n=ci(e,"a","minimum"),s=ci(t,"b","minimum");[n,s]=Gr(n,s),"bool"===n.dtype&&(n=ka(n,"int32"),s=ka(s,"int32")),bo(n.shape,s.shape);const r={a:n,b:s};return ei.runKernel(tn,r)}const _c=pi({minimum_:Ac});
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Fc(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Dc(e,t,n){const s=e.length+t.length,r=[];let i=0,a=0;for(let o=0;o<s;o++)-1===n.indexOf(o)?r.push(e[i++]):r.push(t[a++]);return r}function Oc(e,t){const n=[],s=e.length;for(let i=0;i<s;i++)-1===t.indexOf(i)&&n.push(e[i]);const r=t.map((t=>e[t]));return[n,r]}function Lc(e,t){const n=t.map((e=>1));return Dc(e,n,t)}function Mc(e,t,n){x(Fc(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function zc(e,t){if(Fc(e,t))return null;const n=[];for(let s=0;s<t;++s)-1===e.indexOf(s)&&n.push(s);return e.forEach((e=>n.push(e))),n}function Pc(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Bc(e,t){const n=[];for(let s=t-e;s<t;++s)n.push(s);return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Wc(e,t=null,n=!1){e=ci(e,"x","moments");const s=T(t,e.shape),r=Tc(e,s,n);let i=r.shape;n||(i=Lc(r.shape,s));const a=ja(co(ka(e,"float32"),Xl(r,i))),o=Tc(a,s,n);return{mean:r,variance:o}}const Uc=pi({moments_:Wc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Vc(e){const t=ci(e,"x","neg"),n={x:t};return ei.runKernel(on,n)}const Gc=pi({neg_:Vc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Hc(e,t){let n=ci(e,"a","notEqual","string_or_numeric"),s=ci(t,"b","notEqual","string_or_numeric");[n,s]=Gr(n,s),bo(n.shape,s.shape);const r={a:n,b:s};return ei.runKernel(ln,r)}const jc=pi({notEqual_:Hc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Kc(e,t,n=1,s=0,r="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const i=ci(e,"indices","oneHot","int32"),a={indices:i},o={dtype:r,depth:t,onValue:n,offValue:s};return ei.runKernel(pn,a,o)}const qc=pi({oneHot_:Kc});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xc(e,t="float32"){if(J(e),"complex64"===t){const t=Xc(e,"float32"),n=Xc(e,"float32");return gi(t,n)}const n=q(w(e),t);return ei.makeTensor(n,e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jc(e,t="float32"){if(J(e),"complex64"===t){const t=Jc(e,"float32"),n=Xc(e,"float32");return gi(t,n)}const n=K(w(e),t);return ei.makeTensor(n,e,t)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Yc(e){const t=ci(e,"x","onesLike"),n={x:t};return ei.runKernel(dn,n)}const Zc=pi({onesLike_:Yc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Qc(e,t,n=0){const s=ci(e,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:n},i={x:s};return ei.runKernel(gn,i,r)}const eh=pi({pad_:Qc});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function th(e,t){const n=ci(e,"x","prelu"),s=ci(t,"alpha","prelu"),r={x:n,alpha:s};return ei.runKernel(bn,r)}const nh=pi({prelu_:th});var sh=n(4332);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class rh{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=r||Math.random();this.random=sh.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;while(!n){let s,r,i;do{s=2*this.random()-1,r=2*this.random()-1,i=s*s+r*r}while(i>=1||0===i);const a=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*s*a,t=this.mean+this.stdDev*r*a,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class ih{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==s&&(s=Math.random()),"number"===typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=sh.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ah(e,t=0,n=1,s,r){if(J(e),null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const i=new rh(t,n,s,!1,r),a=va(e,s);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}const oh=pi({randomNormal_:ah});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lh(e,t=0,n=1,s="float32",r){J(e);const i=va(e,s),a=new ih(t,n,null,r);for(let o=0;o<i.values.length;o++)i.values[o]=a.nextValue();return i.toTensor()}const uh=pi({randomUniform_:lh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ch(e,t,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:s};return ei.runKernel(kn,{},r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hh(e){const t=ci(e,"x","relu"),n={x:t};return ei.runKernel(Sn,n)}const dh=pi({relu_:hh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ph(e,t){const n=ci(e,"x","reverse"),s={x:n},r={dims:t};return ei.runKernel(_n,s,r)}const fh=pi({reverse_:ph});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gh(e){const t=ci(e,"x","selu"),n={x:t};return ei.runKernel(Pn,n)}const mh=pi({selu_:gh});function bh(e,t,n,s,r,i=[1,1],a="NHWC"){const o=ci(e,"x","separableConv2d"),l=ci(t,"depthwiseFilter","separableConv2d"),u=ci(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=Xl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===a)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");x(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),x(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),x(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),x(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),x(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],p=l.shape[3];x(u.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`));const f=Bu(c,l,s,r,a,i),g=1,m=Cu(f,u,g,"valid",a);return h?Xl(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const xh=pi({separableConv2d_:bh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yh(e){const t=ci(e,"x","sigmoid","float32"),n={x:t};return ei.runKernel(Gn,n)}const vh=pi({sigmoid_:yh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wh(e,t,n){const s=ci(e,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");const r={x:s},i={begin:t,size:n};return ei.runKernel(Bn,r,i)}const kh=pi({slice_:wh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ih(e,t,n){const s=ci(e,"x","slice1d");return x(1===s.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`)),kh(s,[t],[n])}const Ch=pi({slice1d_:Ih});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Sh(e,t,n){const s=ci(e,"x","slice2d");return x(2===s.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`)),kh(s,t,n)}const $h=pi({slice2d_:Sh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Nh(e,t,n){const s=ci(e,"x","slice3d");return x(3===s.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`)),kh(s,t,n)}const Th=pi({slice3d_:Nh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Eh(e,t,n){const s=ci(e,"x","slice4d");return x(4===s.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`)),kh(s,t,n)}const Rh=pi({slice4d_:Eh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ah(e,t=-1){const n=ci(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const s={logits:n},r={dim:t};return ei.runKernel(Jn,s,r)}const _h=pi({softmax_:Ah});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Fh(e){const t=ci(e,"x","softplus"),n={x:t};return ei.runKernel(Hn,n)}const Dh=pi({softplus_:Fh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Oh(e,t,n=0){const s=ci(e,"x","split"),r={x:s},i={numOrSizeSplits:t,axis:n};return ei.runKernel(Xn,r,i)}const Lh=pi({split_:Oh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Mh(e,t){const n=ci(e,"x","squeeze","string_or_numeric");return Xl(n,E(n.shape,t).newShape)}const zh=pi({squeeze_:Mh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ph(e,t=0){const n=hi(e,"tensors","stack","string_or_numeric");x(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&x(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const s=n,r={axis:t};return ei.runKernel(fn,s,r)}const Bh=pi({stack_:Ph});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Wh(e){const t=ci(e,"x","tanh","float32"),n={x:t};return ei.runKernel(hs,n)}const Uh=pi({tanh_:Wh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Vh(e,t){v(e);const n=oi(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");const s=null;return mi(e,s,n,t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Gh(e,t=0,n=1,s,r){if(J(e),null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const i=new rh(t,n,s,!0,r),a=va(e,s);for(let o=0;o<a.values.length;o++)a.values[o]=i.nextValue();return a.toTensor()}const Hh=pi({truncatedNormal_:Gh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jh(e,t=0){const n=ci(e,"x","unstack","string_or_numeric");x(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const s={value:n},r={axis:t};return ei.runKernel(bs,s,r)}const Kh=pi({unstack_:jh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qh(e,t=!0,n,s){return ei.makeVariable(e,t,n,s)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xh(e,t,n){const s=ci(t,"a","where"),r=ci(n,"b","where"),i=ci(e,"condition","where","bool"),a=bo(bo(i.shape,s.shape),r.shape),o=cu(i,a),l=cu(s,a),u=cu(r,a),c={condition:o,t:l,e:u};return ei.runKernel(zn,c)}const Jh=pi({where_:Xh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Yh(e){const t=ci(e,"input","imag"),n={input:t};return ei.runKernel(Rt,n)}const Zh=pi({imag_:Yh});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Qh(e){const t=ci(e,"input","real"),n={input:t};return ei.runKernel(In,n)}const ed=pi({real_:Qh});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function td(e,t,n){const s=ci(e,"x","transpose");if(null==t&&(t=s.shape.map(((e,t)=>t)).reverse()),x(s.rank===t.length,(()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`)),t.forEach((e=>{x(e>=0&&e<s.rank,(()=>"All entries in 'perm' must be between 0 and "+(s.rank-1)+` but got ${t}`))})),s.rank<=1)return s.clone();const r={x:s},i={perm:t};return"complex64"===s.dtype?Ra((()=>{let e=ed(s),t=Zh(s);return e=ei.runKernel(gs,{x:e},i),t=ei.runKernel(gs,{x:t},i),n&&(t=Gc(t)),gi(e,t)})):ei.runKernel(gs,r,i)}const nd=pi({transpose_:td});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sd(e,t){if(null==t)return e.shape.slice();if(k(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let s=0;s<e.shape.length;s++)null==t[s]&&null!=e.shape[s]?n.push(e.shape[s]):n.push(t[s]);return n}return t}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rd(e,t,n,s){const r=ci(e,"x","dropout");if(x("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),x(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Ar?r.clone():r;const i=sd(r,n),a=1-t,o=Ba(ec(La(uh(i,0,1,"float32",s),a)),a);return Ua(r,o)}const id=pi({dropout_:rd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ad(e){x("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ei.runKernel(xt,t)}const od=pi({fft_:ad});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ld(e,t){x("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const s=e.size/n;let r;if(null!=t&&t<n){const s=e.shape.map((e=>0)),i=e.shape.map((e=>e));i[e.shape.length-1]=t,r=kh(e,s,i),n=t}else if(null!=t&&t>n){const s=e.shape.map((e=>e));s[e.shape.length-1]=t-n,r=fu([e,Xc(s)],e.shape.length-1),n=t}else r=e;const i=qa(r),a=Xl(gi(r,i),[s,n]),o=od(a),l=Math.floor(n/2)+1,u=ed(o),c=Zh(o),h=Lh(u,[l,n-l],u.shape.length-1),d=Lh(c,[l,n-l],c.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=l,Xl(gi(h[0],d[0]),p)}const ud=pi({rfft_:ld});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cd(e){x("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ei.runKernel(Et,t)}const hd=pi({ifft_:cd});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dd(e){const t=e.shape[e.shape.length-1],n=e.size/t;let s;if(t<=2){const r=Xl(e,[n,t]);s=hd(r)}else{const r=[n,2*(t-1)],i=Xl(ed(e),[n,t]),a=Xl(Zh(e),[n,t]),o=fh(kh(i,[0,1],[n,t-2]),1),l=Ua(fh(kh(a,[0,1],[n,t-2]),1),Ya(-1)),u=fu([i,o],1),c=fu([a,l],1),h=Xl(gi(u,c),[r[0],r[1]]);s=hd(h)}if(s=ed(s),3===e.rank&&0!==e.shape[0]){const t=s,n=e.shape[0];s=Xl(s,[n,s.shape[0]/n,s.shape[1]]),t.dispose()}return s}const pd=pi({irfft_:dd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fd(e,t,n,s,r,i="NHWC",a){let o=e;3===e.rank&&(o=Xl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Xl(t,[1,t.shape[0],t.shape[1],t.shape[2]])),x(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),x(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),x(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===i?o.shape[3]:o.shape[1],c="NHWC"===i?l.shape[3]:l.shape[1];x(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),x(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),Kl("conv2dDerFilter",r,a);const h={x:o,dy:l},d={strides:s,pad:r,dataFormat:i,dimRoundingMode:a,filterShape:n};return ei.runKernel(Ve,h,d)}const gd=pi({conv2DBackpropFilter_:fd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function md(e){const t=ci(e,"x","relu6"),n={x:t};return ei.runKernel(An,n)}const bd=pi({relu6_:md});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xd(e,t=0){const n=ci(e,"x","step"),s={x:n},r={alpha:t};return ei.runKernel(vs,s,r)}const yd=pi({step_:xd});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vd(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Ua(e,yd(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function wd(e,t){let n=t;const s=mo(e.shape,t.shape);return s.length>0&&(n=mc(n,s)),Xl(n,e.shape)}function kd(e,t,n,s){if("linear"===t)return e;if("relu"===t)return dh(e);if("elu"===t)return Uu(e);if("relu6"===t)return bd(e);if("prelu"===t)return nh(e,n);if("leakyrelu"===t)return lc(e,s);if("sigmoid"===t)return vh(e);throw new Error(`Unknown fused activation ${t}.`)}const Id=(e,t)=>{const n=e>0;return!n||"linear"===t};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Cd({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:i=[1,1],dimRoundingMode:a,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===Id(ei.state.gradientDepth,l)){x("NHWC"===r,(()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=Cu(e,t,n,s,r,i,a);return null!=o&&(h=La(h,o)),kd(h,l,u,c)}const h=ci(e,"x","conv2d","float32"),d=ci(t,"filter","conv2d","float32");let p=h,f=!1;3===h.rank&&(f=!0,p=Xl(h,[1,h.shape[0],h.shape[1],h.shape[2]])),x(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),x(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),Kl("fused conv2d",s,a);const g="NHWC"===r?p.shape[3]:p.shape[1];x(d.shape[2]===g,(()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${d.shape[2]}.`)),x(Gl(n,i),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${i}'`));const m=_l(p.shape,d.shape,n,i,s,a);let b,y;if(null!=o&&(b=ci(o,"bias","fused conv2d"),[b]=Gr(b,h),"NHWC"===r?bo(m.outShape,b.shape):(x(b.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`)),x(0===b.shape.length||b.shape[0]===m.outChannels||1===b.shape[0],(()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${m.outChannels})`)))),null!=u){const e=u.shape;if(x(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)x(1===e[0]||e[0]===m.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${m.outChannels}).`));else if(3===e.length)try{bo(e,m.outShape)}catch(I){const t=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${m.outShape}).`;throw Error(t)}y=ci(u,"prelu weights","fused conv2d")}const v=(e,t)=>{x("NHWC"===r,(()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`));const[a,o,u,c]=t,h=vd(e,u,l);x(Vl(i),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`));const d=Tu(o.shape,h,a,n,s),p=gd(o,h,a.shape,n,s),f=[d,p];if(null!=c){const e=wd(c,h);f.push(e)}return f},w={x:p,filter:d,bias:b,preluActivationWeights:y},k={strides:n,pad:s,dataFormat:r,dilations:i,dimRoundingMode:a,activation:l,leakyreluAlpha:c};if(null==o){const e=Ja(((e,t,n)=>{let s=ei.runKernel(Cs,w,k);return n([t,e,s]),f&&(s=Xl(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:v}}));return e(p,d)}{const e=Ja(((e,t,n,s)=>{let r=ei.runKernel(Cs,w,k);return s([t,e,r,n]),f&&(r=Xl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}));return e(p,d,b)}}const Sd=pi({fusedConv2d_:Cd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $d(e,t,n,s,r,i=[1,1],a){let o=e;3===e.rank&&(o=Xl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=Xl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:s,pad:r,dimRoundingMode:a,dilations:i,filterShape:n};return ei.runKernel(nt,u,c)}const Nd=pi({depthwiseConv2dNativeBackpropFilter_:$d});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Td(e,t,n,s,r,i=[1,1],a){let o=t,l=!1;3===t.rank&&(l=!0,o=Xl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:s,pad:r,dimRoundingMode:a,dilations:i,inputShape:e},h=ei.runKernel(st,u,c);return l?Xl(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const Ed=pi({depthwiseConv2dNativeBackpropInput_:Td});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rd({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:i="linear",preluActivationWeights:a,leakyreluAlpha:o=.2}){if(!1===Id(ei.state.gradientDepth,i)){let l=kc(e,t,n,s);return null!=r&&(l=La(l,r)),kd(l,i,a,o)}let l=ci(e,"a","fused matMul"),u=ci(t,"b","fused matMul");[l,u]=Gr(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),g=u.shape.slice(0,-2),m=w(f),b=w(g);x(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${s} must match.`));const y=bo(l.shape.slice(0,-2),u.shape.slice(0,-2)),v=y.concat([d,p]),k=Xl(l,n?[m,c,d]:[m,d,c]),I=Xl(u,s?[b,p,h]:[b,h,p]);let C,S;null!=r&&(C=ci(r,"bias","fused matMul"),[C]=Gr(C,l),bo(v,C.shape)),null!=a&&(S=ci(a,"prelu weights","fused matMul"));const $=(e,t)=>{const[a,o,l,u]=t,c=vd(Xl(e,l.shape),l,i);let h,d;if(n||s?!n&&s?(h=kc(c,o,!1,!1),d=kc(c,a,!0,!1)):n&&!s?(h=kc(o,c,!1,!0),d=kc(a,c,!1,!1)):(h=kc(o,c,!0,!0),d=kc(c,a,!0,!0)):(h=kc(c,o,!1,!0),d=kc(a,c,!0,!1)),null!=r){const e=wd(u,c);return[h,d,e]}return[h,d]},N={a:k,b:I,bias:C,preluActivationWeights:S},T={transposeA:n,transposeB:s,activation:i,leakyreluAlpha:o};if(null==r){const e=Ja(((e,t,n)=>{const s=ei.runKernel(Is,N,T);return n([e,t,s]),{value:Xl(s,v),gradFunc:$}}));return e(k,I)}{const e=Ja(((e,t,n,s)=>{const r=ei.runKernel(Is,N,T);return s([e,t,r,n]),{value:Xl(r,v),gradFunc:$}}));return e(k,I,C)}}const Ad=pi({fusedMatMul_:Rd});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _d(e,t,n){if(v(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const s=oi(e,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return mi(e,t,s,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Fd(e,t,n,s,r="bilinear",i=0){const a=ci(e,"image","cropAndResize"),o=ci(t,"boxes","cropAndResize","float32"),l=ci(n,"boxInd","cropAndResize","int32"),u=o.shape[0];x(4===a.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`)),x(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),x(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),x(2===s.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`)),x(s[0]>=1&&s[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${s}`)),x("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const c={image:a,boxes:o,boxInd:l},h={method:r,extrapolationValue:i,cropSize:s},d=ei.runKernel(Ze,c,h);return d}const Dd=pi({cropAndResize_:Fd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Od(e){const t=ci(e,"image","flipLeftRight","float32");x(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t},s=ei.runKernel(vt,n,{});return s}const Ld=pi({flipLeftRight_:Od});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Md(e){const t=ci(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];x(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),x(1===s,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,Ju(t,r)}const zd=pi({grayscaleToRGB_:Md});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Pd(e,...t){const n=t.map(((e,t)=>ci(e,`tensors${t}`,"einsum"))),s={equation:e};return ei.runKernel(ct,n,s)}const Bd=pi({einsum_:Pd});
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Wd(e){const t=ci(e,"image","RGBToGrayscale"),n=t.rank-1,s=t.shape[n];x(t.rank>=2,(()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`)),x(3===s,(()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`));const r=t.dtype,i=ka(t,"float32"),a=Vh([.2989,.587,.114]);let o;switch(t.rank){case 2:o=Bd("ij,j->i",i,a);break;case 3:o=Bd("ijk,k->ij",i,a);break;case 4:o=Bd("ijkl,l->ijk",i,a);break;case 5:o=Bd("ijklm,m->ijkl",i,a);break;case 6:o=Bd("ijklmn,n->ijklm",i,a);break;default:throw new Error("Not a valid tensor rank.")}return o=qu(o,-1),ka(o,r)}const Ud=pi({rgbToGrayscale_:Wd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Vd(e,t,n=0,s=.5){const r=ci(e,"image","rotateWithOffset","float32");x(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const i={image:r},a={radians:t,fillValue:n,center:s},o=ei.runKernel(ks,i,a);return o}const Gd=pi({rotateWithOffset_:Vd});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Hd(e,t,n,s,r,i){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==i&&(i=0);const a=e.shape[0];return n=Math.min(n,a),x(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was '${s}'`)),x(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),x(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),x(1===t.rank,(()=>"scores must be a 1D tensor")),x(t.shape[0]===a,(()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${t.shape[0]}`)),x(0<=i&&i<=1,(()=>`softNmsSigma must be in [0, 1], but was '${i}'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:i}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jd(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const i=ci(e,"boxes","nonMaxSuppression","float32"),a=ci(t,"scores","nonMaxSuppression","float32"),o=Hd(i,a,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l={maxOutputSize:n,iouThreshold:s,scoreThreshold:r};return ei.runKernel(un,{boxes:i,scores:a},l)}const Kd=pi({nonMaxSuppression_:jd});
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qd(e,t,n){const s=Xd(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function Xd(e,t,n){return Yd(e,t,n||Jd)}function Jd(e,t){return e>t?1:e<t?-1:0}function Yd(e,t,n){let s=0,r=e.length,i=0,a=!1;while(s<r){i=s+(r-s>>>1);const o=n(t,e[i]);o>0?s=i+1:(r=i,a=!o)}return a?s:-s-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zd(e,t,n,s,r){return tp(e,t,n,s,r,0)}function Qd(e,t,n,s,r,i){return tp(e,t,n,s,r,0,!1,i,!0)}function ep(e,t,n,s,r,i){return tp(e,t,n,s,r,i,!0)}function tp(e,t,n,s,r,i,a=!1,o=!1,l=!1){const u=[];for(let m=0;m<t.length;m++)t[m]>r&&u.push({score:t[m],boxIndex:m,suppressBeginIndex:0});u.sort(rp);const c=i>0?-.5/i:0,h=[],d=[];while(h.length<n&&u.length>0){const t=u.pop(),{score:n,boxIndex:i,suppressBeginIndex:a}=t;if(n<r)break;let o=!1;for(let l=h.length-1;l>=a;--l){const n=np(e,i,h[l]);if(n>=s){o=!0;break}if(t.score=t.score*sp(s,c,n),t.score<=r)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(i),d.push(t.score)):t.score>r&&qd(u,t,rp))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:h};return a&&(g["selectedScores"]=d),l&&(g["validOutputs"]=p),g}function np(e,t,n){const s=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),i=Math.min(s[0],s[2]),a=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),p=(o-i)*(l-a),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const g=Math.max(i,u),m=Math.max(a,c),b=Math.min(o,h),x=Math.min(l,d),y=Math.max(b-g,0)*Math.max(x-m,0);return y/(p+f-y)}function sp(e,t,n){const s=Math.exp(t*n*n);return n<=e?s:0}function rp(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function ip(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const i=ci(e,"boxes","nonMaxSuppressionAsync"),a=ci(t,"scores","nonMaxSuppressionAsync"),o=Hd(i,a,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l=await Promise.all([i.data(),a.data()]),u=l[0],c=l[1],{selectedIndices:h}=Zd(u,c,n,s,r);return i!==e&&i.dispose(),a!==t&&a.dispose(),Vh(h,"int32")}const ap=ip;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function op(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const a=ci(e,"boxes","nonMaxSuppression"),o=ci(t,"scores","nonMaxSuppression"),l=Hd(a,o,n,s,r,i);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,i=l.softNmsSigma;const u={boxes:a,scores:o},c={maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:i},h=ei.runKernel(hn,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}const lp=pi({nonMaxSuppressionWithScore_:op});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function up(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,i=0){const a=ci(e,"boxes","nonMaxSuppressionAsync"),o=ci(t,"scores","nonMaxSuppressionAsync"),l=Hd(a,o,n,s,r,i);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,i=l.softNmsSigma;const u=await Promise.all([a.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:d,selectedScores:p}=ep(c,h,n,s,r,i);return a!==e&&a.dispose(),o!==t&&o.dispose(),{selectedIndices:Vh(d,"int32"),selectedScores:Vh(p)}}const cp=up;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hp(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const a=ci(e,"boxes","nonMaxSuppression"),o=ci(t,"scores","nonMaxSuppression"),l=Hd(a,o,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,d={boxes:a,scores:o},p={maxOutputSize:u,iouThreshold:c,scoreThreshold:h,padToMaxOutputSize:i},f=ei.runKernel(cn,d,p);return{selectedIndices:f[0],validOutputs:f[1]}}const dp=pi({nonMaxSuppressionPadded_:hp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
async function pp(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,i=!1){const a=ci(e,"boxes","nonMaxSuppressionAsync"),o=ci(t,"scores","nonMaxSuppressionAsync"),l=Hd(a,o,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[d,p]=await Promise.all([a.data(),o.data()]),{selectedIndices:f,validOutputs:g}=Qd(d,p,u,c,h,i);return a!==e&&a.dispose(),o!==t&&o.dispose(),{selectedIndices:Vh(f,"int32"),validOutputs:Ya(g,"int32")}}const fp=pp;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gp(e,t,n=!1,s=!1){const r=ci(e,"images","resizeBilinear");x(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),x(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),x(!1===s||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let i=r,a=!1;3===r.rank&&(a=!0,i=Xl(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:i},l={alignCorners:n,halfPixelCenters:s,size:t},u=ei.runKernel(En,o,l);return a?Xl(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const mp=pi({resizeBilinear_:gp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bp(e,t,n=!1,s=!1){const r=ci(e,"images","resizeNearestNeighbor");x(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),x(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),x("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),x(!1===s||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let i=r,a=!1;3===r.rank&&(a=!0,i=Xl(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:i},l={alignCorners:n,halfPixelCenters:s,size:t},u=ei.runKernel(Nn,o,l);return a?Xl(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const xp=pi({resizeNearestNeighbor_:bp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yp(e,t,n){const s=ci(e,"x","bincount"),r=ci(t,"weights","bincount");x("int32"===s.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`)),x(n>=0,(()=>`size must be non-negative, but got ${n}.`)),x(r.size===s.size||0===r.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`));const i={x:s,weights:r},a={size:n};return ei.runKernel(_e,i,a)}const vp=pi({bincount_:yp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wp(e,t){let n=ci(e,"a","lessEqual","string_or_numeric"),s=ci(t,"b","lessEqual","string_or_numeric");[n,s]=Gr(n,s),bo(n.shape,s.shape);const r={a:n,b:s};return ei.runKernel(Lt,r)}const kp=pi({lessEqual_:wp});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ip(e){const t=ci(e,"x","round"),n={x:t};return ei.runKernel(Fn,n)}const Cp=pi({round_:Ip});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Sp(e,t="binary",n=!1,s=.5){const r=ci(e,"image","threshold"),i=.2989,a=.587,o=.114,l=r.shape[0]*r.shape[1];let u,c,h,d,p=Ua(Vh([s]),255);if(x(3===r.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`)),x(3===r.shape[2]||1===r.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`)),x("int32"===r.dtype||"float32"===r.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`)),x("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===r.shape[2]){[u,c,h]=Lh(r,[1,1,1],-1);const e=Ua(u,i),t=Ua(c,a),n=Ua(h,o);d=La(La(e,t),n)}else d=e;if("otsu"===t){const e=vp(ka(Cp(d),"int32"),bi([]),256);p=$p(e,l)}const f=n?kp(d,p):rc(d,p),g=ka(Ua(f,255),"int32");return g}function $p(e,t){let n,s,r,i,a,o,l=Vh([-1]),u=Vh([0]),c=Vh([0]);for(let h=0;h<e.size-1;h++){n=kh(e,0,h+1),s=kh(e,h+1),a=Ba(mc(n),t),o=Ba(mc(s),t);const d=mc(Ua(n,ch(0,n.size)));r=Ba(d,mc(n));const p=io(s.shape,n.size),f=La(ch(0,s.size),p),g=Ua(s,f);i=Ba(mc(g),mc(s));const m=co(r,i),b=co(r,i),x=Ua(a,o);c=Ua(Ua(x,m),b);const y=rc(c,u);u=Jh(y,c,u),l=Jh(y,Vh([h]),l)}return l}const Np=pi({threshold_:Sp});
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Tp(e,t,n="nearest",s="constant",r=0,i){const a=ci(e,"image","transform","float32"),o=ci(t,"transforms","transform","float32");x(4===a.rank,(()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`)),x(2===o.rank&&(o.shape[0]===a.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),x(null==i||2===i.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${i}.`));const l={image:a,transforms:o},u={interpolation:n,fillMode:s,fillValue:r,outputShape:i};return ei.runKernel(fs,l,u)}const Ep=pi({transform_:Tp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rp(e,t){let n=ci(e,"a","less","string_or_numeric"),s=ci(t,"b","less","string_or_numeric");[n,s]=Gr(n,s),bo(n.shape,s.shape);const r={a:n,b:s};return ei.runKernel(Ot,r)}const Ap=pi({less_:Rp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _p(e,t,n){const s=ci(e,"a","bandPart");x(s.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`));const r=s.shape,[i,a]=s.shape.slice(-2);let o,l;"number"===typeof t?(x(t%1===0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),x(t<=i,(()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${i}).`)),o=ci(t<0?i:t,"numLower","bandPart")):(x("int32"===t.dtype,(()=>"bandPart(): numLower's dtype must be an int32.")),o=Jh(Ap(t,0),i,_c(t,i))),"number"===typeof n?(x(n%1===0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`)),x(n<=a,(()=>`bandPart(): numUpper (${n}) must not be greater than the number of columns (${a}).`)),l=ci(n<0?a:n,"numUpper","bandPart")):(x("int32"===n.dtype,(()=>"bandPart(): numUpper's dtype must be an int32.")),l=Jh(Ap(n,0),a,_c(n,a)));const u=Xl(ch(0,i,1,"int32"),[-1,1]),c=ch(0,a,1,"int32"),h=co(u,c),d=vc(kp(h,o),ac(h,Gc(l))),p=Xc([i,a],s.dtype);return Xl(Bh(Kh(Xl(s,[-1,i,a])).map((e=>Jh(d,e,p)))),r)}const Fp=pi({bandPart_:_p});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Dp(e,t="euclidean",n=null,s=!1){e=ci(e,"x","norm");const r=Op(e,t,n);let i=r.shape;if(s){const t=T(n,e.shape);i=Lc(r.shape,t)}return Xl(r,i)}function Op(e,t,n=null){if(0===e.rank)return fo(e);if(1!==e.rank&&null===n)return Op(Xl(e,[-1]),t,n);if(1===e.rank||"number"===typeof n||Array.isArray(n)&&1===n.length){if(1===t)return mc(fo(e),n);if(t===1/0)return fc(fo(e),n);if(t===-1/0)return Rc(fo(e),n);if("euclidean"===t||2===t)return Ga(mc(lo(fo(e),Ya(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return fc(mc(fo(e),n[0]),n[1]-1);if(t===1/0)return fc(mc(fo(e),n[1]),n[0]);if(t===-1/0)return Rc(mc(fo(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Ga(mc(ja(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Lp=pi({norm_:Dp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Mp(e){let t;if(Array.isArray(e)){t=!1,x(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)x(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Lh(e,e.shape[0],0).map((e=>zh(e,[0])));x(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],s=e;for(let r=0;r<e.length;++r)n.push(ei.tidy((()=>{let e=s[r];if(r>0)for(let t=0;t<r;++t){const s=Ua(mc(Ua(n[t],e)),n[t]);e=co(e,s)}return Ba(e,Lp(e,"euclidean"))})));return t?Bh(n,0):n}const zp=pi({gramSchmidt_:Mp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Pp(e,t=!1){if(x(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Bp(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),s=Kh(Xl(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],i=[];s.forEach((e=>{const[n,s]=Bp(e,t);r.push(n),i.push(s)}));const a=Xl(Bh(r,0),e.shape),o=Xl(Bh(i,0),e.shape);return[a,o]}}function Bp(e,t=!1){return ei.tidy((()=>{x(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],s=e.shape[1];let r=Zu(n),i=Ca(e);const a=_d([[1]],[1,1]);let o=Ca(a);const l=n>=s?s:n;for(let e=0;e<l;++e){const t=i,l=o,u=r;[o,i,r]=ei.tidy((()=>{const t=kh(i,[e,e],[n-e,1]),l=Lp(t),u=kh(i,[e,e],[1,1]),c=Jh(rc(u,0),_d([[-1]]),_d([[1]])),h=co(u,Ua(c,l)),d=Ba(t,h);o=1===d.shape[0]?Ca(a):fu([a,kh(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=Gc(Ba(kc(c,h),l)),f=kh(i,[e,0],[n-e,s]),g=Ua(p,o),m=nd(o);if(0===e)i=co(f,kc(g,kc(m,f)));else{const t=co(f,kc(g,kc(m,f)));i=fu([kh(i,[0,0],[e,s]),t],0)}const b=nd(g),x=kh(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=co(x,kc(kc(x,o),b));else{const t=co(x,kc(kc(x,o),b));r=fu([kh(r,[0,0],[n,e]),t],1)}return[o,i,r]})),Aa([t,l,u])}return!t&&n>s&&(r=kh(r,[0,0],[n,s]),i=kh(i,[0,0],[s,s])),[r,i]}))}const Wp=pi({qr_:Pp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var Up;(function(e){e[e["NONE"]=0]="NONE",e[e["MEAN"]=1]="MEAN",e[e["SUM"]=2]="SUM",e[e["SUM_BY_NONZERO_WEIGHTS"]=3]="SUM_BY_NONZERO_WEIGHTS"})(Up||(Up={}));
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Vp(e,t){let n=ci(e,"a","squaredDifference"),s=ci(t,"b","squaredDifference");[n,s]=Gr(n,s),bo(n.shape,s.shape);const r={a:n,b:s},i={};return ei.runKernel(ns,r,i)}const Gp=pi({squaredDifference_:Vp});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Hp(e,t=null,n=!1){const s=ci(e,"x","logSumExp"),r=T(t,s.shape),i=fc(s,r,!0),a=co(s,i),o=ju(a),l=mc(o,r),u=cc(l),c=La(Xl(i,u.shape),u);if(n){const e=Lc(c.shape,r);return Xl(c,e)}return c}const jp=pi({logSumExp_:Hp});const Kp={flipLeftRight:Ld,grayscaleToRGB:zd,resizeNearestNeighbor:xp,resizeBilinear:mp,rgbToGrayscale:Ud,rotateWithOffset:Gd,cropAndResize:Dd,nonMaxSuppression:Kd,nonMaxSuppressionAsync:ap,nonMaxSuppressionWithScore:lp,nonMaxSuppressionWithScoreAsync:cp,nonMaxSuppressionPadded:dp,nonMaxSuppressionPaddedAsync:fp,threshold:Np,transform:Ep},qp={bandPart:Fp,gramSchmidt:zp,qr:Wp};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Xp{static sgd(e){return new wo(e)}static momentum(e,t,n=!1){return new ko(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new Io(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new ho(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new ro(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new vo(e,t,n,s,r)}static adagrad(e,t=.1){return new ao(e,t)}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Jp=Xp;n(4633);
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Yp=(()=>"undefined"!==typeof requestAnimationFrame?requestAnimationFrame:"undefined"!==typeof setImmediate?setImmediate:e=>e())();function Zp(){return new Promise((e=>Yp((()=>e()))))}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Qp(e,t){const n=e[0].length;e.forEach(((e,t)=>{x(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),x(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const s=e[0];e.forEach(((e,r)=>{for(let i=0;i<n;i++)x(i===t||e[i]===s[i],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`))}))}function ef(e,t){const n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var tf;function nf(e,t,n){let s=new Array;if(null==n&&null==t)return s;if(null==t)while(s.length<e+n.length)s.push(-1);else s=t.slice();if(null==n)return s;if(e+n.length!==s.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${s.length}`);for(let r=1;r<n.length;++r){const i=n[r],a=s[s.length-n.length+r],o=s[a];if(i>=0)if(o>=0){if(o!==i)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+e}] = ${i} but shape[${r+e}] = ${o}`)}else s[a]=i}return s}function sf(e){const t={FIRST_DIM_SIZE:tf.FIRST_DIM_SIZE,VALUE_ROWIDS:tf.VALUE_ROWIDS,ROW_LENGTHS:tf.ROW_LENGTHS,ROW_SPLITS:tf.ROW_SPLITS,ROW_LIMITS:tf.ROW_LIMITS,ROW_STARTS:tf.ROW_STARTS},n=[];for(const s of e){if(!(s in t))break;n.push(t[s])}return n}function rf(e){return 0===e.length?0:e[0]===tf.FIRST_DIM_SIZE?e.length-1:e.length}function af(e,t){if(null==e||null==t)return;const n=e.length,s=t.length;if(n>=s)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(n,s-1);++r){const n=e[r],s=t[r+1];if(n>=0&&s>=0&&1!==n&&n!==s)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-e.length}] = ${n} but ragged tensor input.flatValues.shape[${r-e.length}] = ${s}`)}}(function(e){e[e["FIRST_DIM_SIZE"]=0]="FIRST_DIM_SIZE",e[e["VALUE_ROWIDS"]=1]="VALUE_ROWIDS",e[e["ROW_LENGTHS"]=2]="ROW_LENGTHS",e[e["ROW_SPLITS"]=3]="ROW_SPLITS",e[e["ROW_LIMITS"]=4]="ROW_LIMITS",e[e["ROW_STARTS"]=5]="ROW_STARTS"})(tf||(tf={}));
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const of=30;function lf(e){return e<=of?e:U(e,Math.floor(Math.sqrt(e)))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uf(e,t,n){const s=n*("number"===typeof e?e:e[0]),r=t*("number"===typeof e?e:e[1]);return[s,r]}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cf(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let s=0;s<n;++s)r=r.concat([e[s+1]/t[s],t[s]]);r=r.concat(e.slice(n+1))}return r}function hf(e,t,n=!0){const s=[];if(n){s.push(t);for(let n=t+1;n<e;++n)n<=2*t?(s.push(n),s.push(n-(t+1))):s.push(n)}else{const n=[],r=[];for(let s=1;s<e;++s)s>=2*t+1||s%2===1?r.push(s):n.push(s);s.push(...n),s.push(0),s.push(...r)}return s}function df(e,t,n,s=!0){const r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let i=1;i<e.length;++i)i<=t.length?s?r.push(t[i-1]*e[i]):r.push(e[i]/t[i-1]):r.push(e[i]);return r}function pf(e,t){const n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function ff(e,t,n){const s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}function gf(e,t){const n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(0===w(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const r=t.shape,i=r[r.length-1];let a=1;for(let h=0;h<r.length-1;++h)a*=r[h];const o=e.shape,l=r.slice();l.pop();let u=1;for(let h=i;h<n;++h)u*=o[h],l.push(o[h]);const c=[...V(e.shape).map((e=>e/u)),1].slice(0,i);return[l,a,u,c]}function mf(e,t,n){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,i=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(i+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(i+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(i+" update.rank != "+(r+e.length-s));for(let a=0;a<r;++a)if(n.shape[a]!==t.shape[a])throw new Error(i+` updates.shape[${a}] (${n.shape[a]}) != indices.shape[${a}] (${t.shape[a]}).`);for(let a=0;a<n.rank-r;++a)if(n.shape[a+r]!==e[a+s])throw new Error(i+` updates.shape[${a+r}] (${n.shape[a+r]}) != shape[${a+r}] (${e[a+r]})`)}function bf(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}mf(n,t,e)}function xf(e,t,n){const s=t.shape.length,r=s>1?t.shape[s-1]:1,i=n.length;let a=1;for(let h=r;h<i;++h)a*=n[h];const o=r<1?1:r,l=w(t.shape)/o,u=[...V(n.slice(0,r)),1],c=w(n);return{sliceRank:r,numUpdates:l,sliceSize:a,strides:u,outputSize:c}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const yf=1.7580993408473768,vf=1.0507009873554805,wf=.3275911,kf=.254829592,If=-.284496736,Cf=1.421413741,Sf=-1.453152027,$f=1.061405429;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Nf(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function Tf(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function Ef(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=0;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function Rf(e){const t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let r=2;r<e.length;r+=4)n[Math.floor(r/4)]=e[r],s[Math.floor(r/4)]=e[r+1];return{real:n,imag:s}}function Af(e,t){const n=e[2*t],s=e[2*t+1];return{real:n,imag:s}}function _f(e,t,n,s){e[2*s]=t,e[2*s+1]=n}function Ff(e,t){const n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const i=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(i),s[r]=Math.sin(i)}return{real:n,imag:s}}function Df(e,t,n){const s=(n?2:-2)*Math.PI*(e/t),r=Math.cos(s),i=Math.sin(s);return{real:r,imag:i}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Of="->",Lf=/->/g,Mf=",",zf="...";function Pf(e,t){e=e.replace(/\s/g,"");const n=(e.length-e.replace(Lf,"").length)/Of.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${Of}").`);const[s,r]=e.split(Of);x(-1===s.indexOf(zf),(()=>`The ellipsis notation ("${zf}") is not supported yet.`));const i=s.split(Mf),a=i.length;if(t!==a)throw new Error(`Expected ${a} input tensors, received ${t}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let d=0;d<r.length;++d){const e=r[d];if(!i.some((t=>-1!==t.indexOf(e))))throw new Error(`Output subscripts contain the label ${e} not present in the input subscripts.`);-1===o.indexOf(e)&&o.push(e)}for(let d=0;d<s.length;++d){const e=s[d];-1===o.indexOf(e)&&e!==Mf&&o.push(e)}const l=new Array(i.length);for(let d=0;d<a;++d){if(new Set(i[d].split("")).size!==i[d].length)throw new Error(`Found duplicate axes in input component ${i[d]}. Support for duplicate axes in input is not implemented yet.`);l[d]=[];for(let e=0;e<i[d].length;++e)l[d].push(o.indexOf(i[d][e]))}const u=o.length,c=r.length,h=[];for(let d=c;d<u;++d)h.push(d);return{allDims:o,summedDims:h,idDims:l}}function Bf(e,t){let n=new Array(e);n.fill(-1);for(let r=0;r<t.length;++r)n[t[r]]=r;const s=[];for(let r=0;r<e;++r)-1===n[r]&&s.push(r);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:s}}function Wf(e,t,n){const s=new Array(e);for(let r=0;r<n.length;++r){const e=n[r].shape;for(let n=0;n<t[r].length;++n)void 0===s[t[r][n]]?s[t[r][n]]=e[n]:x(s[t[r][n]]===e[n],(()=>`Expected dimension ${s[t[r][n]]} at axis ${n} of input shaped ${JSON.stringify(e)}, but got dimension ${e[n]}`))}}function Uf(e,t){const n=e,s=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let a=0;a<r;++a)s.push([]);const i=[];for(let a=0;a<n.length;++a){const e=n[a],r=Gf(t,e);for(const t of r)-1===i.indexOf(t)&&(s[a].push(t),i.push(t))}return{path:n,steps:s}}function Vf(e){return e.every(((e,t)=>e===t))}function Gf(e,t){const n=[];for(let s=0;s<e.length;++s)0!==e[s].length&&-1===e[s].indexOf(t)&&-1!==t||n.push(s);return n}function Hf(e,t,n=0){let s=[];if("number"===typeof t)x(e.shape[n]%t===0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);x(r<=1,(()=>"There should be only one negative value in split array."));const i=t.indexOf(-1);if(-1!==i){const s=t.reduce(((e,t)=>t>0?e+t:e));t[i]=e.shape[n]-s}x(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=t}return s}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jf(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function Kf(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function qf(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xf(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function Jf(e,t){return`size ${e} must be non-negative, not ${t}`}function Yf(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Zf(e,t){const n=w(e),s=w(t);return`Input to reshape is a SparseTensor with ${n}\n  dense values, but the requested shape requires a multiple of ${s}. inputShape=${e} outputShape= ${t}`}function Qf(e,t){const n=w(e),s=w(t);return`Input to reshape is a tensor with ${n} dense values, but the requested shape has ${s}. inputShape=${e} outputShape=${t}`}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eg(){return"segment ids must be >= 0"}function tg(){return"segment ids are not increasing"}function ng(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function sg(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rg(e,t){let n,s=!1;e<=of?(n=e,s=!0):n=U(e,Math.floor(Math.sqrt(e)));while(!s)n>t||n===e?s=!0:n=U(e,n+1);return n}function ig(e,t,n){const s=[],r=e.length;for(let i=0;i<r;i++)i!==t?s.push(e[i]):s.push(n);return s}function ag(e,t,n,s){const r=t.shape.length,i=e.shape.length;if(0!==s&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>i)throw new Error(`batchDims (${s}) must be less than rank(x) (\n    ${i}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let h=0;h<s;++h)if(e.shape[h]!==t.shape[h])throw new Error(`x.shape[${h}]: ${e.shape[h]} should be equal to indices.shape[${h}]: ${t.shape[h]}.`);const a=e.shape[n],o=[];let l=1,u=1,c=1;for(let h=0;h<s;++h)o.push(e.shape[h]),l*=e.shape[h];for(let h=s;h<n;h++)o.push(e.shape[h]),u*=e.shape[h];for(let h=s;h<r;h++)o.push(t.shape[h]);for(let h=n+1;h<i;h++)o.push(e.shape[h]),c*=e.shape[h];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:a,outputShape:o}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function og(e){try{return e.map((e=>or(e)))}catch(iJ){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${iJ}`)}}function lg(e){return e.map((e=>ar(e)))}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ug(e,t){const n=[];for(let i=0;i<t.length;i++)t[i]&&n.push(i);const s=va(e,"int32"),r=va([n.length,e.length],"int32");for(let i=0;i<n.length;i++){const t=s.indexToLoc(n[i]),a=i*e.length;r.values.set(t,a)}return r.toTensor()}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
So();
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const cg={kernelName:de,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,yd(ka(n,"float32"),-1))}}},hg={kernelName:pe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ja(ka(n,"float32")),s=Ga(co(Ya(1),t));return Gc(Ba(e,s))}}}},dg={kernelName:fe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ga(co(ja(ka(n,"float32")),1));return Ba(e,t)}}}},pg={kernelName:ge,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=bo(n.shape,s.shape),i=()=>{let t=e;const s=mo(n.shape,r);return s.length>0&&(t=mc(t,s)),Xl(t,n.shape)},a=()=>{let t=e;const n=mo(s.shape,r);return n.length>0&&(t=mc(t,n)),Xl(t,s.shape)};return{a:i,b:a}}},fg={kernelName:me,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,s)=>{n[s]=()=>e.clone()})),n}},gg={kernelName:ye,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>qa(n)}}},mg={kernelName:ve,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>qa(n)}}},bg={kernelName:we,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ba(e,Ga(co(Ya(1),ja(ka(n,"float32")))))}}},xg={kernelName:ke,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Ga(La(Ya(1),ja(ka(n,"float32"))));return Ba(e,t)}}}},yg={kernelName:Se,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=bo(n.shape,s.shape),i=()=>{const t=La(ja(n),ja(s));let i=Ua(e,Ba(s,t));const a=mo(n.shape,r);return a.length>0&&(i=mc(i,a)),Xl(i,n.shape)},a=()=>{const t=La(ja(n),ja(s));let i=Gc(Ua(e,Ba(n,t)));const a=mo(s.shape,r);return a.length>0&&(i=mc(i,a)),Xl(i,s.shape)};return{a:i,b:a}}},vg={kernelName:Ie,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ba(e,La(ja(ka(n,"float32")),1))}}},wg={kernelName:Ce,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ba(e,co(Ya(1),ja(ka(n,"float32"))))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kg(e,t,n,s,r,i){const a=ci(e,"dy","avgPool3dGrad"),o=ci(t,"input","avgPool3dGrad");let l=a,u=o,c=!1;4===o.rank&&(c=!0,l=Xl(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=Xl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),x(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),x(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),Kl("avgPool3dGrad",r,i);const h={dy:l,input:u},d={filterSize:n,strides:s,pad:r,dimRoundingMode:i},p=ei.runKernel(Ee,h,d);return c?Xl(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const Ig=pi({avgPool3dGrad_:kg}),Cg={kernelName:Te,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:i,pad:a,dimRoundingMode:o}=n;return{x:()=>Ig(e,s,r,i,a,o)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Sg(e,t,n,s,r){const i=ci(e,"dy","avgPoolGrad"),a=ci(t,"input","avgPoolGrad");x(a.rank===i.rank,(()=>`Rank of input (${a.rank}) does not match rank of dy (${i.rank})`));let o=a,l=i,u=!1;3===a.rank&&(u=!0,o=Xl(a,[1,a.shape[0],a.shape[1],a.shape[2]]),l=Xl(i,[1,i.shape[0],i.shape[1],i.shape[2]])),x(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),x(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:s,pad:r},d=ei.runKernel(Ne,c,h);return u?Xl(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const $g=pi({avgPoolGrad_:Sg}),Ng={kernelName:$e,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:i,pad:a}=n;return{x:()=>$g(e,s,r,i,a)}}},Tg={kernelName:Re,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[s,r]=t,{transposeA:i,transposeB:a}=n;return i||a?!i&&a?{a:()=>kc(e,r,!1,!1),b:()=>kc(e,s,!0,!1)}:i&&!a?{a:()=>kc(r,e,!1,!0),b:()=>kc(s,e,!1,!1)}:{a:()=>kc(r,e,!0,!0),b:()=>kc(e,s,!0,!0)}:{a:()=>kc(e,r,!1,!0),b:()=>kc(s,e,!0,!1)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Eg(e,t,n){const s=ci(e,"x","spaceToBatchND");x(s.rank>=1+t.length,(()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`)),x(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),x(s.shape.reduce(((e,s,r)=>r>0&&r<=t.length?e&&(s+n[r-1][0]+n[r-1][1])%t[r-1]===0:e),!0),(()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const r={x:s},i={blockShape:t,paddings:n};return ei.runKernel(qn,r,i)}const Rg=pi({spaceToBatchND_:Eg}),Ag={kernelName:Ae,gradFunc:(e,t,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>Rg(e,s,r)}}},_g={kernelName:De,gradFunc:(e,t,n)=>{const s=n,r=s.inputShape,i=s.shape,a=Array.from(i);for(let l=r.length-1;l>=0;l--)if(r[l]===i[l])a[l]=1;else if(1!==r[l])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${i}].`);const o=[];for(let l=0;l<a.length;l++)a[l]>1&&o.push(l);return{x:()=>mc(e,o,!0)}}},Fg={kernelName:Le,gradFunc:e=>({x:()=>e.clone()})},Dg={kernelName:Me,gradFunc:e=>({x:()=>qa(e)})},Og={kernelName:ze,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{clipValueMin:r,clipValueMax:i}=n;return{x:()=>Jh(vc(ac(s,r),kp(s,i)),e,qa(e))}}},Lg={kernelName:Be,inputsToSave:["x"],gradFunc:cg.gradFunc},Mg={kernelName:We,saveAllInputs:!0,gradFunc:(e,t,n)=>{const s=t.map((e=>e.shape)),{axis:r}=n,i=T(r,t[0].shape)[0],a=s.map((e=>e[i])),o=Lh(e,a,i);return o.map((e=>()=>e))}},zg={kernelName:Ue,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{dilations:i,strides:a,pad:o,dataFormat:l}=n;return x(Vl(i),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${i}'`)),{x:()=>Tu(s.shape,e,r,a,o,l),filter:()=>gd(s,e,r.shape,a,o,l)}}},Pg={kernelName:Ge,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{strides:i,pad:a,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Cu(e,r,i,a,o,1,l),filter:()=>gd(e,s,r.shape,i,a,o,l)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bg(e,t,n,s,r){let i=e;4===e.rank&&(i=Xl(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let a=t;4===a.rank&&(a=Xl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),x(5===i.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${i.shape}.`)),x(5===a.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`)),x(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),x(i.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${i.shape[4]}) must match input depth in filter (${n[3]}.`)),x(a.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:i,dy:a},l={strides:s,pad:r,filterShape:n};return ei.runKernel(je,o,l)}const Wg=pi({conv3DBackpropFilter_:Bg}),Ug={kernelName:He,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:i}=n;x(Vl(s),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const[a,o]=t;return{x:()=>Du(a.shape,e,o,r,i),filter:()=>Wg(a,e,o.shape,r,i)}}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Vg(e){const t=ci(e,"x","sin","float32"),n={x:t};return ei.runKernel(Wn,n)}const Gg=pi({sin_:Vg}),Hg={kernelName:qe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(Gc(Gg(ka(n,"float32"))),e)}}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jg(e){const t=ci(e,"x","sinh"),n={x:t};return ei.runKernel(Un,n)}const Kg=pi({sinh_:jg}),qg={kernelName:Xe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(Kg(ka(n,"float32")),e)}}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xg(e,t=0,n=!1,s=!1){const r=ci(e,"x","cumsum"),i={x:r},a={axis:t,exclusive:n,reverse:s};return ei.runKernel(Ye,i,a)}const Jg=pi({cumsum_:Xg}),Yg={kernelName:Ye,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r,exclusive:i,reverse:a}=n;return{x:()=>{const t=zc([r],s.rank);let n=Jg(e,r,i,!a);return null!=t&&(n=nd(n,t)),n}}}},Zg={kernelName:tt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:i,dimRoundingMode:a}=n,o=null==s?[1,1]:s;x(Vl(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return x(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),x(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),x(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),x(Gl(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),Kl("depthwiseConv2d",i,a),{x:()=>Ed(l.shape,e,u,r,i,o,a),filter:()=>Nd(l,e,u.shape,r,i,o,a)}}},Qg={kernelName:it,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,i={x:s,filter:r,dy:e},a={x:s,filter:r,dy:e};return{x:()=>ei.runKernel(at,i,n),filter:()=>ei.runKernel(ot,a,n)}}},em={kernelName:ht,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,s={dy:e,y:n};return{x:()=>ei.runKernel(dt,s)}}},tm={kernelName:pt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=Ua(ju(Gc(ja(n))),2/Math.sqrt(Math.PI));return{x:()=>Ua(e,s)}}},nm={kernelName:gt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,n)}}},sm={kernelName:mt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Xl(e,n.shape)}}},rm={kernelName:bt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,ju(n))}}},im={kernelName:wt,gradFunc:e=>({x:()=>qa(e)})},am={kernelName:kt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=bo(n.shape,s.shape),i=()=>{const t=Ba(e,ka(s,"float32")),i=mo(n.shape,r);return i.length>0?Xl(mc(t,i),n.shape):t},a=()=>{let t=Ua(e,ka(n,"float32"));const i=mo(s.shape,r);i.length>0&&(t=Xl(mc(t,i),s.shape));const a=ja(s);return Gc(Ba(t,ka(a,"float32")))};return{a:i,b:a}}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function om(e){const t=ci(e,"x","rsqrt","float32"),n={x:t};return ei.runKernel(Dn,n)}const lm=pi({rsqrt_:om}),um={kernelName:It,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:s}=n,[r,i,a,o]=t,l=null==o?Ya(1):o,u=mo(i.shape,r.shape),c=[];if(1===i.rank){for(let e=0;e<r.shape.length-1;++e)c.push(r.shape[e]);c.push(1)}const h=co(r,i),d=Ua(e,l),p=lm(La(a,Ya(s))),f=Ua(Ua(Ua(p,p),p),Ya(-.5)),g=()=>1===i.rank?Xl(Ua(Ua(e,Ju(Xl(p,[1,1,1,i.shape[0]]),c)),l),r.shape):Xl(Ua(Ua(e,p),l),r.shape),m=()=>{let e=Ua(Ua(p,Ya(-1)),d);return 1===i.rank&&(e=mc(e,u)),Xl(e,i.shape)},b=()=>{let e=Ua(Ua(f,h),d);return 1===i.rank&&(e=mc(e,u)),Xl(e,i.shape)},x=()=>{const t=Ua(h,p);let n=Ua(e,t);return 1===i.rank&&(n=mc(n,u)),Xl(n,i.shape)},y=()=>{let t=e;return 1===i.rank&&(t=mc(t,u)),Xl(t,i.shape)};return{x:g,mean:m,variance:b,scale:x,offset:y}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cm(e,t,n){const s=ci(e,"x","unsortedSegmentSum"),r=ci(t,"segmentIds","unsortedSegmentSum","int32");x(I(n),(()=>"numSegments must be of dtype int"));const i={x:s,segmentIds:r},a={numSegments:n};return ei.runKernel(xs,i,a)}const hm=pi({unsortedSegmentSum_:cm}),dm={kernelName:Ct,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[s,r]=t,{axis:i}=n,a=T(i,s.shape)[0],o=()=>{const t=s.shape,n=r.size,o=t.slice(0,a),l=o.length,u=t.slice(i,t.length).slice(1),c=u.length,h=pm(0,l),d=pm(l+1,l+1+c),p=fm([o,[n],u]),f=Xl(e,p),g=Xl(r,[n]),m=fm([[l],h,d]),b=nd(f,m);let x=hm(b,g,s.shape[a]);const y=Pc(m);return x=nd(x,y),x};return{x:o,indices:()=>r}}};function pm(e,t){const n=[];for(let s=e;s<t;++s)n.push(s);return n}function fm(e){const t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const gm={kernelName:Nt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>qa(n),b:()=>qa(s)}}},mm={kernelName:Tt,gradFunc:e=>({x:()=>ka(e,"float32")})},bm={kernelName:At,gradFunc:e=>({x:()=>qa(e)})},xm={kernelName:_t,gradFunc:e=>({x:()=>qa(e)})},ym={kernelName:Ft,gradFunc:e=>({x:()=>qa(e)})},vm={kernelName:Dt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{alpha:r}=n,i=rc(s,0);return{x:()=>Jh(i,e,Ua(e,r))}}},wm={kernelName:Pt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ba(e,La(n,1))}}},km={kernelName:zt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ba(e,ka(n,"float32"))}}},Im={kernelName:Vt,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;return{logits:()=>{const t=!0,n=ju(s);return co(e,Ua(mc(e,r,t),n))}}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Cm(e,t,n,s=5,r=1,i=1,a=.5){const o={x:e,y:t,dy:n},l={depthRadius:s,bias:r,alpha:i,beta:a};return ei.runKernel(Ht,o,l)}const Sm=pi({localResponseNormalizationBackprop_:Cm}),$m={kernelName:Gt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{depthRadius:i,bias:a,alpha:o,beta:l}=n;return{x:()=>Sm(s,r,e,i,a,o,l)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Nm(e,t,n,s){return t.rank<n.rank&&(t=Xl(t,Lc(t.shape,s))),e.rank<n.rank&&(e=Xl(e,Lc(e.shape,s))),{x:()=>{const s=Ua(e,ka(Gu(n,t),e.dtype));return s}}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Tm={kernelName:jt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{reductionIndices:r}=s,i=t[0],a=t[1],o=T(r,i.shape),l=Nm(e,a,i,o);return{x:()=>l["x"]()}}},Em={kernelName:Kt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=()=>Ua(e,ka(ac(n,s),"float32")),i=()=>Ua(e,ka(Ap(n,s),"float32"));return{a:r,b:i}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rm(e,t,n,s,r,i,a){const o=ci(e,"dy","maxPool3dGrad"),l=ci(t,"input","maxPool3dGrad"),u=ci(n,"output","maxPool3dGrad");let c=o,h=l,d=u,p=!1;4===l.rank&&(p=!0,c=Xl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=Xl(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=Xl(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),x(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),x(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),x(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),Kl("maxPool3dGrad",i,a);const f={dy:c,input:h,output:d},g={filterSize:s,strides:r,pad:i,dimRoundingMode:a},m=ei.runKernel(Yt,f,g);return p?Xl(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const Am=pi({maxPool3dGrad_:Rm}),_m={kernelName:Jt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=n;return{x:()=>Am(e,s,r,i,a,o,l)}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Fm(e,t,n,s,r,i,a){const o=ci(e,"dy","maxPoolGrad"),l=ci(t,"input","maxPoolGrad"),u=ci(n,"output","maxPoolGrad");x(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),x(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),x(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),Kl("maxPoolGrad",i,a);const c={dy:o,input:l,output:u},h={filterSize:s,strides:r,pad:i,dimRoundingMode:a};return ei.runKernel(Xt,c,h)}const Dm=pi({maxPoolGrad_:Fm}),Om={kernelName:qt,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:i,strides:a,pad:o}=n;return{x:()=>Dm(e,s,r,i,a,o)}}},Lm={kernelName:Qt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n,i=T(r,s.shape),a=Oc(s.shape,i),o=a[1],l=w(o),u=()=>{const t=s.shape.slice();i.forEach((e=>{t[e]=1}));const n=Xl(e,t),r=Ba(Ua(n,Jc(s.shape,"float32")),l);return r};return{x:u}}},Mm={kernelName:en,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{axis:r}=s,[i,a]=t,o=T(r,i.shape),l=Nm(e,a,i,o);return{x:()=>l["x"]()}}},zm={kernelName:tn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=()=>Ua(e,ka(kp(n,s),"float32")),i=()=>Ua(e,ka(rc(n,s),"float32"));return{a:r,b:i}}},Pm={kernelName:nn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,i=r.map((e=>e[0]));return{x:()=>kh(e,i,s.shape)}}},Bm={kernelName:sn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=bo(n.shape,s.shape),i=()=>{const t=mo(n.shape,r);return t.length>0?Xl(mc(e,t),n.shape):e},a=()=>{const t=Ua(e,Gc(ec(Ba(n,s)))),i=mo(s.shape,r);return i.length>0?Xl(mc(t,i),s.shape):t};return{a:i,b:a}}},Wm={kernelName:an,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=bo(n.shape,s.shape),i=()=>{const t=Ua(e,ka(s,"float32")),i=mo(n.shape,r);return i.length>0?Xl(mc(t,i),n.shape):t},a=()=>{const t=Ua(e,ka(n,"float32")),i=mo(s.shape,r);return i.length>0?Xl(mc(t,i),s.shape):t};return{a:i,b:a}}},Um={kernelName:on,gradFunc:e=>({x:()=>Gc(e)})},Vm={kernelName:pn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Xc(n.shape,"float32")}}},Gm={kernelName:dn,gradFunc:e=>({x:()=>qa(e)})},Hm={kernelName:fn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:s}=n,r=Kh(e,s);return r.map((e=>()=>e))}},jm={kernelName:gn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,i=r.map((e=>e[0]));return{x:()=>kh(e,i,s.shape)}}},Km={kernelName:mn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,s,r]=t,i=n,a=s,o=bo(i.shape,a.shape),l=()=>{const t=ka(a,"float32");let n=Ua(e,Ua(t,lo(i,co(t,Ya(1)))));const s=mo(i.shape,o);return s.length>0&&(n=mc(n,s)),Xl(n,i.shape)},u=()=>{const t=rc(i,0),n=Jh(t,cc(i),qa(i));let s=Ua(e,Ua(r,n));const l=mo(a.shape,o);return l.length>0&&(s=mc(s,l)),Xl(s,a.shape)};return{a:l,b:u}}},qm={kernelName:bn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,s]=t,r=rc(n,0);return{x:()=>Jh(r,e,Ua(e,s)),alpha:()=>{let t=Jh(r,qa(e),Ua(e,n));const i=mo(s.shape,e.shape);return i.length>0&&(t=mc(t,i)),Xl(t,s.shape)}}}};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Xm(e,t=0,n=!1,s=!1){const r=ci(e,"x","cumprod"),i={x:r},a={axis:t,exclusive:n,reverse:s};return ei.runKernel(Je,i,a)}const Jm=pi({cumprod_:Xm});
/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ym(e,t,n){const s=e.shape.slice();s[n]=1;const r=Xl(t,s),i=Jm(e,n,!0,!1),a=Jm(e,n,!0,!0),o=Ua(i,a);return Ua(r,o)}function Zm(e,t,n){const s=e.shape.length,r=s-n.length,i=zc(n,s);let a=e;null!=i&&(a=nd(e,i));const o=a.shape.slice(),l=o.splice(s-n.length,n.length),u=l.reduce(((e,t)=>e*t),1);o.push(u);const c=a.reshape(o);let h=Ym(c,t,r);if(h=h.reshape(a.shape),null!=i){const e=Pc(i);h=nd(h,e)}return h}const Qm={kernelName:xn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;let i=[];return i=void 0===r||null===r?s.shape.map(((e,t)=>t)):"number"===typeof r?[r]:r,{x:()=>Zm(s,e,i)}}},eb={kernelName:ut,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=bo(n.shape,s.shape),i=()=>{const t=Ba(e,ka(s,"float32")),i=mo(n.shape,r);return i.length>0?Xl(mc(t,i),n.shape):t},a=()=>{let t=Ua(e,ka(n,"float32"));const i=mo(s.shape,r);i.length>0&&(t=Xl(mc(t,i),s.shape));const a=ja(s);return Gc(Ba(t,ka(a,"float32")))};return{a:i,b:a}}},tb={kernelName:Cn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ba(e,Gc(ja(n)))}}},nb={kernelName:An,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=Ua(kp(n,6),yd(n));return{x:()=>Ua(e,ka(s,"float32"))}}},sb={kernelName:Sn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,ka(yd(n),"float32"))}}},rb={kernelName:$n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Xl(e,n.shape)}}},ib={kernelName:En,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s},i=()=>ei.runKernel(Rn,r,n);return{images:i}}},ab={kernelName:Nn,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s},i=()=>ei.runKernel(Tn,r,n);return{images:i}}},ob={kernelName:_n,gradFunc:(e,t,n)=>{const{dims:s}=n,r=T(s,e.shape);return{x:()=>fh(e,r)}}},lb={kernelName:Fn,gradFunc:e=>({x:()=>qa(e)})},ub={kernelName:Dn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Gc(Ba(e,Ua(lo(n,1.5),2)))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cb(e){const t=ci(e,"x","logicalNot","bool"),n={x:t};return ei.runKernel(Wt,n)}const hb=pi({logicalNot_:cb}),db={kernelName:zn,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>ka(qa(n),"float32"),t:()=>Ua(e,ka(n,e.dtype)),e:()=>Ua(e,ka(hb(n),e.dtype))}}},pb={kernelName:Pn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=rc(n,Ya(0)),s=Ya(yf),r=Ya(vf),i=Ua(e,r),a=Ua(Ua(e,s),ju(ka(n,"float32")));return Jh(t,i,a)}}}},fb={kernelName:Gn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,Ua(n,co(Ya(1),n)))}}},gb={kernelName:Vn,gradFunc:e=>({x:()=>qa(e)})};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mb(e){const t=ci(e,"x","cos","float32"),n={x:t};return ei.runKernel(qe,n)}const bb=pi({cos_:mb}),xb={kernelName:Wn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(bb(ka(n,"float32")),e)}}};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yb(e){const t=ci(e,"x","cosh","float32"),n={x:t};return ei.runKernel(Xe,n)}const vb=pi({cosh_:yb}),wb={kernelName:Un,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(vb(ka(n,"float32")),e)}}},kb={kernelName:Bn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{begin:r,size:i}=n,a=s.shape,[o,l]=yl(s,r,i),u=[];for(let c=0;c<e.rank;c++)u.push([o[c],a[c]-o[c]-l[c]]);return{x:()=>eh(e,u)}}},Ib={kernelName:Jn,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{dim:r}=n,i=!0,a=Ua(e,s);return{logits:()=>co(a,Ua(mc(a,[r],i),s))}}},Cb={kernelName:Hn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,vh(n))}}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Sb(e,t,n){const s=ci(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));x(s.rank>=1+t.length,(()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`)),x(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),x(s.shape[0]%r===0,(()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`));const i={x:s},a={blockShape:t,crops:n};return ei.runKernel(Ae,i,a)}const $b=pi({batchToSpaceND_:Sb}),Nb={kernelName:qn,gradFunc:(e,t,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>$b(e,s,r)}}},Tb={kernelName:Xn,gradFunc:(e,t,n)=>{const{axis:s}=n;return{x:()=>fu(e,s)}}},Eb={kernelName:jn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ba(e,Ua(Ga(ka(n,"float32")),2))}}},Rb={kernelName:ss,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(e,Ua(ka(n,"float32"),2))}}},Ab={kernelName:ns,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Ya(2),i=()=>Ua(e,Ua(r,co(n,s))),a=()=>Ua(e,Ua(r,co(s,n)));return{a:i,b:a}}},_b={kernelName:vs,gradFunc:e=>({x:()=>qa(e)})},Fb={kernelName:us,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=bo(n.shape,s.shape),i=()=>{let t=e;const s=mo(n.shape,r);return s.length>0&&(t=mc(t,s)),Xl(t,n.shape)},a=()=>{let t=e;const n=mo(s.shape,r);return n.length>0&&(t=mc(t,n)),Xl(Gc(t),s.shape)};return{a:i,b:a}}},Db={kernelName:Kn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,r=s.shape.slice(),{axis:i}=n,a=T(i,s.shape);a.forEach((e=>{r[e]=1}));const o=Xl(e,r),l=Ua(o,Jc(s.shape,"float32"));return{x:()=>l}}},Ob={kernelName:cs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ba(e,ja(bb(n)))}}},Lb={kernelName:hs,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Ua(co(Ya(1),ja(n)),e)}}},Mb={kernelName:ds,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{reps:r}=n,i=()=>{let t=qa(s);if(1===s.rank)for(let n=0;n<r[0];++n)t=La(t,kh(e,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<r[0];++n)for(let i=0;i<r[1];++i)t=La(t,kh(e,[n*s.shape[0],i*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<r[0];++n)for(let i=0;i<r[1];++i)for(let a=0;a<r[2];++a)t=La(t,kh(e,[n*s.shape[0],i*s.shape[1],a*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let i=0;i<r[1];++i)for(let a=0;a<r[2];++a)for(let o=0;o<r[3];++o)t=La(t,kh(e,[n*s.shape[0],i*s.shape[1],a*s.shape[2],o*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return t};return{x:i}}},zb={kernelName:gs,gradFunc:(e,t,n)=>{const s=n,{perm:r}=s,i=Pc(r);return{x:()=>nd(e,i)}}},Pb={kernelName:bs,gradFunc:(e,t,n)=>{const s=n,{axis:r}=s;return{value:()=>Bh(e,r)}}},Bb={kernelName:xs,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t,s=()=>Wb(e,n);return{x:s}}};function Wb(e,t){const n=yo(t,qa(t)),s=nc(e,n);let r=ac(t,Ya(0,"int32"));const i=s.rank-r.rank;for(let o=0;o<i;++o)r=qu(r,o+1);r=vc(r,Jc(s.shape,"bool"));const a=qa(s);return Jh(r,s,a)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Ub={kernelName:ys,gradFunc:e=>({x:()=>qa(e)})},Vb=[cg,hg,dg,pg,fg,gg,mg,bg,xg,yg,vg,wg,Cg,Ng,Tg,Ag,_g,Fg,Dg,Og,Lg,Mg,Pg,zg,Ug,Hg,qg,Yg,Zg,Qg,eb,em,tm,nm,sm,rm,am,im,um,dm,gm,mm,bm,xm,ym,vm,wm,km,Im,$m,Tm,Tm,Em,_m,Om,Lm,Mm,zm,Pm,Bm,Wm,Um,Vm,Gm,Hm,jm,jm,Km,qm,Qm,tb,nb,sb,rb,ib,ab,ob,lb,ub,db,pb,fb,gb,xb,wb,kb,Ib,Cb,Nb,Nb,Tb,Tb,Eb,Ab,Rb,_b,Fb,Db,Ob,Lb,Mb,zb,Pb,Bb,Ub];for(const aJ of Vb)Ds(aJ);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Gb(e){const t=ci(e,"x","acos"),n={x:t};return ei.runKernel(pe,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.abs=function(){return this.throwIfDisposed(),fo(this)};const Hb=pi({acos_:Gb});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jb(e){const t=ci(e,"x","acosh"),n={x:t};return ei.runKernel(fe,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.acos=function(){return this.throwIfDisposed(),Hb(this)};const Kb=pi({acosh_:jb});
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qb(e,t=0){const n=ci(e,"x","argMin"),s={x:n},r={axis:t};return ei.runKernel(ve,s,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.acosh=function(){return this.throwIfDisposed(),Kb(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.add=function(e){return this.throwIfDisposed(),La(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.all=function(e,t){return this.throwIfDisposed(),Cl(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.any=function(e,t){return this.throwIfDisposed(),$l(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.argMax=function(e){return this.throwIfDisposed(),Tl(this,e)};const Xb=pi({argMin_:qb});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jb(e){const t=ci(e,"x","asin"),n={x:t};return ei.runKernel(we,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.argMin=function(e){return this.throwIfDisposed(),Xb(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.asScalar=function(){return this.throwIfDisposed(),x(1===this.size,(()=>"The array must have only 1 element.")),Xl(this,[])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.asType=function(e){return this.throwIfDisposed(),ka(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.as1D=function(){return this.throwIfDisposed(),Xl(this,[this.size])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.as2D=function(e,t){return this.throwIfDisposed(),Xl(this,[e,t])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Xl(this,[e,t,n])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.as4D=function(e,t,n,s){return this.throwIfDisposed(),Xl(this,[e,t,n,s])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.as5D=function(e,t,n,s,r){return this.throwIfDisposed(),Xl(this,[e,t,n,s,r])};const Yb=pi({asin_:Jb});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zb(e){const t=ci(e,"x","asinh"),n={x:t};return ei.runKernel(ke,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.asin=function(){return this.throwIfDisposed(),Yb(this)};const Qb=pi({asinh_:Zb});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ex(e){const t=ci(e,"x","atan"),n={x:t};return ei.runKernel(Ie,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.asinh=function(){return this.throwIfDisposed(),Qb(this)};const tx=pi({atan_:ex});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nx(e,t){let n=ci(e,"a","atan2"),s=ci(t,"b","atan2");[n,s]=Gr(n,s);const r={a:n,b:s};return ei.runKernel(Se,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.atan=function(){return this.throwIfDisposed(),tx(this)};const sx=pi({atan2_:nx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rx(e){const t=ci(e,"x","atanh"),n={x:t};return ei.runKernel(Ce,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.atan2=function(e){return this.throwIfDisposed(),sx(this,e)};const ix=pi({atanh_:rx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ax(e){const t=ci(e,"x","ceil","float32"),n={x:t};return ei.runKernel(Me,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.atanh=function(){return this.throwIfDisposed(),ix(this)},_r().prototype.avgPool=function(e,t,n,s){return this.throwIfDisposed(),Yl(this,e,t,n,s)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),$b(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.batchNorm=function(e,t,n,s,r){return this.throwIfDisposed(),nu(this,e,t,n,s,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.broadcastTo=function(e){return this.throwIfDisposed(),cu(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.cast=function(e){return this.throwIfDisposed(),ka(this,e)};const ox=pi({ceil_:ax});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lx(e,t,n="NHWC"){const s=ci(e,"x","depthToSpace","float32"),r="NHWC"===n?s.shape[1]:s.shape[2],i="NHWC"===n?s.shape[2]:s.shape[3],a="NHWC"===n?s.shape[3]:s.shape[1];x(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),x(r*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t}  for depthToSpace with input shape\n    ${s.shape}`)),x(i*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${i} and ${t} for depthToSpace with input shape\n        ${s.shape}`)),x(a%(t*t)===0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${a} for depthToSpace with input shape ${s.shape}`));const o={x:s},l={blockSize:t,dataFormat:n};return ei.runKernel(et,o,l)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.ceil=function(){return this.throwIfDisposed(),ox(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),du(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Ar&&(e=[e]),fu([this,...e],t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.conv1d=function(e,t,n,s,r,i){return this.throwIfDisposed(),$u(this,e,t,n,s,r,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.conv2dTranspose=function(e,t,n,s,r){return this.throwIfDisposed(),Ru(this,e,t,n,s,r)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.conv2d=function(e,t,n,s,r,i){return this.throwIfDisposed(),Cu(this,e,t,n,s,r,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.cos=function(){return this.throwIfDisposed(),bb(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.cosh=function(){return this.throwIfDisposed(),vb(this)},
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Jm(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Jg(this,e,t,n)};const ux=pi({depthToSpace_:lx});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cx(e,t,n,s,r=[1,1],i="NHWC"){const a=ci(e,"x","dilation2d"),o=ci(t,"filter","dilation2d");x(3===a.rank||4===a.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`)),x(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),x("NHWC"===i,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${i}`));let l=a,u=!1;3===a.rank&&(l=Xl(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0),x(l.shape[3]===o.shape[2],(()=>`Error in dilation2d:  input and filter must have the same depth: ${l.shape[3]} vs ${o.shape[2]}`));const c={x:l,filter:o},h={strides:n,pad:s,dilations:r},d=ei.runKernel(it,c,h);return u?Xl(d,[d.shape[1],d.shape[2],d.shape[3]]):d}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),ux(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.depthwiseConv2d=function(e,t,n,s,r,i){return this.throwIfDisposed(),Bu(this,e,t,n,s,r,i)};const hx=pi({dilation2d_:cx});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dx(e,t){let n=ci(e,"a","div"),s=ci(t,"b","div");[n,s]=Gr(n,s);const r=Ba(n,s),i=qa(r),a=Gu(s,i);return Jh(a,i,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.dilation2d=function(e,t,n,s,r){return this.throwIfDisposed(),hx(this,e,t,n,s,r)};const px=pi({divNoNan_:dx});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fx(e,t){const n=ci(e,"t1","dot"),s=ci(t,"t2","dot");x((1===n.rank||2===n.rank)&&(1===s.rank||2===s.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`));const r=1===n.rank?n.size:n.shape[1],i=1===s.rank?s.size:s.shape[0];if(x(r===i,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${i}.`)),1===n.rank&&1===s.rank){const e=Xl(n,[1,-1]),t=Xl(s,[-1,1]),r=kc(e,t);return Xl(r,[])}if(1===n.rank&&2===s.rank){const e=Xl(n,[1,-1]),t=Xl(s,[s.shape[0],s.shape[1]]),r=kc(e,t);return Xl(r,[r.size])}if(2===n.rank&&1===s.rank){const e=Xl(s,[-1,1]),t=kc(n,e);return Xl(t,[t.size])}{const e=Xl(s,[s.shape[0],s.shape[1]]),t=kc(n,e);return t}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.divNoNan=function(e){return this.throwIfDisposed(),px(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.div=function(e){return this.throwIfDisposed(),Ba(this,e)};const gx=pi({dot_:fx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mx(e){let t=ci(e,"x","erf");x("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=ka(t,"float32"));const n={x:t};return ei.runKernel(pt,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.dot=function(e){return this.throwIfDisposed(),gx(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.elu=function(){return this.throwIfDisposed(),Uu(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.equal=function(e){return this.throwIfDisposed(),Gu(this,e)};const bx=pi({erf_:mx});
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xx(e,t=null,n=!1){return Lp(e,"euclidean",t,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.erf=function(){return this.throwIfDisposed(),bx(this)};const yx=pi({euclideanNorm_:xx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vx(e){const t=ci(e,"x","expm1"),n={x:t};return ei.runKernel(bt,n)}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),yx(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.exp=function(){return this.throwIfDisposed(),ju(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.expandDims=function(e){return this.throwIfDisposed(),qu(this,e)};const wx=pi({expm1_:vx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kx(e){const t=ci(e,"x","isFinite"),n={x:t};return ei.runKernel(At,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.expm1=function(){return this.throwIfDisposed(),wx(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.fft=function(){return this.throwIfDisposed(),od(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.flatten=function(){return this.throwIfDisposed(),Xl(this,[this.size])},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.floor=function(){return this.throwIfDisposed(),ec(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.floorDiv=function(e){return this.throwIfDisposed(),za(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.gather=function(e,t,n){return this.throwIfDisposed(),nc(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.greaterEqual=function(e){return this.throwIfDisposed(),ac(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.greater=function(e){return this.throwIfDisposed(),rc(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.ifft=function(){return this.throwIfDisposed(),hd(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.irfft=function(){return this.throwIfDisposed(),pd(this)};const Ix=pi({isFinite_:kx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Cx(e){const t=ci(e,"x","isInf"),n={x:t};return ei.runKernel(_t,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.isFinite=function(){return this.throwIfDisposed(),Ix(this)};const Sx=pi({isInf_:Cx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $x(e){const t=ci(e,"x","isNaN"),n={x:t};return ei.runKernel(Ft,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.isInf=function(){return this.throwIfDisposed(),Sx(this)};const Nx=pi({isNaN_:$x});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Tx(e,t=5,n=1,s=1,r=.5){const i=ci(e,"x","localResponseNormalization");x(4===i.rank||3===i.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${i.rank}.`)),x(I(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let a=i,o=!1;3===i.rank&&(o=!0,a=Xl(i,[1,i.shape[0],i.shape[1],i.shape[2]]));const l={x:a},u={depthRadius:t,bias:n,alpha:s,beta:r},c=ei.runKernel(Gt,l,u);return o?Xl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.isNaN=function(){return this.throwIfDisposed(),Nx(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.leakyRelu=function(e){return this.throwIfDisposed(),lc(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.lessEqual=function(e){return this.throwIfDisposed(),kp(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.less=function(e){return this.throwIfDisposed(),Ap(this,e)};const Ex=pi({localResponseNormalization_:Tx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Rx(e){const t=ci(e,"x","logSigmoid"),n=Ja((e=>{const t=Gc(Dh(Gc(e))),n=t=>{const n=Ua(t,vh(Gc(e)));return n};return{value:t,gradFunc:n}}));return n(t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.localResponseNormalization=function(e,t,n,s){return this.throwIfDisposed(),Ex(this,e,t,n,s)};const Ax=pi({logSigmoid_:Rx});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _x(e,t){const n=ci(e,"a","logicalOr","bool"),s=ci(t,"b","logicalOr","bool");bo(n.shape,s.shape);const r={a:n,b:s};return ei.runKernel(Ut,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.logSigmoid=function(){return this.throwIfDisposed(),Ax(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.logSoftmax=function(e){return this.throwIfDisposed(),xc(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),jp(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.log=function(){return this.throwIfDisposed(),cc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.log1p=function(){return this.throwIfDisposed(),dc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.logicalAnd=function(e){return this.throwIfDisposed(),vc(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.logicalNot=function(){return this.throwIfDisposed(),hb(this)};const Fx=pi({logicalOr_:_x});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Dx(e,t){const n=ci(e,"a","logicalXor","bool"),s=ci(t,"b","logicalXor","bool");return bo(n.shape,s.shape),vc(Fx(e,t),hb(vc(e,t)))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.logicalOr=function(e){return this.throwIfDisposed(),Fx(this,e)};const Ox=pi({logicalXor_:Dx});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Lx(e,t,n){x("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const s=ci(e,"x","mirrorPad");if(0===s.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");x(t.length===s.rank,(()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`));const r="reflect"===n?1:0;for(let o=0;o<s.rank;o++)x(2===t[o].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),x(t[o][0]>=0&&t[o][0]<=s.shape[o]-r&&t[o][1]>=0&&t[o][1]<=s.shape[o]-r,(()=>`Padding in dimension ${o} cannot be greater than or equal to ${s.shape[o]-r} or less than 0 for input of shape ${s.shape}`));const i={paddings:t,mode:n},a={x:s};return ei.runKernel(nn,a,i)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.logicalXor=function(e){return this.throwIfDisposed(),Ox(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),kc(this,e,t,n)},_r().prototype.maxPool=function(e,t,n,s){return this.throwIfDisposed(),Cc(this,e,t,n,s)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.max=function(e,t){return this.throwIfDisposed(),fc(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.maximum=function(e){return this.throwIfDisposed(),yo(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.mean=function(e,t){return this.throwIfDisposed(),Tc(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.min=function(e,t){return this.throwIfDisposed(),Rc(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.minimum=function(e){return this.throwIfDisposed(),_c(this,e)};const Mx=pi({mirrorPad_:Lx});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zx(e,t){let n=ci(e,"a","mod"),s=ci(t,"b","mod");[n,s]=Gr(n,s);const r={a:n,b:s};return ei.runKernel(sn,r)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Mx(this,e,t)};const Px=pi({mod_:zx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Bx(e,t,n,s,r,i,a){null==r&&(r=[1,1]),null==i&&(i=1),0===s&&(s="valid");const o=ci(e,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=Xl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),x(Gl(i,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${i} and dilations '${r}'`));const c=Rl(l.shape,t,i,r,s),h=[c.dilationHeight,c.dilationWidth];let d;d="same"===s?Ux([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const p=1===h[0]&&1===h[1],[f,g]=Wx([c.inHeight,c.inWidth],h,d),m=p?s:"valid",b=p?l:Rg(l,h,f),y="avg"===n?()=>Yl(b,t,i,m,a):()=>Cc(b,t,i,m,a),v=y(),w=p?v:$b(v,h,g);return u?Xl(w,[w.shape[1],w.shape[2],w.shape[3]]):w}function Wx(e,t,n){const s=n.map((e=>e[0])),r=n.map((e=>e[1])),i=e.concat(s,r),a=t.map(((e,t)=>(e-i[t]%e)%e)),o=r.map(((e,t)=>e+a[t])),l=t.map(((e,t)=>[s[t],o[t]])),u=t.map(((e,t)=>[0,a[t]]));return[l,u]}function Ux(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))),s=n.map((e=>e-1)),r=s.map((e=>Math.floor(e/2))),i=s.map(((e,t)=>e-r[t]));return s.map(((e,t)=>[r[t],i[t]]))}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.mod=function(e){return this.throwIfDisposed(),Px(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.mul=function(e){return this.throwIfDisposed(),Ua(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.neg=function(){return this.throwIfDisposed(),Gc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Lp(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.notEqual=function(e){return this.throwIfDisposed(),jc(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),qc(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.onesLike=function(){return this.throwIfDisposed(),Zc(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.pad=function(e,t){return this.throwIfDisposed(),eh(this,e,t)};const Vx=pi({pool_:Bx});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Gx(e,t=null,n=!1){let s=ci(e,"x","prod");"bool"===s.dtype&&(s=ka(s,"int32"));const r={x:s},i={axis:t,keepDims:n};return ei.runKernel(xn,r,i)}_r().prototype.pool=function(e,t,n,s,r,i){return this.throwIfDisposed(),Vx(this,e,t,n,s,r,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.pow=function(e){return this.throwIfDisposed(),lo(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.prelu=function(e){return this.throwIfDisposed(),nh(this,e)};const Hx=pi({prod_:Gx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jx(e){const t=ci(e,"x","reciprocal"),n={x:t};return ei.runKernel(Cn,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.prod=function(e,t){return this.throwIfDisposed(),Hx(this,e,t)};const Kx=pi({reciprocal_:jx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qx(e){const t=ci(e,"x","sign"),n={x:t};return ei.runKernel(Vn,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.reciprocal=function(){return this.throwIfDisposed(),Kx(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.relu=function(){return this.throwIfDisposed(),dh(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.relu6=function(){return this.throwIfDisposed(),bd(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Xl(this,e.shape)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.reshape=function(e){return this.throwIfDisposed(),Xl(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),mp(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),xp(this,e,t,n)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.reverse=function(e){return this.throwIfDisposed(),fh(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.rfft=function(){return this.throwIfDisposed(),ud(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.round=function(){return this.throwIfDisposed(),Cp(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.rsqrt=function(){return this.throwIfDisposed(),lm(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.selu=function(){return this.throwIfDisposed(),mh(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.separableConv2d=function(e,t,n,s,r,i){return this.throwIfDisposed(),xh(this,e,t,n,s,r,i)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.sigmoid=function(){return this.throwIfDisposed(),vh(this)};const Xx=pi({sign_:qx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jx(e,t,n,s,r=0,i=0,a=0,o=0,l=0){const u=ci(e,"x","stridedSlice","string_or_numeric"),c={x:u},h={begin:t,end:n,strides:s,beginMask:r,endMask:i,ellipsisMask:a,newAxisMask:o,shrinkAxisMask:l};return ei.runKernel(is,c,h)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.sign=function(){return this.throwIfDisposed(),Xx(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.sin=function(){return this.throwIfDisposed(),Gg(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.sinh=function(){return this.throwIfDisposed(),Kg(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.slice=function(e,t){return this.throwIfDisposed(),kh(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.softmax=function(e){return this.throwIfDisposed(),_h(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.softplus=function(){return this.throwIfDisposed(),Dh(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Rg(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.split=function(e,t){return this.throwIfDisposed(),Lh(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.sqrt=function(){return this.throwIfDisposed(),Ga(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.square=function(){return this.throwIfDisposed(),ja(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Gp(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.squeeze=function(e){return this.throwIfDisposed(),zh(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Ar?[this,e]:[this,...e];return Bh(n,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.step=function(e){return this.throwIfDisposed(),yd(this,e)};const Yx=pi({stridedSlice_:Jx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zx(e){const t=ci(e,"x","tan","float32"),n={x:t};return ei.runKernel(cs,n)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.stridedSlice=function(e,t,n,s,r,i,a,o){return this.throwIfDisposed(),Yx(this,e,t,n,s,r,i,a,o)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.sub=function(e){return this.throwIfDisposed(),co(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.sum=function(e,t){return this.throwIfDisposed(),mc(this,e,t)};const Qx=pi({tan_:Zx});
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ey(e,t=1,n=!0){const s=ci(e,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const i={x:s},a={k:t,sorted:n},[o,l]=ei.runKernel(ps,i,a);return{values:o,indices:l}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.tan=function(){return this.throwIfDisposed(),Qx(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.tanh=function(){return this.throwIfDisposed(),Uh(this)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.tile=function(e){return this.throwIfDisposed(),Ju(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.toBool=function(){return this.throwIfDisposed(),ka(this,"bool")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.toFloat=function(){return this.throwIfDisposed(),ka(this,"float32")},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.toInt=function(){return this.throwIfDisposed(),ka(this,"int32")};const ty=pi({topk_:ey});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ny(e,t=0){const n=ci(e,"x","unique","string_or_numeric");x(n.rank>0,(()=>"The input tensor must be at least 1D"));const s={x:n},r={axis:t},[i,a]=ei.runKernel(ms,s,r);return{values:i,indices:a}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.topk=function(e,t){return this.throwIfDisposed(),ty(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.transpose=function(e){return this.throwIfDisposed(),nd(this,e)};const sy=pi({unique_:ny});
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.unique=function(e){return this.throwIfDisposed(),sy(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),hm(this,e,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.unstack=function(e){return this.throwIfDisposed(),Kh(this,e)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.where=function(e,t){return this.throwIfDisposed(),Jh(e,this,t)},
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
_r().prototype.zerosLike=function(){return this.throwIfDisposed(),qa(this)};
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class ry extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ry.prototype)}}class iy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,iy.prototype)}}class ay extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ay.prototype)}}class oy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,oy.prototype)}}class ly extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ly.prototype)}}
/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class uy{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function cy(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function hy(e,t){if(!e)throw new ly(t)}function dy(e,t){let n=0;for(const s of e)s===t&&n++;return n}function py(e){return 1===e.length?e[0]:e}function fy(e){return Array.isArray(e)?e:[e]}function gy(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2"),n=t.replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==n[0]?n:"private"+n}function my(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let by={};function xy(e){if(null===e||void 0===e)return null;const t={};return t["className"]=e.getClassName(),t["config"]=e.getConfig(),t}function yy(e){if(null!=e&&"object"===typeof e)if(Array.isArray(e))e.forEach((e=>yy(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"===typeof t&&(Array.isArray(t)||"ndarray"!==t["type"]||"number"!==typeof t["value"]?yy(t):e[n]=t["value"])}}}function vy(e,t={},n={},s="object",r=!1){if("string"===typeof e){const r=e;let i;if(r in n)i=n[r];else if(r in by)i=by[r];else if(i=t[r],null==i)throw new ay(`Unknown ${s}: ${e}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}{const i=e;if(null==i["className"]||null==i["config"])throw new ay(`${s}: Improper config format: ${JSON.stringify(i)}.\n'className' and 'config' must set.`);const a=i["className"];let o,l;if(a in n?[o,l]=n[a]:a in by?[o,l]=by["className"]:a in t&&([o,l]=t[a]),null==o)throw new ay(`Unknown ${s}: ${a}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const n of Object.keys(by))e[n]=by[n];for(const r of Object.keys(n))e[r]=n[r];const t=i["config"];t["customObjects"]=e;const s=Object.assign({},by);for(const r of Object.keys(n))by[r]=n[r];yy(i["config"]);const a=l(o,i["config"],n,r);return by=Object.assign({},s),a}{const e=Object.assign({},by);for(const s of Object.keys(n))by[s]=n[s];const t=new o(i["config"]);return by=Object.assign({},e),t}}}function wy(e,t){return e<t?-1:e>t?1:0}function ky(e,t){return-1*wy(e,t)}function Iy(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Cy(e){if(null==e)throw new ay(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Sy(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new ay(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function $y(e,t,n=0,s=1/0){return hy(n>=0),hy(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every((e=>typeof e===t))}function Ny(e,t){Array.isArray(e)?(x(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Ny(e,`element ${n+1} of ${t}`)))):x(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Ty(e)}.`))}function Ty(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Ty(e))).join(",")+"]":"string"===typeof e?`"${e}"`:`${e}`}function Ey(e,t,n){let s,r=null!=n?n():ir();const i=(...i)=>{const a=null!=n?n():ir();return a-r<t||(r=a,s=e(...i)),s};return i}function Ry(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
let Ay=0;function _y(){return Ay++}const Fy={};function Dy(e=""){return e in Fy||(Fy[e]=0),Fy[e]+=1,e+Fy[e].toString()}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const Oy=["channelsFirst","channelsLast"],Ly=["nearest","bilinear"],My=["valid","same","causal"],zy=["max","avg"],Py=["sum","mul","concat","ave"],By=new Map;function Wy(e){Sy(Oy,"DataFormat",e)}function Uy(e){Sy(Ly,"InterpolationFormat",e)}function Vy(e){Sy(My,"PaddingMode",e)}function Gy(e){Sy(zy,"PoolMode",e)}const Hy=[],jy="/";function Ky(e,t){Hy.push(e);try{const e=t();return Hy.pop(),e}catch(n){throw Hy.pop(),n}}function qy(){return 0===Hy.length?"":Hy.join(jy)+jy}function Xy(e){if(!Zy(e))throw new Error("Not a valid tensor name: '"+e+"'");return qy()+e}function Jy(e){if(!Zy(e))throw new Error("Not a valid tensor name: '"+e+"'");By.has(e)||By.set(e,0);const t=By.get(e);if(By.set(e,By.get(e)+1),t>0){const n=`${e}_${t}`;return By.set(n,1),n}return e}const Yy=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Zy(e){return!!e.match(Yy)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Qy(e){return e===parseInt(e.toString(),10)}function ev(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function tv(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s<t&&(t=s)}return t}function nv(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s>t&&(t=s)}return t}function sv(e,t){if(t<e)throw new ay(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let s=e;s<t;++s)n.push(s);return n}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
let rv;function iv(){return null==rv&&(rv=Da().epsilon()),rv}function av(){return"channelsLast"}function ov(e,t){return ka(e,t)}function lv(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),Xl(e,n)}function uv(e,t){return Ra((()=>{if(2!==e.shape.length)throw new ay(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);const n=lv(e,1);return bv(n,[1,t,1])}))}function cv(e){const t=[ev(e.shape)];return Xl(e,t)}function hv(e){if(e.rank<=1)throw new ay(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],ev(e.shape,1)];return Xl(e,t)}function dv(e,t,n){return Ra((()=>{switch(e.rank){case 1:return Ch(e,t,n);case 2:return $h(e,[t,0],[n,e.shape[1]]);case 3:return Th(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Rh(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return kh(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return kh(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new ay(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function pv(e,t,n){return Ra((()=>{switch(e.rank){case 1:return Ch(e,t,n);case 2:return $h(e,[0,t],[e.shape[0],n]);case 3:return Th(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Rh(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new ay(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function fv(e,t,n,s){return Ra((()=>{switch(e.rank){case 1:return Ch(e,t,n);case 2:switch(s){case 1:return dv(e,t,n);case 2:return pv(e,t,n);default:throw new ay(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return dv(e,t,n);case 2:return Th(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return pv(e,t,n);default:throw new ay(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return dv(e,t,n);case 2:return Rh(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Rh(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return pv(e,t,n);default:throw new ay(`The axis is not within the rank of the tensor ${s}`)}default:throw new ay(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function gv(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),fu(e,t)}function mv(e,t){switch(e.rank){case 1:return mu([e,t]);case 2:return xu([e,t],0);case 3:return vu([e,t],0);case 4:return ku([e,t],0);default:throw new ay(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function bv(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new ay(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Ju(e,t)}function xv(e,t=0,n=1,s,r){return oh(e,t,n,s,r)}function yv(e,t,n,s){if(e.rank<2||t.rank<2)throw new oy(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){const n=e.shape.slice(-1)[0],s=t.shape.slice(-2)[0];if(n!==s)throw new oy(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){const r=!1,i=!1;return Ad({a:e,b:t,transposeA:r,transposeB:i,bias:s?kv(e.rank,s,av()):null,activation:n})}{const r=e.shape.slice(),i=r.pop();e=Xl(e,[-1,i]);const a=t.shape.slice(),o=a.pop(),l=a.pop(),u=[...a,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=Xl(nd(t,c),[l,-1]);const h=[...r,...u],d=!1,p=!1;return Xl(Ad({a:e,b:t,transposeA:d,transposeB:p,bias:s?kv(e.rank,s,av()):null,activation:n}),h)}}function vv(e,t,n){return Ra((()=>(t=Array.isArray(t)?Vh(t,"int32"):ka(t,"int32"),nc(e,t,n))))}function wv(e){return Ua(e,e)}function kv(e,t,n){const s=t.shape;if(1!==t.rank&&t.rank!==e)throw new ay(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===s.length?Xl(t,[1,s[0],1,1,1]):Xl(t,[1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?Xl(t,[1,1,1,1,s[0]]):Xl(t,[1].concat(s))}else if(4===e){if("channelsFirst"===n)return 1===s.length?Xl(t,[1,s[0],1,1]):Xl(t,[1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?Xl(t,[1,1,1,s[0]]):Xl(t,[1].concat(s))}else if(3===e){if("channelsFirst"===n)return 1===s.length?Xl(t,[1,s[0],1]):Xl(t,[1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?Xl(t,[1,1,s[0]]):Xl(t,[1].concat(s))}else if(e<3)return t;throw new ay(`Unsupported input rank by biasAdd: ${t.rank}`)}function Iv(e,t,n){return Ra((()=>(null==n&&(n=av()),Wy(n),La(e,kv(e.rank,t,n)))))}function Cv(e,t=1){if(1!==t)throw new oy(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Uu(e)}function Sv(e){return Ra((()=>Ba(e,La(fo(e),1))))}function $v(e,t,n,s){return Ra((()=>id(e,t,n,s)))}function Nv(e){return Ra((()=>{const t=La(.5,Ua(.2,e));return du(t,0,1)}))}function Tv(e,t,n=!1){return n?e():t()}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const Ev=["fanIn","fanOut","fanAvg"],Rv=["normal","uniform","truncatedNormal"];
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Av(e){Sy(Ev,"FanMode",e)}function _v(e){Sy(Rv,"Distribution",e)}class Fv extends eo{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Dv extends Fv{apply(e,t){return Xc(e,t)}}Dv.className="Zeros",no(Dv);class Ov extends Fv{apply(e,t){return Jc(e,t)}}Ov.className="Ones",no(Ov);class Lv extends Fv{constructor(e){if(super(),"object"!==typeof e)throw new ay(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new ay(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Ra((()=>Ua(Ya(this.value),Jc(e,t))))}getConfig(){return{value:this.value}}}Lv.className="Constant",no(Lv);class Mv extends Fv{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return uh(e,this.minval,this.maxval,t,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Mv.className="RandomUniform",no(Mv);class zv extends Fv{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32","float32"!==t&&"int32"!==t)throw new oy(`randomNormal does not support dType ${t}.`);return xv(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}zv.className="RandomNormal",no(zv);class Pv extends Fv{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32","float32"!==t&&"int32"!==t)throw new oy(`truncatedNormal does not support dType ${t}.`);return Hh(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Pv.className="TruncatedNormal",no(Pv);class Bv extends Fv{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Ra((()=>{if(2!==e.length||e[0]!==e[1])throw new ay("Identity matrix initializer can only be used for 2D square matrices.");return Ua(this.gain,Zu(e[0]))}))}getConfig(){return{gain:this.gain}}}function Wv(e,t="channelsLast"){let n,s;if(Wy(t),2===e.length)n=e[0],s=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=ev(e,2);n=e[1]*t,s=e[0]*t}else if("channelsLast"===t){const t=ev(e,0,e.length-2);n=e[e.length-2]*t,s=e[e.length-1]*t}}else{const t=ev(e);n=Math.sqrt(t),s=Math.sqrt(t)}return[n,s]}Bv.className="Identity",no(Bv);class Uv extends Fv{constructor(e){if(super(),e.scale<0)throw new ay(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,Av(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,_v(this.distribution),this.seed=e.seed}apply(e,t){const n=Wv(e),s=n[0],r=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,s):"fanOut"===this.mode?i/=Math.max(1,r):i/=Math.max(1,(s+r)/2),"normal"===this.distribution){const n=Math.sqrt(i);if(t=t||"float32","float32"!==t&&"int32"!==t)throw new oy(`${this.getClassName()} does not support dType ${t}.`);return Hh(e,0,n,t,this.seed)}{const n=Math.sqrt(3*i);return uh(e,-n,n,t,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Uv.className="VarianceScaling",no(Uv);class Vv extends Uv{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Uv.className}}Vv.className="GlorotUniform",no(Vv);class Gv extends Uv{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Uv.className}}Gv.className="GlorotNormal",no(Gv);class Hv extends Uv{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Uv.className}}Hv.className="HeNormal",no(Hv);class jv extends Uv{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Uv.className}}jv.className="HeUniform",no(jv);class Kv extends Uv{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Uv.className}}Kv.className="LeCunNormal",no(Kv);class qv extends Uv{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Uv.className}}qv.className="LeCunUniform",no(qv);class Xv extends Fv{constructor(e){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed}apply(e,t){return Ra((()=>{if(e.length<2)throw new oy("Shape must be at least 2D.");if("int32"!==t&&"float32"!==t&&void 0!==t)throw new TypeError(`Unsupported data type ${t}.`);const n=w(e.slice(0,-1)),s=e[e.length-1],r=n*s;r>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${r}) elements: Slowness may result.`);const i=[Math.max(s,n),Math.min(s,n)],a=xv(i,0,1,t,this.seed),o=qp.qr(a,!1);let l=o[0];const u=o[1],c=u.flatten().stridedSlice([0],[Math.min(s,n)*Math.min(s,n)],[Math.min(s,n)+1]);return l=Ua(l,c.sign()),n<s&&(l=l.transpose()),Ua(Ya(this.gain),l.reshape(e))}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Xv.className="Orthogonal",no(Xv);const Jv={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Yv(e,t={}){return vy(e,to.getMap().classNameMap,t,"initializer")}function Zv(e){return xy(e)}function Qv(e){if("string"===typeof e){const t=e in Jv?Jv[e]:e;if("GlorotNormal"===t)return new Gv;if("GlorotUniform"===t)return new Vv;if("HeNormal"===t)return new Hv;if("HeUniform"===t)return new jv;if("LeCunNormal"===t)return new Kv;if("LeCunUniform"===t)return new qv;{const e={};return e["className"]=t,e["config"]={},Yv(e)}}return e instanceof Fv?e:Yv(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function ew(e){return Array.isArray(e)&&Array.isArray(e[0])}function tw(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function nw(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new ay(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function sw(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new ay(`Expected exactly 1 Shape; got ${e.length}`)}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function rw(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const iw="Variable";class aw{constructor(e,t="float32",n=iw,s=!0,r=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=_y(),n=null==n?iw:n,this.originalName=Xy(n),this.name=Jy(this.originalName),this.trainable_=s,this.constraint=r,this.val=qh(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),ow(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function ow(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function lw(e){return e.map((e=>e.read()))}function uw(e){e.forEach((e=>{const t=e[0];t.write(e[1])}))}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class cw{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class hw{constructor(e,t,n,s,r,i,a){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=a,this.id=_y(),null!=i&&(this.originalName=Xy(i),this.name=Jy(this.originalName)),this.rank=t.length}}let dw=0;class pw{constructor(e,t){this.callArgs=t,this.id=dw++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const n of e.inboundLayers)null!=n&&n.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let fw=0;class gw extends eo{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=fw++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=gy(e)+"_"+Dy(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new iy(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new ay(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return py(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return py(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new ry(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new ry(`Layer ${this.name} is not connected, no input to return.`);return py(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new ry(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new ry(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return py(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=fy(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=fy(this.inputSpec);if(e.length!==t.length)throw new ay(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const s=e[n],r=t[n];if(null==r)continue;const i=s.rank;if(null!=r.ndim&&i!==r.ndim)throw new ay(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${i}`);if(null!=r.maxNDim&&i>r.maxNDim)throw new ay(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${i}`);if(null!=r.minNDim&&i<r.minNDim)throw new ay(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${i}.`);if(null!=r.dtype&&s.dtype!==r.dtype)throw new ay(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){const e=s.shape;for(const t in r.axes){const s=Number(t),i=r.axes[t],a=s>=0?e[s]:e[e.length+s];if(null!=i&&-1===[i,null].indexOf(a))throw new ay(`Input ${n} is incompatible with layer ${this.name}: expected axis ${s} of input shape to have value ${i} but got shape ${e}.`)}}if(null!=r.shape)for(let e=0;e<r.shape.length;++e){const t=r.shape[e],i=s.shape[e];if(null!=t&&null!=i&&t!==i)throw new ay(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=fy(e);let s=!0;for(const i of n)if(!(i instanceof hw)){s=!1;break}let r=!0;for(const i of n)if(i instanceof hw){r=!1;break}if(s===r)throw new ay("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ky(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of fy(e))t.push(n.shape);this.build(py(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let s=this.call(e,t);const r=fy(s),i=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),i.push(e);if(s=py(i),null!=this.activityRegularizer)throw new oy("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=mw(e),s=this.computeOutputShape(n);let r;const i=bw(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new hw(i,n,this,fy(e),t,this.name,s))):new hw(i,s,this,fy(e),t,this.name),this.addInboundNode(e,r,null,null,n,s,t),this._refCount++,null!=this.activityRegularizer)throw new oy("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=e[s]&&e[s]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new ry(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new ry(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new iy(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return rw(this.weights)}build(e){this.built=!0}getWeights(e=!1){return lw(e?this.trainableWeights:this.weights)}setWeights(e){Ra((()=>{const t=this.weights;if(t.length!==e.length)throw new ay(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],s=lw(t);for(let r=0;r<s.length;++r){const i=s[r],a=t[r],o=e[r];if(!k(i.shape,o.shape))throw new ay(`Layer weight shape ${i.shape} not compatible with provided weight shape ${o.shape}`);n.push([a,o])}uw(n)}))}addWeight(e,t,n,s,r,i,a,o){if(-1!==this._addedWeightNames.indexOf(e))throw new ay(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=null!=o?o():Qv("zeros"));const l=s.apply(t,n),u=new aw(l,n,e,i,a);return l.dispose(),null!=r&&this.addLoss((()=>r.apply(u.read()))),null==i&&(i=!0),i?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=fy(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,s,r,i,a=null){const o=fy(e);t=fy(t),n=fy(n),s=fy(s),r=tw(r),i=tw(i);const l=[],u=[],c=[];for(const h of o)l.push(h.sourceLayer),u.push(h.nodeIndex),c.push(h.tensorIndex);new pw({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:i},a);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e["batchInputShape"]=this.batchInputShape),null!=this.dtype&&(e["dtype"]=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function mw(e){e=fy(e);const t=[];for(const n of e)t.push(n.shape);return py(t)}function bw(e){return"float32"}function xw(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const s=e.inputTensors[n],r=e.inboundLayers[n],i=e.nodeIndices[n],a=xw(s,r,i);for(const e of a)-1===t.indexOf(e)&&t.push(e)}return t}}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class yw extends gw{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Dy("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new ay("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new ay("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new ay("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const s=new hw(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new pw({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new ay(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function vw(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new ay("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;null==n&&(n="float32");const s=new yw({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}),r=s.inboundNodes[0].outputTensors;return r[0]}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function ww(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return ka(t,e.dtype)}catch(iJ){throw new ay(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}yw.className="InputLayer",no(yw);class kw{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof kw)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new ay(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=ww(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof hw){if(null==this.id2Value[e.id])throw new ay(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new ay(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof hw){if(null==this.id2Value[e.id])throw new ay(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new ay(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Aa(this.id2Mask)}}const Iw=new uy,Cw=new uy;function Sw(e){null!=Iw&&Iw.setMaxEntries(e),null!=Cw&&Cw.setMaxEntries(e)}function $w(e,t,n,s){const r=null!=n&&n["training"],i=Array.isArray(e),a=i?e:[e],o=a.map((e=>e.name)),l=[],u=t.names();for(const f of o)-1!==u.indexOf(f)?l.push(t.getValue(f)):l.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().sort().join(",");let h,d=Iw.get(c);if(null==d){const e=Nw(a,t);d=e.sorted,h=e.recipientCounts,Iw.put(c,d),Cw.put(c,h)}h={},r||Object.assign(h,Cw.get(c));const p=new kw(t);for(let f=0;f<d.length;++f){if(null!=s){const e=Ea().numTensors;e>s.maxNumTensors&&(s.maxNumTensors=e),e<s.minNumTensors&&(s.minNumTensors=e)}const e=d[f],i=e.sourceLayer;if(i instanceof yw)continue;const a=[],u=[],c=[];let g=!1;for(const n of e.inputs){const e=p.getValue(n),s=p.getMask(n);a.push(e),u.push(s),null!=s&&(g=!0),r||(h[n.name]--,0!==h[n.name]||t.hasKey(n)||-1!==o.indexOf(n.name)||e.isDisposed||!0===n.sourceLayer.stateful||c.push(e))}g&&(n=n||{},n["mask"]=u[0]);const m=fy(i.apply(a,n));let b=null;i.supportsMasking&&(b=i.computeMask(a,u));const x=Rw(e),y=Array.isArray(x)?x:[x];for(let t=0;t<y.length;++t){p.hasKey(y[t])||p.add(y[t],m[t],Array.isArray(b)?b[0]:b);const e=o.indexOf(y[t].name);-1!==e&&(l[e]=m[t])}r||Aa(c)}return p.disposeMasks(),i?l:l[0]}function Nw(e,t){x(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===e.length){const r=Ew(e[0],t);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const i of e){const{sorted:e,recipientMap:a}=Ew(i,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const t in a)null==s[t]&&(s[t]=new Set),a[t].forEach((e=>s[t].add(e)))}}return{sorted:n,recipientCounts:Tw(s)}}function Tw(e){const t={};for(const n in e)t[n]=e[n].size;return t}function Ew(e,t){const n=new Set,s=[],r={};for(const o of t.names())n.add(o);const i=[],a=[];i.push(e);while(i.length>0){const e=i[i.length-1];if(n.has(e.name)){i.pop();continue}const t=a[a.length-1]===i.length-1;if(0===e.inputs.length||t)i.pop(),s.push(e),n.add(e.name),t&&a.pop();else{a.push(i.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||i.push(t)}}return{sorted:s,recipientMap:r}}function Rw(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const s of e.sourceLayer.inboundNodes[t].outputTensors)if(s.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Aw=ie();
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function _w(e,t){return Ra((()=>Ga(mc(Ua(e,e),t,!0))))}Aw.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),Sw);class Fw extends eo{getConfig(){return{}}}class Dw extends Fw{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Ra((()=>{const t=_w(e,this.axis),n=du(t,0,this.maxValue);return Ua(e,Ba(n,La(iv(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Dw.className="MaxNorm",no(Dw);class Ow extends Fw{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Ra((()=>Ba(e,La(iv(),_w(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Ow.className="UnitNorm",no(Ow);class Lw extends Fw{apply(e){return dh(e)}}Lw.className="NonNeg",no(Lw);class Mw extends Fw{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Ra((()=>{const t=_w(e,this.axis),n=La(Ua(this.rate,du(t,this.minValue,this.maxValue)),Ua(1-this.rate,t));return Ua(e,Ba(n,La(iv(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Mw.className="MinMaxNorm",no(Mw);const zw={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Pw(e){return xy(e)}function Bw(e,t={}){return vy(e,to.getMap().classNameMap,t,"constraint")}function Ww(e){if(null==e)return null;if("string"===typeof e){const t=e in zw?zw[e]:e,n={className:t,config:{}};return Bw(n)}return e instanceof Fw?e:Bw(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
async function Uw(e){if(null==e)return;const t=[],n=[],s=[];for(const r in e){const i=e[r];if("number"!==typeof i){const e=i;t.push(e.data()),n.push(r),s.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];Aa(s)}}function Vw(e){if(null!=e)for(const t in e){const n=e[t];"number"!==typeof n&&n.dispose()}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
var Gw;(function(e){e[e["SILENT"]=0]="SILENT",e[e["VERBOSE"]=1]="VERBOSE"})(Gw||(Gw={}));const Hw=125;class jw{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Kw{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class qw extends jw{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t["size"]?0:t["size"];this.seen+=n;for(const s in t){const e=t[s];if("number"===typeof e)this.totals.hasOwnProperty(s)||(this.totals[s]=0),this.totals[s]=this.totals[s]+e*n;else{let t;s in this.totals?t=this.totals[s]:this.totals[s]=0;const r=Ra((()=>La(this.totals[s],Ua(e,n))));this.totals[s]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const n of this.params["metrics"])null!=this.totals[n]&&("number"===typeof this.totals[n]?t[n]=this.totals[n]/this.seen:Ra((()=>{const e=Ua(Ba(1,this.seen),this.totals[n]);t[n]=e,this.totals[n].dispose(),_a(t[n])})))}}class Xw extends jw{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const n in t)null==this.history[n]&&(this.history[n]=[]),this.history[n].push(t[n])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let i=0;i<s.length;++i)if("number"!==typeof s[i]){const a=s[i];e.push(a.data()),t.push(r),n.push(i)}}const s=await Promise.all(e);for(let r=0;r<s.length;++r){const e=this.history[t[r]][n[r]];e.dispose(),this.history[t[r]][n[r]]=s[r][0]}}}class Jw extends jw{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Zp,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=Hw),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");P(this.yieldEvery)&&(this.maybeWait=Ey(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const s=[];null!=this.yield&&(await Uw(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Uw(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Uw(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Uw(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Uw(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):P(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Uw(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Uw(e),await this.trainEnd(e))}}function Yw(e,t){if(null==e&&(e={}),e instanceof jw)return[e];if(Array.isArray(e)&&e[0]instanceof jw)return e;const n=fy(e);return n.map((e=>new Jw(e,t)))}class Zw{constructor(){}static registerCallbackConstructor(e,t){x(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Zw.checkForDuplicate(t),null==Zw.constructors[e]&&(Zw.constructors[e]=[]),Zw.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Zw.constructors){const n=Zw.constructors[+t];n.forEach((t=>{if(t===e)throw new ay("Duplicate callback constructor.")}))}}static clear(){Zw.constructors={}}static createCallbacks(e){const t=[];for(const n in Zw.constructors){const s=+n;e>=s&&t.push(...Zw.constructors[s])}return t.map((e=>new e))}}function Qw(e,t,n,s,r,i,a,o,l){const u=new Xw,c=[new qw,...Zw.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new Kw(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:i,batchSize:a,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function ek(e,t={},n=!1){return vy(e,to.getMap().classNameMap,t,"layer",n)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function tk(e,t){return Ra((()=>{"float32"!==e.dtype&&(e=ka(e,"float32"));const n=mc(wv(e),t,!0),s=io(n.shape,iv()),r=Ga(yo(n,s));return Ba(e,r)}))}function nk(e,t){return Ra((()=>Tc(wv(co(t,e)),-1)))}function sk(e,t){return Ra((()=>Tc(fo(co(t,e)),-1)))}function rk(e,t){return Ra((()=>{const n=co(e,t),s=du(fo(e),iv(),Number.MAX_VALUE),r=fo(Ba(n,s));return Ua(100,Tc(r,-1))}))}function ik(e,t){return Ra((()=>{const n=du(t,iv(),Number.MAX_VALUE),s=cc(La(1,n)),r=du(e,iv(),Number.MAX_VALUE),i=cc(La(1,r));return Tc(wv(co(s,i)),-1)}))}function ak(e,t){return Ra((()=>{const n=yo(0,co(1,Ua(e,t)));return Tc(wv(n),-1)}))}function ok(e,t){return Ra((()=>{const n=yo(0,co(1,Ua(e,t)));return Tc(n,-1)}))}function lk(e,t){return Ra((()=>{const n=mc(Ua(e,t),-1),s=fc(Ua(co(1,e),t),-1);return yo(0,La(1,co(s,n)))}))}function uk(e,t){return Ra((()=>{const n=Math.log(2),s=co(t,e),r=co(La(s,Dh(Ua(-2,s))),n);return Tc(r,-1)}))}function ck(e,t,n=!1){return Ra((()=>{if(n)t=_h(t);else{const e=mc(t,t.shape.length-1,!0);t=Ba(t,e)}return t=du(t,iv(),1-iv()),Gc(mc(Ua(ka(e,"float32"),cc(t)),t.shape.length-1))}))}function hk(e,t,n=!1){return Ra((()=>{const s=ka(ec(cv(e)),"int32");t=du(t,iv(),1-iv());const r=t.shape,i=Xl(qc(s,r[r.length-1]),r);return ck(i,t,n)}))}function dk(e,t){if(!k(e.shape,t.shape))throw new ay(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Ra((()=>{const n=dh(t),s=Gc(fo(t));return La(co(n,Ua(t,e)),dc(ju(s)))}))}function pk(e,t){return Ra((()=>{let n;return n=du(t,iv(),1-iv()),n=cc(Ba(n,co(1,n))),Tc(dk(e,n),-1)}))}function fk(e,t){return Ra((()=>{const n=du(e,iv(),1),s=du(t,iv(),1);return mc(Ua(e,cc(Ba(n,s))),-1)}))}function gk(e,t){return Ra((()=>{const n=cc(La(iv(),t));return Tc(co(t,Ua(e,n)),-1)}))}function mk(e,t){return Ra((()=>{const n=tk(e,-1),s=tk(t,-1),r=Ua(n,s);return Gc(mc(r,-1))}))}Zw.constructors={};const bk={meanSquaredError:nk,meanAbsoluteError:sk,meanAbsolutePercentageError:rk,meanSquaredLogarithmicError:ik,squaredHinge:ak,hinge:ok,categoricalHinge:lk,logcosh:uk,categoricalCrossentropy:ck,sparseCategoricalCrossentropy:hk,binaryCrossentropy:pk,kullbackLeiblerDivergence:fk,poisson:gk,cosineProximity:mk};function xk(e){if("string"===typeof e){if(e in bk)return bk[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new ay(t)}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function yk(e,t){return Ra((()=>{const n=Ua(.5,Zc(t)),s=ov(rc(t,n),e.dtype);return Tc(Gu(e,s),-1)}))}function vk(e,t){return Ra((()=>ov(Gu(Tl(e,-1),Tl(t,-1)),"float32")))}function wk(e,t){return Ra((()=>ka(mc(vc(Gu(e,1),Gu(t,1))),"float32")))}function kk(e,t){return Ra((()=>ka(mc(vc(Gu(e,0),Gu(t,1))),"float32")))}function Ik(e,t){return Ra((()=>{const n=wk(e,t),s=kk(e,t),r=La(n,s);return ka(Jh(rc(r,0),Ba(n,r),0),"float32")}))}function Ck(e,t){return pk(e,t)}function Sk(e,t){return e.rank===t.rank&&(e=zh(e,[e.rank-1])),t=Tl(t,-1),t.dtype!==e.dtype&&(t=ka(t,e.dtype)),ka(Gu(e,t),"float32")}const $k=nk,Nk=nk,Tk=sk,Ek=sk,Rk=rk,Ak=rk,_k=ck,Fk=mk,Dk=hk,Ok={binaryAccuracy:yk,categoricalAccuracy:vk,precision:Ik,categoricalCrossentropy:_k,sparseCategoricalCrossentropy:Dk,mse:$k,MSE:Nk,mae:Tk,MAE:Ek,mape:Rk,MAPE:Ak,cosine:Fk};function Lk(e){if("string"===typeof e&&e in Ok)return Ok[e];if("string"!==typeof e&&null!=e)return e;throw new ay(`Unknown metric ${e}`)}function Mk(e){if(hy(null!==e,`Unknown LossOrMetricFn ${e}`),"string"===typeof e)return e;{let t;for(const n of Object.keys(bk))if(bk[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Ok))if(Ok[n]===e){t=n;break}return void 0!==t?t:e.name}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function zk(e){const t={Adagrad:()=>Jp.adagrad(.01),Adadelta:()=>Jp.adadelta(1,.95,iv()),Adam:()=>Jp.adam(.001,.9,.999,iv()),Adamax:()=>Jp.adamax(.002,.9,.999,iv(),0),RMSProp:()=>Jp.rmsprop(.001,.9,0,iv()),SGD:()=>Jp.sgd(.01)};if(t["adagrad"]=t["Adagrad"],t["adadelta"]=t["Adadelta"],t["adam"]=t["Adam"],t["adamax"]=t["Adamax"],t["rmsprop"]=t["RMSProp"],t["sgd"]=t["SGD"],e in t)return t[e]();throw new ay(`Unknown Optimizer ${e}`)}
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const Pk=1048576;function Bk(e,t,n=!1){if(null==e||"object"!==typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Wk(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>Pk&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${Pk}.`)}}function Wk(e){if(null===e)return!0;if("object"===typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!==typeof n)return!1;if(!Wk(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Wk(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Uk(e,t,n,s=console.log){const r=Gk(e),i=["Layer (type)","Input Shape","Output shape","Param #"];let a;if(r?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){i.push("Receives inputs"),a=[];for(const t in e.nodesByDepth)a.push(...e.nodesByDepth[t])}s("_".repeat(t)),Hk(i,n,s),s("=".repeat(t));const o=e.layers;for(let c=0;c<o.length;++c)r?jk(o[c],n,s):Kk(o[c],n,a,s),s((c===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=Vk(e),u=rw(e.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(t))}function Vk(e){let t;return t=null!=e.collectedTrainableWeights?rw(e.collectedTrainableWeights):rw(e.trainableWeights),t}function Gk(e){let t=!0;const n=[],s=[];for(const r in e.nodesByDepth)n.push(e.nodesByDepth[r]);for(const r of n){if(r.length>1||1===r.length&&r[0].inboundLayers.length>1){t=!1;break}s.push(...r)}if(t)for(const r of e.layers){let e=!1;for(const n of r.inboundNodes)if(-1!==s.indexOf(n)){if(e){t=!1;break}e=!0}if(!t)break}return t}function Hk(e,t,n=console.log){let s="";for(let r=0;r<e.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=e[r],s=s.slice(0,t[r]),s+=" ".repeat(t[r]-s.length);n(s)}function jk(e,t,n){let s,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(iJ){r="multiple"}try{s=JSON.stringify(e.outputShape)}catch(iJ){s="multiple"}const i=e.name,a=e.getClassName(),o=[`${i} (${a})`,r,s,e.countParams().toString()];Hk(o,t,n)}function Kk(e,t,n,s){let r,i;try{i=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(iJ){i="multiple"}try{r=JSON.stringify(e.outputShape)}catch(iJ){r="multiple"}const a=[];for(const h of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(h)))for(let e=0;e<h.inboundLayers.length;++e){const t=h.inboundLayers[e].name,n=h.nodeIndices[e],s=h.tensorIndices[e];a.push(`${t}[${n}][${s}]`)}const o=e.name,l=e.getClassName(),u=0===a.length?"":a[0],c=[`${o} (${l})`,i,r,e.countParams().toString(),u];Hk(c,t,s);for(let h=1;h<a.length;++h)Hk(["","","","",a[h]],t,s)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function qk(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"===typeof n}function Xk(e,t){if(null===e)return null;if("string"===typeof e)return my(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];qk(t,r,s)?n.push(s):n.push(Xk(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];if("name"===n&&"string"===typeof s)t[n]=s;else{const e=my(n);t[e]=Xk(s,e)}}return t}}function Jk(e,t){if(null===e||void 0===e)return null;if("string"===typeof e)return gy(e);if("number"===typeof e||"boolean"===typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];qk(t,r,s)?n.push(s):n.push(Jk(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n],r=gy(n);t[r]="name"!==n&&"className"!==n||"string"!==typeof s?Jk(s,n):s}return t}}
/** @license See the LICENSE file. */
const Yk="4.10.0";
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class Zk extends gw{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Dy(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Iy(this.inputs).length!==this.inputs.length)throw new ay(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Iy(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const b of this.outputs){const e=b.sourceLayer,t=b.nodeIndex,n=b.tensorIndex;this.outputLayers.push(e),this.outputLayersNodeIndices.push(t),this.outputLayersTensorIndices.push(n)}for(const b of this.inputs){const e=b.sourceLayer,t=b.nodeIndex,n=b.tensorIndex;hy(0===t,"input layer has >1 nodes"),hy(0===n,"input layer has >1 tensors"),this.inputLayers.push(e),this.inputLayersNodeIndices.push(t),this.inputLayersTensorIndices.push(n)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let b=0;b<this.inputLayers.length;b++){const t=this.inputLayers[b];if(!(t instanceof yw))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${b} (0-based) originates from layer type ${t.getClassName()}.`);this.inputNames.push(t.name),this.feedInputShapes.push(t.batchInputShape),this.feedInputNames.push(t.name)}for(const b of this.outputLayers)this.outputNames.push(b.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},s={},r={},i={},a=[],o=(e,t,n,s,r,l)=>{null!=s&&null!=r&&null!=l||(s=e.sourceLayer,r=e.nodeIndex,l=e.tensorIndex);const u=s.inboundNodes[r];if(-1!==n.indexOf(u))throw new iy(`The tensor ${e.name} at layer "${s.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Zk.nodeKey(s,r)),s.id in i||(i[s.id]=Object.keys(i).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let i=0;i<c;i++){const e=u.inputTensors[i],s=u.inboundLayers[i],r=u.nodeIndices[i],a=u.tensorIndices[i];o(e,t,n,s,r,a)}t.push(u);while(n.indexOf(u)>=0)n.splice(n.indexOf(u),1);a.push(u)},l=[],u=[];for(const b of this.outputs)o(b,l,u);const c=a.slice().reverse();for(const b of c){n[b.id]=b,b.id in t||(t[b.id]=0);let e=t[b.id];const i=null==s[b.outboundLayer.id]?0:s[b.outboundLayer.id];e=Math.max(e,i),s[b.outboundLayer.id]=e,r[b.outboundLayer.id]=b.outboundLayer,t[b.id]=e;for(let s=0;s<b.inboundLayers.length;s++){const r=b.inboundLayers[s],i=b.nodeIndices[s],a=r.inboundNodes[i],o=null==t[a.id]?0:t[a.id];t[a.id]=Math.max(e+1,o),n[a.id]=a}}const h={};for(const b in t){const e=t[b];e in h||(h[e]=[]),h[e].push(n[b])}const d={};for(const b in s){const e=s[b];e in d||(d[e]=[]),d[e].push(r[b])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(ky);this.layers=[];for(const b of p){const e=d[b];e.sort(((e,t)=>{const n=i[e.id],s=i[t.id];return n<s?-1:n>s?1:0}));for(const t of e)t instanceof Zk&&this.internalContainerRefs.push(t),this.layers.push(t)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(ky);const f=this.inputs.slice(),g=[];for(const b of p)for(const e of h[b]){const t=e.outboundLayer;if(null!=t){for(const n of e.inputTensors)if(-1===f.indexOf(n))throw new iy(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${t.name}". The following previous layers were accessed without issue: ${g}`);for(const t of e.outputTensors)f.push(t);g.push(t.name)}}this.nodesByDepth=h;const m=this.layers.map((e=>e.name));for(const b of m){const e=m.filter((e=>e===b)).length;if(1!==e)throw new iy(`The name "${b}" is used ${e} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new pw({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new ay("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let s=0;const r=Object.keys(e)[0].split("/"),i=!isNaN(parseInt(r[r.length-1],10));for(const o of this.layers)for(const[e,t]of o.weights.entries()){const r=i?`${t.name.split("/").slice(0,-1).join("/")+"/"}${e}`:t.originalName;if(null!=n[r])throw new ay(`Duplicate weight name: ${r}`);n[r]=t,s++}const a=[];for(const o in e){let s=o;if(null==n[o]){const e=o.split("/"),t=e.slice(0,-2).concat([e[e.length-1]]);s=t.join("/")}if(null!=n[s])a.push([n[s],e[o]]);else if(t)throw new ay(`Provided weight data has no target variable: ${o}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new ay(`${e.length} of ${s} weights are not set: ${e}`)}uw(a)}updatedConfig(){const e=this.getConfig(),t={};return t["className"]=this.getClassName(),t["config"]=e,t["kerasVersion"]=`tfjs-layers ${Yk}`,t["backend"]="TensorFlow.js",t}toJSON(e,t=!0){const n=Jk(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Ra((()=>{e=fy(e);const n=new kw;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return $w(this.outputs,n,t)}))}computeMask(e,t){return Ra((()=>{let n;return e=fy(e),n=null==t?cy(null,e.length):fy(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=tw(e);if(t.length!==this.inputLayers.length)throw new ay(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let a=0;a<t.length;a++){const e=this.inputLayers[a],s=t[a],r=e.name+"_0_0";n[r]=s}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ky);if(s.length>1)for(const a of s){const e=this.nodesByDepth[a];for(const t of e){const e=t.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(e.id))continue;const s=[];for(let o=0;o<t.inboundLayers.length;o++){const e=t.inboundLayers[o],r=t.nodeIndices[o],i=t.tensorIndices[o],a=`${e.name}_${r}_${i}`,l=n[a];s.push(l)}const r=e.computeOutputShape(py(s)),i=tw(r),a=e.inboundNodes.indexOf(t);for(let t=0;t<i.length;t++){const s=`${e.name}_${a}_${t}`;n[s]=i[t]}}}const r=[],i=[];for(let a=0;a<this.outputLayers.length;a++){const e=this.outputLayers[a],t=this.outputLayersNodeIndices[a],n=this.outputLayersTensorIndices[a],s=`${e.name}_${t}_${n}`;i.push(s)}for(let a=0;a<i.length;a++){const e=i[a];hy(e in n),r.push(n[e])}return py(r)}runInternalGraph(e,t){null==t&&(t=cy(null,e.length));const n={};for(let o=0;o<this.inputs.length;++o){const s=this.inputs[o],r=e[o],i=t[o];n[s.id]=[r,i]}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(ky);for(const o of s){const e=this.nodesByDepth[o];for(const t of e){const e=t.outboundLayer,s=t.inputTensors,r=t.outputTensors,i=new Array;for(const t of s)t.id in n&&i.push(n[t.id]);if(i.length===s.length){let s,a,o,l,u={};if(null!=t.callArgs&&(u=t.callArgs),1===i.length){const[t,n]=i[0];null==u["mask"]&&(u["mask"]=n),o=fy(e.call(t,u)),l=fy(e.computeMask(t,n)),s=[t],a=[n]}else s=i.map((e=>e[0])),a=i.map((e=>e[1])),null==u["mask"]&&(u["mask"]=a),o=fy(e.call(s,u)),l=fy(e.computeMask(s,a));if(e.activityRegularizer)throw new oy("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],s=o[e],i=l[e];n[t.id]=[s,i]}}}}const r=[],i=[],a=[];for(const o of this.outputs){hy(o.id in n,`Could not compute output ${o.name} : ${o.id}`);const[e,t]=n[o.id];a.push(e.shape),r.push(e),i.push(t)}return[r,i,a]}buildNodeConversionMap(e){const t={};let n;for(const s of this.layers){n=s instanceof Zk?1:0;for(let e=0;e<s.inboundNodes.length;e++){const r=Zk.nodeKey(s,e);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t)return this.findLayer(t);if(null==e)throw new ay("Provide either a layer name or layer index");if("number"===typeof e)return this.findLayer(e);for(const n of this.layers)if(n.name===e)return n;throw new ay(`No such layer: ${e}`)}findLayer(e){if(this.layers.length<=e)throw new ay(`Was asked to retrieve layer at index ${e}, but model only has ${this.layers.length} layer(s).`);return this.layers[e]}calculateLosses(){return Ra((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const s=Zk.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const i of this.layers){const e=i.getClassName(),s=i.getConfig(),r=[];for(let n=0;n<i.inboundNodes.length;n++){const e=i.inboundNodes[n],s=Zk.nodeKey(i,n);let a={};if(this.containerNodes.has(s)){if(e.callArgs)try{JSON.stringify(e.callArgs),a=e.callArgs}catch(iJ){console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${e.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),a={}}if(e.inboundLayers.length>0){const n=[];for(let s=0;s<e.inboundLayers.length;s++){const r=e.inboundLayers[s],i=e.nodeIndices[s],o=e.tensorIndices[s],l=Zk.nodeKey(r,i);let u=t[l];null==u&&(u=0),n.push([r.name,u,o,a])}r.push(n)}}}const a={};a["name"]=i.name,a["className"]=e,a["config"]=s,a["inboundNodes"]=r,n.push(a)}e["layers"]=n;const s=[];for(let i=0;i<this.inputLayers.length;i++){const e=this.inputLayers[i],n=this.inputLayersNodeIndices[i],r=Zk.nodeKey(e,n);if(!this.containerNodes.has(r))continue;let a=t[r];null!==a&&void 0!==a||(a=0);const o=this.inputLayersTensorIndices[i];s.push([e.name,a,o])}e["inputLayers"]=s;const r=[];for(let i=0;i<this.outputLayers.length;i++){const e=this.outputLayers[i],n=this.outputLayersNodeIndices[i],s=Zk.nodeKey(e,n);if(!this.containerNodes.has(s))continue;let a=t[s];null!==a&&void 0!==a||(a=0);const o=this.outputLayersTensorIndices[i];r.push([e.name,a,o])}return e["outputLayers"]=r,e}static fromConfig(e,t,n={},s=!1){const r={},i={};function a(e,t){e.name in i?i[e.name].push(t):i[e.name]=[t]}function o(e,t){const n=[];let s;for(const i of t){const o=i[0],l=i[1],u=i[2];if(s=null==i[3]?{}:i[3],!(o in r))return void a(e,t);const c=r[o];if(c.inboundNodes.length<=l)return void a(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(py(n),s)}function l(e){const n=e["name"],i=ek(e,null!=t["customObjects"]?t["customObjects"]:{});i.setFastWeightInitDuringBuild(s),r[n]=i;const o=e["inboundNodes"];o.forEach((e=>{if(!(e instanceof Array))throw new ay(`Corrupted configuration, expected array for nodeData: ${e}`);a(i,e)}))}const u=t["name"],c=t["layers"];for(const g of c)l(g);while(!Cy(i))for(const e of c){const t=r[e["name"]];if(t.name in i){const e=i[t.name];delete i[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t["inputLayers"];for(const g of p){const e=g[0],t=g[1],n=g[2];hy(e in r);const s=r[e],i=s.inboundNodes[t].outputTensors;h.push(i[n])}const f=t["outputLayers"];for(const g of f){const e=g[0],t=g[1],n=g[2];hy(e in r);const s=r[e],i=s.inboundNodes[t].outputTensors;d.push(i[n])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new ay("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Ra((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function Qk(e,t,n){const s=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===s)return Array.isArray(e)&&1===e.length?e:"object"===typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"===typeof e&&Object.keys(e).length>0&&"object"===typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function eI(e,t){return Qk(e,t,"classWeight")}async function tI(e,t,n,s){if(null!=t||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Ra((()=>{if(1===e.shape.length)return Ca(e);if(2===e.shape.length){if(e.shape[1]>1){const t=1;return Tl(e,t)}if(1===e.shape[1])return Xl(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await t.data());Aa(t);const r=[];return s.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);r.push(n[e])})),Vh(r,"float32")}return null}function nI(e,t){return Ua(e,t)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const sI=32;function rI(e,t){let n,s;const r=t;n=r["xs"],s=r["ys"],x(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const i=iI("input",e.inputNames,n),a=iI("output",e.outputNames,s),o=i[0].shape[0];x(i.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),x(a.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let l=0;l<i.length;l++)x(i[l].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[l]} has ${i[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let l=0;l<a.length;l++)x(a[l].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[l]} has ${a[l].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:i,ys:a}}function iI(e,t,n){if(n instanceof Ar)return[n];if(Array.isArray(n))return x(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const s=[];for(const r of t){if(null==n[r])throw new ay(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function aI(e){if(3===e.length)throw new oy("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function oI(e,t,n){const s=null!=n.batchesPerEpoch;if(x(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),x(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),x(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),x(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),x(null==n["validationSplit"],(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let i,a;if(r)if(uI(n.validationData))x(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=aI(n.validationData);i=e.xs,a=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=Yw(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=Qw(c,h,n.epochs,null,null,lI(t,n),null,r,u);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();while(f<n.epochs){const u={};await d.onEpochBegin(f);let c=0,h=0;s||(g=await t.iterator());while(!s||c<n.batchesPerEpoch){const t=await g.next();if(s&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:s,ys:r}=rI(e,t.value),i={};i["batch"]=h,i["size"]=s[0].shape[0],await d.onBatchBegin(h,i);const a=[];if(null!=n.classWeight){const t=eI(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)a.push(await tI(r[e],null,t[e]))}const u=s.concat(r).concat(a),p=o(u);Aa(u);for(let e=0;e<l.length;++e){const t=l[e],n=p[e];i[t]=n,_a(n)}await d.onBatchEnd(h,i),Vw(i),h++,c++}if(s?c>=n.batchesPerEpoch:t.done){if(r){let t;t=uI(n.validationData)?fy(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):fy(e.evaluate(i,a,{batchSize:null==n.validationBatchSize?sI:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function lI(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function uI(e){return"function"===typeof e.iterator}function cI(e){return"function"===typeof e.next}async function hI(e,t,n){n=n||{};const s=null!=n.batches,r=e.testFunction;let i=[];if(n.verbose>0)throw new oy("Verbose mode is not implemented yet.");x(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const a=cI(t)?t:await t.iterator();let o=0,l=0;while(!s||l<n.batches){const t=await a.next();if(i=Ra((()=>{if(t.value){const{xs:n,ys:s}=rI(e,t.value),a=n.concat(s),u=Ra((()=>r(a)));if(Aa(a),0===l)for(let e=0;e<u.length;++e)i.push(Ya(0));const c=a[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=i[e];i[e]=Ra((()=>La(i[e],Ua(c,t)))),l>0&&Aa(n)}Aa(u),o+=c,++l}return i})),t.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<i.length;++u){const e=i[u];i[u]=Ba(i[u],o),Aa(e)}return py(i)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function dI(e){x(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function pI(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>dv(e,t,n-t))):dv(e,t,n-t)}function fI(e,t){return Ra((()=>null==e?null:Array.isArray(e)?e.map((e=>fI(e,t))):vv(e,"int32"===t.dtype?t:ka(t,"int32"))))}function gI(e,t){const n=[];let s=0,r=null;while(s<e)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}function mI(e){const t=[];e instanceof Ar&&(e=[e]);for(let n=0;n<e.length;++n){const s=e[n];if(1===s.rank)t.push(lv(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function bI(e,t){if(null==e)return;const n=[];if(t instanceof Ar)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const r in t){const e=t[r];n.push(e.id)}const s=[];if(e instanceof Ar)-1===n.indexOf(e.id)&&s.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&s.push(e)}));else if(null!=e)for(const r in e){const t=e[r];-1===n.indexOf(t.id)&&s.push(t)}s.forEach((e=>{e.isDisposed||e.dispose()}))}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function xI(e){return e instanceof Ar}function yI(e){return Array.isArray(e)}function vI(e){return!xI(e)&&!yI(e)}function wI(e,t,n,s=!0,r=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(yI(e)&&e.length>0)t=!0;else if(vI(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new ay(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let i;if(vI(e)){i=[];for(const n of t){if(null==e[n])throw new ay(`No data provided for "${n}". Need data for each key in: ${t}`);i.push(e[n])}}else if(yI(e)){if(e.length!==t.length)throw new ay(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);i=e}else{if(t.length>1)throw new ay(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);i=[e]}if(i=mI(i),null!=n)for(let a=0;a<t.length;++a){if(null==n[a])continue;const e=i[a];if(e.shape.length!==n[a].length)throw new ay(`Error when checking ${r}: expected ${t[a]} to have ${n[a].length} dimension(s). but got array with shape ${e.shape}`);for(let t=0;t<n[a].length;++t){if(0===t&&!s)continue;const i=e.shape[t],o=n[a][t];if(null!=o&&o>=0&&i!==o)throw new ay(`${r} expected a batch of elements where each example has shape [${n[a].slice(1,n[a].length)}] (i.e.,tensor shape [*,${n[a].slice(1,n[a].length)}]) but the ${r} received an input with ${e.shape[0]} examples, each with shape [${e.shape.slice(1,e.shape.length)}] (tensor shape [${e.shape}])`)}}return i}function kI(e,t,n){const s=Iy(e.map((e=>e.shape[0])));s.sort();const r=Iy(t.map((e=>e.shape[0])));if(r.sort(),s.length>1)throw new ay(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new ay(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(s.length>0&&r.length>0&&!k(s,r))throw new ay(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function II(e,t,n){const s=[nk,pk,ck];for(let r=0;r<e.length;++r){const i=e[r],a=t[r],o=n[r];if(null!=a){if(a===ck&&1===i.shape[i.shape.length-1])throw new ay(`You are passing a target array of shape ${i.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(a)){const e=i.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const s=e[n],r=t[n];if(null!=r&&s!==r)throw new ay(`A target Tensor with shape ${i.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function CI(e,t,n,s=!0,r=""){let i;if(Array.isArray(e)){if(e.length!==t.length)throw new ay(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);i=e}else{if(t.length>1)throw new ay(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);i=[e]}if(null!=n)for(let a=0;a<t.length;++a){if(null==n[a])continue;const e=i[a];if(e.shape.length!==n[a].length)throw new ay(`Error when checking ${r}: expected ${t[a]} to have ${n[a].length} dimension(s), but got array with shape ${JSON.stringify(e.shape)}`);for(let i=0;i<n[a].length;++i){if(0===i&&!s)continue;const o=e.shape[i],l=n[a][i];if(null!=l&&l!==o)throw new ay(`Error when checking ${r}: expected ${t[a]} to have shape ${JSON.stringify(n[a])} but got array with shape ${JSON.stringify(e.shape)}.`)}}}function SI(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"===typeof e||"function"===typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!==typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const s of t){let t=n.hasOwnProperty(s)?n[s]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}const $I="layers-model";class NI extends Zk{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new ay("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Uk(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"===typeof e.optimizer)this.optimizer_=zk(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof so))throw new ay("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"===typeof e.loss||"function"===typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new ay(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>xk(e)))}else{const n=xk(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new ay(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(xk(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const e=this.internalOutputShapes[i],t=this.outputNames[i];this.feedOutputNames.push(t),this.feedOutputShapes.push(e),this.feedLossFns.push(this.lossFunctions[i])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ky("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const s=SI(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Ky("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=s[e],i=t=>{const n="";let s,i,a;for(const o of t){if("string"===typeof o&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(o)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===pk?-1!==["accuracy","acc"].indexOf(o)?i=yk:-1!==["crossentropy","ce"].indexOf(o)&&(i=Ck):this.lossFunctions[e]===hk?-1!==["accuracy","acc"].indexOf(o)?i=Sk:-1!==["crossentropy","ce"].indexOf(o)&&(i=Dk):-1!==["accuracy","acc"].indexOf(o)?i=vk:-1!==["crossentropy","ce"].indexOf(o)&&(i=_k),-1!==["accuracy","acc"].indexOf(o)?r="acc":-1!==["crossentropy","ce"].indexOf(o)&&(r="ce"),a=i,s=n+r}else{const e=Lk(o);a=e,s=n+Mk(o)}let t;Ky(s,(()=>{t=a})),r(e,s,t)}};i(t)}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const s=null==n.batchSize?32:n.batchSize;dI(s);const r=!0,i=this.standardizeUserDataXY(e,t,r,s);try{const e=i[0].concat(i[1]);this.makeTestFunction();const t=this.testFunction,r=this.testLoop(t,e,s,n.verbose,n.steps);return py(r)}finally{bI(i[0],e),bI(i[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),hI(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(null!=n){if(r=null,null!=t)throw new ay(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new ay(`Either the input data should have a defined shape, or ${s} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new ay("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),i=new kw;if(e instanceof Ar&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new ay(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)i.add(this.inputs[t],e[t])}else for(const o of this.inputs){const t=e[o.name];if(null==t)throw new ay(`No value is provided for the model's input ${o.name}`);i.add(o,t)}const a=$w(r,i);return n?a:a[0]}retrieveSymbolicTensors(e){const t=cy(null,e.length);let n=e.length;for(const s of this.layers){const r=Array.isArray(s.output)?s.output:[s.output],i=r.map((e=>e.name));for(let s=0;s<e.length;++s){const a=i.indexOf(e[s]);if(-1!==a&&(t[s]=r[a],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,s)=>{null==t&&n.push(e[s])})),new ay(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Ra((()=>{const s=this.checkNumSamples(e);if(n)throw new oy("Verbose predictLoop() is not implemented yet.");const r=gI(s,t),i=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t){const n=Ra((()=>{const n=r[t][0],s=r[t][1],i=pI(e,n,s),a=[];if(Array.isArray(i))for(let e=0;e<i.length;++e)a.push({key:this.inputs[e],value:i[e]});else a.push({key:this.inputs[0],value:i});const o=new kw(a);return $w(this.outputs,o)}));n.forEach(((e,t)=>i[t].push(e)))}return py(i.map((e=>fu(e,0))))}))}predict(e,t={}){const n=mI(e);CI(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return dI(e),this.predictLoop(n,e)}finally{bI(n,e)}}predictOnBatch(e){CI(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(null==this.optimizer_)throw new iy("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let i=0;i<this.feedOutputShapes.length;++i){const e=this.feedOutputShapes[i],t=this.feedLossFns[i];t===hk?r.push(e.slice(0,e.length-1).concat([1])):r.push(e)}if(e=wI(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=wI(t,this.feedOutputNames,r,!1,"target"),kI(e,t,null),II(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&e[0].shape[0]%s!==0)throw new ay(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,i){const[a,o]=this.standardizeUserDataXY(e,t,r,i);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=s){const e=eI(s,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await tI(o[t],null,e[t]))}return[a,o,l]}testLoop(e,t,n,s=0,r){return Ra((()=>{const i=this.checkNumSamples(t,n,r,"steps"),a=[];if(s>0)throw new oy("Verbose mode is not implemented yet.");if(null!=r)throw new oy("steps mode in testLoop() is not implemented yet");{const s=gI(i,n),r=Vh(sv(0,i));for(let n=0;n<s.length;++n){const i=s[n][0],o=s[n][1],l=dv(r,i,o-i),u=fI(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)a.push(Ya(0));for(let e=0;e<c.length;++e){const t=c[e];a[e]=La(a[e],Ua(o-i,t))}}for(let e=0;e<a.length;++e)a[e]=Ba(a[e],i)}return a}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const s=e[n];let r=s;if(dy(e,s)>1){const t=dy(e.slice(0,n),s);r+=`_${t}`}t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],a=()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const a=new kw(e),o=$w(this.outputs,a,{training:!0});let l;for(let n=0;n<this.lossFunctions.length;++n){const e=this.lossFunctions[n];let i=e(s[n],o[n]);null!=r[n]&&(i=nI(i,r[n]));const a=Tc(i);t.push(a),l=0===n?i:La(l,i)}for(let n=0;n<this.metricsTensors.length;++n){let e;if(this.outputs.length>1&&n<this.outputs.length)e=t[n];else{const t=this.metricsTensors[n][0],r=this.metricsTensors[n][1];e=Tc(t(s[r],o[r]))}_a(e),i.push(e)}return l=Tc(l),this.calculateLosses().forEach((e=>{l=La(l,e)})),l},o=this.collectedTrainableWeights.map((e=>e.read())),l=!0,u=this.optimizer_.minimize(a,l,o);return[u].concat(i)}}makeTestFunction(){this.testFunction=e=>Ra((()=>{const t=[];let n;const s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let e=0;e<this.inputs.length;++e)i.push({key:this.inputs[e],value:s[e]});const a=new kw(i),o=$w(this.outputs,a);for(let e=0;e<this.lossFunctions.length;++e){const s=this.lossFunctions[e],i=Tc(s(r[e],o[e]));n=0===e?i:La(n,i),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],s=this.metricsTensors[e][1],i=Tc(n(r[s],o[s]));t.push(i)}return t}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,r,i,a,o,l,u,c,h;this.isTraining=!0;try{const d=null==n.batchSize?32:n.batchSize;dI(d);const p=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,p,d);s=f[0],r=f[1],h=f[2];let g,m=!1;if(null!=n.validationData&&n.validationData.length>0){if(m=!0,2!==n.validationData.length)throw 3===n.validationData.length?new oy("validationData including sample weights is not supported yet."):new ay(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],l=n.validationData[1];const e=!0,t=await this.standardizeUserData(o,l,null,null,e,d);u=t[0],c=t[1],g=u.concat(c)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){m=!0;const e=Math.floor(s[0].shape[0]*(1-n.validationSplit)),t=s[0].shape[0];u=pI(s,e,t),i=s,s=pI(s,0,e),c=pI(r,e,t),a=r,r=pI(r,0,e),g=u.concat(c)}else null!=n.validationSteps&&(m=!0);const b=s.concat(r).concat(h);this.checkTrainableWeightsConsistency();const x=this.makeTrainFunction(),y=this.getDedupedMetricsNames();let v,w;m?(this.makeTestFunction(),v=this.testFunction,w=y.slice().concat(y.map((e=>"val_"+e)))):(v=null,g=[],w=y.slice());const k=Yw(n.callbacks,n.yieldEvery),I=await this.fitLoop(x,b,y,d,n.epochs,n.verbose,k,v,g,n.shuffle,w,n.initialEpoch,null,null);return I}finally{this.isTraining=!1,bI(s,e),bI(r,t),bI(i,e),bI(a,t),bI(u,o),bI(c,l),null!=h&&Aa(h)}}async fitLoop(e,t,n,s,r,i,a,o,l,u,c,h,d,f){null==s&&(s=32),null==r&&(r=1),null==u&&(u=!0),null==h&&(h=0);let g=!1;if(null!=o&&null!=l&&(g=!0),null!=f&&(g=!0,null==d))throw new ay("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const m=this.checkNumSamples(t,s,d,"steps_per_epoch");let b;null!=m&&(b=sv(0,m)),null==i&&(i=1);const{callbackList:x,history:y}=Qw(a,i,r,h,m,d,s,g,c);x.setModel(this),this.history=y,await x.onTrainBegin(),this.stopTraining_=!1;for(let v=h;v<r;++v){await x.onEpochBegin(v);const r={};if(null!=d)throw new oy("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new oy("batch shuffling is not implemneted yet");u&&p(b);const i=Vh(b),a=gI(m,s);for(let u=0;u<a.length;++u){const c={};if(await x.onBatchBegin(u,c),Ra((()=>{const h=a[u][0],d=a[u][1],p=dv(i,h,d-h);c["batch"]=u,c["size"]=d-h;const f=fI(t,p),m=e(f);for(let e=0;e<n.length;++e){const t=n[e],s=m[e];c[t]=s,_a(s)}if(u===a.length-1&&g){const e=this.testLoop(o,l,s);for(let t=0;t<n.length;++t){const s=n[t],i=e[t];_a(i),r["val_"+s]=i}}})),await x.onBatchEnd(u,c),Vw(c),this.stopTraining_)break}i.dispose()}if(await x.onEpochEnd(v,r),this.stopTraining_)break}return await x.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return oI(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),s=n[0],r=n[1],i=this.makeTrainFunction(),a=i(s.concat(r)),o=[];for(const l of a){const e=await l.data();o.push(e[0])}return Aa(a),bI(n[0],e),bI(n[1],t),py(o)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let i=0;i<s.length;++i)n&&!s[i].trainable||t.push({name:s[i].originalName,tensor:r[i]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Ea().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Ea().numTensors}return e}getLossIdentifiers(){let e;if("string"===typeof this.loss)e=gy(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!==typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>gy(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const s of t){if("string"!==typeof n[s])throw new Error("Serialization of non-string loss is not supported.");e[s]=gy(n[s])}}return e}getMetricIdentifiers(){if("string"===typeof this.metrics||"function"===typeof this.metrics)return[gy(Mk(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>gy(Mk(e))));{const e={};for(const t in this.metrics)e[t]=gy(Mk(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Xk(e.optimizer_config),n=ek(t);let s,r;if("string"===typeof e.loss)s=my(e.loss);else if(Array.isArray(e.loss))s=e.loss.map((e=>my(e)));else if(null!=e.loss){s={};for(const t in e.loss)s[t]=my(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>my(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=my(e.metrics[t])}this.compile({loss:s,metrics:r,optimizer:n})}async save(e,t){if("string"===typeof e){const t=Bi(e);if(0===t.length)throw new ay(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new ay(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new ay("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await ki(this.getNamedWeights(t)),s=!1,r=null,i=this.toJSON(r,s),a={modelTopology:i,format:$I,generatedBy:`TensorFlow.js tfjs-layers v${Yk}`,convertedBy:null},o=null!=t&&t.includeOptimizer;if(o&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await ki(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=Ei([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Bk(this.userDefinedMetadata,this.name,e),a.userDefinedMetadata=this.userDefinedMetadata}return a.weightData=n.data,a.weightSpecs=n.specs,e.save(a)}setUserDefinedMetadata(e){Bk(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}NI.className="Model",no(NI);class TI extends NI{}async function EI(e,t){if(null==t&&(t={}),"string"===typeof e){const n=Wi(e,t);if(0===n.length)n.push(Uo(e,t));else if(n.length>1)throw new ay(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return RI(e,void 0,t)}async function RI(e,t,n){if(null==n&&(n={}),null==e.load)throw new ay("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await e.load();let r=s.modelTopology;null!=r["model_config"]&&(r=r["model_config"]);const i=null==n.strict||n.strict,a=null!=s.weightData&&null!=s.weightSpecs&&i,o=ek(Xk(r),t,a),l=s.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=s.userDefinedMetadata&&o.setUserDefinedMetadata(s.userDefinedMetadata),null!=s.weightData){if(null==s.weightSpecs)throw new ay("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=AI(s.weightData,s.weightSpecs);o.loadWeights(e,i),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),Aa(e),Aa(t.map((e=>e.tensor)))}return o}function AI(e,t){const n=Ii(e,t),s={},r=[];return t.forEach((e=>{"optimizer"===e.group?r.push({name:e.name,tensor:n[e.name]}):s[e.name]=n[e.name]})),{modelWeights:s,optimizerWeights:r}}TI.className="Functional",no(TI);class _I extends NI{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Dy("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){const t=e.inboundNodes[0].outputTensors[0].shape;if(t.some((e=>e<0)))throw new ay(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof _I||e instanceof NI;let n;if(t){if(n=e,1!==n.outputs.length)throw new ay("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new ay("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new ay("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=vw({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new ay(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new ay("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=xw(this.outputs[0])}this.inboundNodes=[],new pw({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:cy(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(sw(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new NI({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new iy("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new iy("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new iy("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new iy("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,i={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0]["className"])throw new ay("Legacy serialization format not supported yet.");r=t}else x(null!=t["layers"],(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),r=t["layers"],delete t["layers"],i=t;const a=new e(i);if(!(a instanceof _I))throw new oy(`Sequential.fromConfig called on non-Sequential input: ${a}`);for(const o of r){const e=void 0,t=ek(o,e,s);s&&t.setFastWeightInitDuringBuild(!0),a.add(t)}return a}set stopTraining(e){if(null==this.model)throw new ay("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new ay("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n["className"]=t.getClassName(),n["config"]=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}_I.className="Sequential",no(_I);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class FI extends eo{getConfig(){return{}}}class DI extends FI{apply(e,t=1){return Cv(e,t)}}DI.className="elu",no(DI);class OI extends FI{apply(e){return mh(e)}}OI.className="selu",no(OI);class LI extends FI{apply(e){return dh(e)}}LI.className="relu",no(LI);class MI extends FI{apply(e){return Ra((()=>_c(6,dh(e))))}}MI.className="relu6",no(MI);class zI extends FI{apply(e){return e}}zI.className="linear",no(zI);class PI extends FI{apply(e){return vh(e)}}PI.className="sigmoid",no(PI);class BI extends FI{apply(e){return Nv(e)}}BI.className="hardSigmoid",no(BI);class WI extends FI{apply(e){return Dh(e)}}WI.className="softplus",no(WI);class UI extends FI{apply(e){return Sv(e)}}UI.className="softsign",no(UI);class VI extends FI{apply(e){return Uh(e)}}VI.className="tanh",no(VI);class GI extends FI{apply(e,t=-1){return _h(e,t)}}GI.className="softmax",no(GI);class HI extends FI{apply(e,t=-1){return xc(e,t)}}HI.className="logSoftmax",no(HI);class jI extends FI{apply(e,t=1){return Ra((()=>Ua(vh(Ua(e,t)),e)))}}jI.className="swish",no(jI);class KI extends FI{apply(e){return Ra((()=>Ua(e,Uh(Dh(e)))))}}function qI(e){return e.getClassName()}function XI(e,t={}){return vy(e,to.getMap().classNameMap,t,"activation")}function JI(e){if(null==e){const e={className:"linear",config:{}};return XI(e)}if("string"===typeof e){const t={};return t["className"]=e,t["config"]={},XI(t)}return e instanceof FI?e:XI(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function YI(e){if(null!=e&&"object"!==typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}KI.className="mish",no(KI);class ZI extends eo{}class QI extends ZI{constructor(e){super(),YI(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Ra((()=>{let t=Xc([1]);return this.hasL1&&(t=La(t,mc(Ua(this.l1,fo(e))))),this.hasL2&&(t=La(t,mc(Ua(this.l2,wv(e))))),Xl(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t["l1"],l2:t["l2"]})}}QI.className="L1L2",no(QI);const eC={l1l2:"L1L2"};function tC(e){return xy(e)}function nC(e,t={}){return vy(e,to.getMap().classNameMap,t,"regularizer")}function sC(e){if(null==e)return null;if("string"===typeof e){const t=e in eC?eC[e]:e,n={className:t,config:{}};return nC(n)}return e instanceof ZI?e:nC(e)}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class rC extends gw{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=nw(e);let n=dh(e);return null!=this.maxValue&&(n=du(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}rC.className="ReLU",no(rC);class iC extends gw{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=nw(e);return lc(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}iC.className="LeakyReLU",no(iC);class aC extends gw{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Qv(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=sC(e.alphaRegularizer),this.alphaConstraint=Ww(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!==typeof e.sharedAxes)throw new ay(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){e=sw(e);const t=e.slice(1);if(null!=this.sharedAxes)for(const s of this.sharedAxes)t[s-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let s=1;s<e.length;++s)n[s]=e[s];this.inputSpec=[new cw({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=nw(e),nh(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Zv(this.alphaInitializer),alphaRegularizer:tC(this.alphaRegularizer),alphaConstraint:Pw(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}aC.className="PReLU",no(aC);class oC extends gw{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new oy(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=nw(e);return Uu(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}oC.className="ELU",no(oC);class lC extends gw{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=nw(e);return Ua(n,ka(rc(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}lC.className="ThresholdedReLU",no(lC);class uC extends gw{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new GI).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=nw(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function cC(e,t,n){if("number"===typeof e)return cy(e,t);if(e.length!==t)throw new ay(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const r=e[s];if(!Qy(r))throw new ay(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e}function hC(e,t,n,s,r=1){if(null==e)return e;const i=t+(t-1)*(r-1);let a;return a="same"===n?e:e-i+1,Math.floor((a+s-1)/s)}function dC(e,t,n,s){if(null==e)return null;if("valid"===s)e=e*t+nv([n-t,0]);else{if("same"!==s)throw new ay(`Unsupport padding mode: ${s}.`);e*=t}return e}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function pC(e,t){return Ra((()=>(Wy(t),"channelsFirst"===t?nd(e,[0,2,3,1]):e)))}function fC(e,t){return Ra((()=>(Wy(t),"channelsFirst"===t?nd(e,[0,2,3,4,1]):e)))}function gC(e,t,n,s=1,r="valid",i,a=1){return Ra((()=>{if(null==i&&(i=av()),Wy(i),3!==e.shape.length)throw new ay(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new ay(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new ay(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===i&&(e=nd(e,[0,2,1])),"causal"===r)throw new oy("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=$u(e,t,s,"same"===r?"same":"valid","NWC",a);return null!=n&&(o=Iv(o,n)),o}))}function mC(e,t,n,s=[1,1],r="valid",i,a,o=null){return Ra((()=>{if(null==i&&(i=av()),Wy(i),3!==e.rank&&4!==e.rank)throw new ay(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new ay(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=pC(e,i);if("causal"===r)throw new oy("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=Sd({x:l,filter:t,strides:s,pad:"same"===r?"same":"valid",dilations:a,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===i&&(l=nd(l,[0,3,1,2])),l}))}function bC(e,t,n,s=[1,1,1],r="valid",i,a){return Ra((()=>{if(null==i&&(i=av()),Wy(i),4!==e.rank&&5!==e.rank)throw new ay(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new ay(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=fC(e,i);if("causal"===r)throw new oy("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=_u(o,t,s,"same"===r?"same":"valid","NDHWC",a),null!=n&&(o=Iv(o,n)),"channelsFirst"===i&&(o=nd(o,[0,4,1,2,3])),o}))}uC.className="Softmax",no(uC);class xC extends gw{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",xC.verifyArgs(t),this.rank=e,Ny(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new oy(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=cC(t.kernelSize,e,"kernelSize"),this.strides=cC(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Vy(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Wy(this.dataFormat),this.activation=JI(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Qv(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Ww(t.biasConstraint),this.biasRegularizer=sC(t.biasRegularizer),this.activityRegularizer=sC(t.activityRegularizer),this.dilationRate=cC(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new ay(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new ay(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"===typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new ay(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(hy("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!==typeof e.kernelSize&&!$y(e.kernelSize,"number",1,3))throw new ay(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:qI(this.activation),useBias:this.useBias,biasInitializer:Zv(this.biasInitializer),biasRegularizer:tC(this.biasRegularizer),activityRegularizer:tC(this.activityRegularizer),biasConstraint:Pw(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class yC extends xC{constructor(e,t){super(e,t),this.kernel=null,yC.verifyArgs(t),this.filters=t.filters,Ny(this.filters,"filters"),this.kernelInitializer=Qv(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Ww(t.kernelConstraint),this.kernelRegularizer=sC(t.kernelRegularizer)}build(e){e=sw(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ay(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Ra((()=>{let t;e=nw(e);const n=null==this.bias?null:this.bias.read(),s=Ry(this.activation.getClassName());if(null!=s&&2===this.rank)t=mC(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(1===this.rank)t=gC(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=mC(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new oy("convolutions greater than 3D are not implemented yet.");t=bC(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=sw(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<n.length;++r){const e=hC(n[r],this.kernelSize[r],this.padding,this.strides[r],"number"===typeof this.dilationRate?this.dilationRate:this.dilationRate[r]);t.push(e)}let s=[e[0]];return"channelsLast"===this.dataFormat?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){const e={filters:this.filters,kernelInitializer:Zv(this.kernelInitializer),kernelRegularizer:tC(this.kernelRegularizer),kernelConstraint:Pw(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!==typeof e.filters||e.filters<1)throw new ay(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class vC extends yC{constructor(e){super(2,e),vC.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e["rank"],e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!$y(e.kernelSize,"number",1,2))throw new ay(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}vC.className="Conv2D",no(vC);class wC extends yC{constructor(e){super(3,e),wC.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e["rank"],e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new ay(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}wC.className="Conv3D",no(wC);class kC extends vC{constructor(e){if(super(e),this.inputSpec=[new cw({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new ay(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=sw(e),4!==e.length)throw new ay("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ay("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new cw({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Ra((()=>{let t=nw(e);if(4!==t.shape.length)throw new ay(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,i;"channelsFirst"===this.dataFormat?(r=2,i=3):(r=1,i=2);const a=n[r],o=n[i],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=dC(a,c,l,this.padding),p=dC(o,h,u,this.padding),f=[s,d,p,this.filters];"channelsLast"!==this.dataFormat&&(t=nd(t,[0,2,3,1]));let g=Ru(t,this.kernel.read(),f,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(g=nd(g,[0,3,1,2])),null!=this.bias&&(g=Iv(g,this.bias.read(),this.dataFormat)),null!=this.activation&&(g=this.activation.apply(g)),g}))}computeOutputShape(e){e=sw(e);const t=e.slice();let n,s,r;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3):(n=3,s=1,r=2);const i=this.kernelSize[0],a=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[s]=dC(t[s],o,i,this.padding),t[r]=dC(t[r],l,a,this.padding),t}getConfig(){const e=super.getConfig();return delete e["dilationRate"],e}}kC.className="Conv2DTranspose",no(kC);class IC extends wC{constructor(e){if(super(e),this.inputSpec=[new cw({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new ay(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=sw(e),5!==e.length)throw new ay("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ay("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new cw({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Ra((()=>{let t=nw(e);if(5!==t.shape.length)throw new ay(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,i,a;"channelsFirst"===this.dataFormat?(a=2,r=3,i=4):(a=1,r=2,i=3);const o=n[a],l=n[r],u=n[i],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],g=this.strides[2],m=dC(o,p,c,this.padding),b=dC(l,f,h,this.padding),x=dC(u,g,d,this.padding),y=[s,m,b,x,this.filters];"channelsLast"!==this.dataFormat&&(t=nd(t,[0,2,3,4,1]));let v=Lu(t,this.kernel.read(),y,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(v=nd(v,[0,4,1,2,3])),null!==this.bias&&(v=Iv(v,this.bias.read(),this.dataFormat)),null!==this.activation&&(v=this.activation.apply(v)),v}))}computeOutputShape(e){e=sw(e);const t=e.slice();let n,s,r,i;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3,i=4):(n=4,s=1,r=2,i=3);const a=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[s]=dC(t[s],u,a,this.padding),t[r]=dC(t[r],c,o,this.padding),t[i]=dC(t[i],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e["dilationRate"],e}}IC.className="Conv3DTranspose",no(IC);class CC extends yC{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new ay("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new ay("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new ay(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Qv(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=sC(t.depthwiseRegularizer),this.depthwiseConstraint=Ww(t.depthwiseConstraint),this.pointwiseInitializer=Qv(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=sC(t.pointwiseRegularizer),this.pointwiseConstraint=Ww(t.pointwiseConstraint)}build(e){if(e=sw(e),e.length<this.rank+2)throw new ay(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new ay(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let a=0;a<this.rank;++a)r.push(1);r.push(n*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new cw({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Ra((()=>{let t;if(e=nw(e),1===this.rank)throw new oy("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=nd(e,[0,2,3,1])),t=xh(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Iv(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=nd(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e["rank"],delete e["kernelInitializer"],delete e["kernelRegularizer"],delete e["kernelConstraint"],e["depthwiseInitializer"]=Zv(this.depthwiseInitializer),e["pointwiseInitializer"]=Zv(this.pointwiseInitializer),e["depthwiseRegularizer"]=tC(this.depthwiseRegularizer),e["pointwiseRegularizer"]=tC(this.pointwiseRegularizer),e["depthwiseConstraint"]=Pw(this.depthwiseConstraint),e["pointwiseConstraint"]=Pw(this.pointwiseConstraint),e}}CC.className="SeparableConv";class SC extends CC{constructor(e){super(2,e)}}SC.className="SeparableConv2D",no(SC);class $C extends yC{constructor(e){super(1,e),$C.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e["rank"],delete e["dataFormat"],e}static verifyArgs(e){if("number"!==typeof e.kernelSize&&!$y(e.kernelSize,"number",1,1))throw new ay(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}$C.className="Conv1D",no($C);class NC extends gw{constructor(e){super(e),"number"===typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"===typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Ra((()=>{if(e=nw(e),"channelsLast"===this.dataFormat){const t=fv(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return fv(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=fv(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return fv(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}NC.className="Cropping2D",no(NC);class TC extends gw{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Wy(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,Uy(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Ra((()=>{let t=nw(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=nd(t,[0,2,3,1]);const e=this.size[0]*n[2],s=this.size[1]*n[3],r="nearest"===this.interpolation?Kp.resizeNearestNeighbor(t,[e,s]):Kp.resizeBilinear(t,[e,s]);return nd(r,[0,3,1,2])}{const e=this.size[0]*n[1],s=this.size[1]*n[2];return"nearest"===this.interpolation?Kp.resizeNearestNeighbor(t,[e,s]):Kp.resizeBilinear(t,[e,s])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function EC(e,t,n=[1,1],s="valid",r,i){return Ra((()=>{null==r&&(r=av()),Wy(r);let a=pC(e,r);if(4!==e.rank)throw new ay(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new ay(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return a=Bu(a,t,n,"same"===s?"same":"valid","NHWC",i),"channelsFirst"===r&&(a=nd(a,[0,3,1,2])),a}))}TC.className="UpSampling2D",no(TC);class RC extends xC{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Qv(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Ww(e.depthwiseConstraint),this.depthwiseRegularizer=sC(e.depthwiseRegularizer)}build(e){if(e=sw(e),e.length<4)throw new ay(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new ay(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Ra((()=>{e=nw(e);let t=EC(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Iv(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=sw(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=hC(t,this.kernelSize[0],this.padding,this.strides[0]),i=hC(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],s,r,i]:[e[0],r,i,s]}getConfig(){const e=super.getConfig();return e["depthMultiplier"]=this.depthMultiplier,e["depthwiseInitializer"]=Zv(this.depthwiseInitializer),e["depthwiseRegularizer"]=tC(this.depthwiseRegularizer),e["depthwiseConstraint"]=Pw(this.depthwiseRegularizer),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function AC(e,t,n,s){if(Array.isArray(e)){if(null!=t||null!=n)throw new ay("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return t=r(t),n=r(n),{inputs:e,initialState:t,constants:n}}function _C(e,t,n,s=!1,r,i,a=!1,o=!1){return Ra((()=>{const l=t.shape.length;if(l<3)throw new ay(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(sv(2,l));if(t=nd(t,u),null!=i)throw new oy("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&(r=ka(ka(r,"bool"),"float32"),r.rank===l-1&&(r=qu(r,-1)),r=nd(r,u)),s&&(t=fh(t,0),null!=r&&(r=fh(r,0)));const c=[];let h,d=n;const p=t.shape[0],f=Kh(t);let g,m;null!=r&&(g=Kh(r));for(let t=0;t<p;++t){const n=f[t],s=Ra((()=>e(n,d)));if(null==r)h=s[0],d=s[1];else{const e=Ra((()=>{const e=g[t],n=co(Zc(e),e),r=La(Ua(s[0],e),Ua(d[0],n)),i=d.map(((t,r)=>La(Ua(s[1][r],e),Ua(t,n))));return{output:r,newStates:i}}));h=e.output,d=e.newStates}o&&c.push(h)}if(o){const e=1;m=Bh(c,e)}return[h,m,d]}))}RC.className="DepthwiseConv2D",no(RC);class FC extends gw{constructor(e){let t;if(super(e),null==e.cell)throw new ay("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new WC({cells:e.cell}):e.cell,null==t.stateSize)throw new ay("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new cw({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return sv(0,e).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){ew(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let s;if(s=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const s of t)n.push([e[0],s]);return[s].concat(n)}return s}computeMask(e,t){return Ra((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){const t=null;if(null!=this.numConstants)throw new oy("Constants support is not implemented in RNN yet.");ew(e)&&(e=e[0]);const n=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new cw({shape:[n,null,...s]});const r=[e[0]].concat(e.slice(2));if(null!=t)throw new oy("Constants support is not implemented in RNN yet.");let i;if(this.cell.build(r),i=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!k(this.stateSpec.map((e=>e.shape[e.shape.length-1])),i))throw new ay(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=i.map((e=>new cw({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Ra((()=>{if(!this.stateful)throw new ry("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new ay("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Xc([n,e]))):this.states_=[Xc([n,this.cell.stateSize])];else if(null==e)Aa(this.states_),null!=this.keptStates&&(Aa(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Xc([n,e]))):this.states_[0]=Xc([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ay(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Aa(this.states_);for(let t=0;t<this.states_.length;++t){const s=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,i=[n,r];if(!k(s.shape,i))throw new ay(`State ${t} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${s.shape}`);this.states_[t]=s}}this.states_=this.states_.map((e=>_a(e.clone())))}))}apply(e,t){let n=null==t?null:t["initialState"],s=null==t?null:t["constants"];null==t&&(t={});const r=AC(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let i=[],a=[];if(null!=n){t["initialState"]=n,i=i.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new cw({shape:e.shape}));a=a.concat(this.stateSpec)}null!=s&&(t["constants"]=s,i=i.concat(s),this.numConstants=s.length);const o=i[0]instanceof hw;if(o){const n=[e].concat(i),s=this.inputSpec.concat(a),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return Ra((()=>{const n=null==t?null:t["mask"],s=null==t?null:t["training"];let r=null==t?null:t["initialState"];e=nw(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==i)throw new ay(`RNN Layer has ${i} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const a={training:s},o=(e,t)=>{const n=this.cell.call([e].concat(t),a);return[n[0],n.slice(1)]},l=_C(o,e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),u=l[0],c=l[1],h=l[2];this.stateful&&this.resetStates(h,s);const d=this.returnSequences?c:u;return this.returnState?[d].concat(h):d}))}getInitialState(e){return Ra((()=>{let t=Xc(e.shape);return t=mc(t,[1,2]),t=lv(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?bv(t,[1,e]):t)):this.cell.stateSize>1?[bv(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t["numConstants"]=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===FC.className&&(t["cell"]={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){const s=t["cell"],r=ek(s,n);return new e(Object.assign(t,{cell:r}))}}FC.className="RNN",no(FC);class DC extends gw{}class OC extends DC{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ny(this.units,"units"),this.activation=JI(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Qv(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Qv(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Qv(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=sC(e.kernelRegularizer),this.recurrentRegularizer=sC(e.recurrentRegularizer),this.biasRegularizer=sC(e.biasRegularizer),this.kernelConstraint=Ww(e.kernelConstraint),this.recurrentConstraint=Ww(e.recurrentConstraint),this.biasConstraint=Ww(e.biasConstraint),this.dropout=tv([1,nv([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=tv([1,nv([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=sw(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Ra((()=>{if(2!==e.length)throw new ay(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const s=null!=t["training"]&&t["training"];let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=UC({ones:()=>Zc(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=UC({ones:()=>Zc(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;r=yv(null!=i?Ua(e,i):e,this.kernel.read()),null!=this.bias&&(r=Iv(r,this.bias.read())),null!=a&&(n=Ua(n,a));let o=La(r,yv(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:qI(this.activation),useBias:this.useBias,kernelInitializer:Zv(this.kernelInitializer),recurrentInitializer:Zv(this.recurrentInitializer),biasInitializer:Zv(this.biasInitializer),kernelRegularizer:tC(this.kernelRegularizer),recurrentRegularizer:tC(this.recurrentRegularizer),biasRegularizer:tC(this.biasRegularizer),activityRegularizer:tC(this.activityRegularizer),kernelConstraint:Pw(this.kernelConstraint),recurrentConstraint:Pw(this.recurrentConstraint),biasConstraint:Pw(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}OC.className="SimpleRNNCell",no(OC);class LC extends FC{constructor(e){e.cell=new OC(e),super(e)}call(e,t){return Ra((()=>{null!=this.cell.dropoutMask&&(Aa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Aa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t["mask"],s=null==t?null:t["training"],r=null==t?null:t["initialState"];return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return new e(t)}}LC.className="SimpleRNN",no(LC);class MC extends DC{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new ay("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Ny(this.units,"units"),this.activation=JI(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=JI(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Qv(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Qv(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Qv(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=sC(e.kernelRegularizer),this.recurrentRegularizer=sC(e.recurrentRegularizer),this.biasRegularizer=sC(e.biasRegularizer),this.kernelConstraint=Ww(e.kernelConstraint),this.recurrentConstraint=Ww(e.recurrentConstraint),this.biasConstraint=Ww(e.biasConstraint),this.dropout=tv([1,nv([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=tv([1,nv([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=sw(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Ra((()=>{if(2!==e.length)throw new ay(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t["training"]&&t["training"];let s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=UC({ones:()=>Zc(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=UC({ones:()=>Zc(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,i=this.recurrentDropoutMask;let a,o,l;0<this.dropout&&this.dropout<1&&(e=Ua(e,r[0]));let u=yv(e,this.kernel.read());this.useBias&&(u=Iv(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=Ua(s,i[0]));const c=this.recurrentKernel.read(),[h,d]=Lh(c,[2*this.units,this.units],c.rank-1),p=yv(s,h),[f,g,m]=Lh(u,3,u.rank-1),[b,x]=Lh(p,2,p.rank-1);a=this.recurrentActivation.apply(La(f,b)),o=this.recurrentActivation.apply(La(g,x));const y=yv(Ua(o,s),d);l=this.activation.apply(La(m,y));const v=La(Ua(a,s),Ua(La(1,Gc(a)),l));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:qI(this.activation),recurrentActivation:qI(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Zv(this.kernelInitializer),recurrentInitializer:Zv(this.recurrentInitializer),biasInitializer:Zv(this.biasInitializer),kernelRegularizer:tC(this.kernelRegularizer),recurrentRegularizer:tC(this.recurrentRegularizer),biasRegularizer:tC(this.biasRegularizer),activityRegularizer:tC(this.activityRegularizer),kernelConstraint:Pw(this.kernelConstraint),recurrentConstraint:Pw(this.recurrentConstraint),biasConstraint:Pw(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}MC.className="GRUCell",no(MC);class zC extends FC{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new MC(e),super(e)}call(e,t){return Ra((()=>{null!=this.cell.dropoutMask&&(Aa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Aa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t["mask"],s=null==t?null:t["training"],r=null==t?null:t["initialState"];return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t["implmentation"]&&(t["implementation"]=1),new e(t)}}zC.className="GRU",no(zC);class PC extends DC{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ny(this.units,"units"),this.activation=JI(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=JI(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Qv(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Qv(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Qv(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=sC(e.kernelRegularizer),this.recurrentRegularizer=sC(e.recurrentRegularizer),this.biasRegularizer=sC(e.biasRegularizer),this.kernelConstraint=Ww(e.kernelConstraint),this.recurrentConstraint=Ww(e.recurrentConstraint),this.biasConstraint=Ww(e.biasConstraint),this.dropout=tv([1,nv([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=tv([1,nv([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=sw(e);const n=e[e.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;s=new(t=class extends Fv{apply(t,s){const r=e.apply([n]),i=(new Ov).apply([n]),a=e.apply([2*n]);return mv(mv(r,i),a)}},t.className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Ra((()=>{const n=null!=t["training"]&&t["training"];if(3!==e.length)throw new ay(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=UC({ones:()=>Zc(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=UC({ones:()=>Zc(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,a=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=Ua(e,i[0]));let h=yv(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=Ua(s,a[0])),h=La(h,yv(s,this.recurrentKernel.read())),this.useBias&&(h=Iv(h,this.bias.read()));const[d,p,f,g]=Lh(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=La(Ua(l,r),Ua(o,this.activation.apply(f))),c=this.recurrentActivation.apply(g);const m=Ua(c,this.activation.apply(u));return[m,m,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:qI(this.activation),recurrentActivation:qI(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Zv(this.kernelInitializer),recurrentInitializer:Zv(this.recurrentInitializer),biasInitializer:Zv(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:tC(this.kernelRegularizer),recurrentRegularizer:tC(this.recurrentRegularizer),biasRegularizer:tC(this.biasRegularizer),activityRegularizer:tC(this.activityRegularizer),kernelConstraint:Pw(this.kernelConstraint),recurrentConstraint:Pw(this.recurrentConstraint),biasConstraint:Pw(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}PC.className="LSTMCell",no(PC);class BC extends FC{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new PC(e),super(e)}call(e,t){return Ra((()=>{null!=this.cell.dropoutMask&&(Aa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Aa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t["mask"],s=null==t?null:t["training"],r=null==t?null:t["initialState"];return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t["implmentation"]&&(t["implementation"]=1),new e(t)}}BC.className="LSTM",no(BC);class WC extends DC{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Ra((()=>{let n=e.slice(1);const s=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?s.push(n.splice(0,e.stateSize.length)):s.push(n.splice(0,1));s.reverse();const r=[];let i;for(let a=0;a<this.cells.length;++a){const o=this.cells[a];n=s[a],i=0===a?[e[0]].concat(n):[i[0]].concat(n),i=o.call(i,t),r.push(i.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[i[0]].concat(n)}))}build(e){let t;ew(e)&&(e=e[0]),this.cells.forEach(((n,s)=>{Ky(`RNNCell_${s}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t=e=>({className:e.getClassName(),config:e.getConfig()}),n=this.cells.map(t),s={cells:n};return Object.assign(Object.assign({},e),s)}static fromConfig(e,t,n={}){const s=[];for(const r of t["cells"])s.push(ek(r,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return lw(e)}setWeights(e){const t=[];for(const n of this.cells){const s=n.weights.length,r=e.splice(s);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}uw(t)}}function UC(e){const{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:i}=e,a=()=>null!=i?i(t(),n):$v(t(),n),o=()=>Tv(a,t,s);if(!r||r<=1)return _a(o().clone());const l=Array(r).fill(void 0).map(o);return l.map((e=>_a(e.clone())))}WC.className="StackedRNNCells",no(WC);
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
var VC=function(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(null!=e&&"function"===typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(e);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(e,s[r])&&(n[s[r]]=e[s[r]])}return n};class GC extends FC{constructor(e){if(e.unroll)throw new oy("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new oy("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new cw({ndim:5})]}call(e,t){return Ra((()=>{if(null!=this.cell.dropoutMask&&(Aa(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Aa(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t["constants"])throw new ay("ConvRNN2D cell does not support constants");const n=null==t?null:t["mask"],s=null==t?null:t["training"],r=null==t?null:t["initialState"];return super.call(e,{mask:n,training:s,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Ra((()=>{const{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)],i=Xc(r);return Array.isArray(t)?Array(t.length).fill(i):[i]}))}resetStates(e,t=!1){Ra((()=>{if(!this.stateful)throw new ry("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)],i=n[0];if(null==i)throw new ay("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Xc(r))):this.states_=[Xc(r)];else if(null==e)Aa(this.states_),null!=this.keptStates&&(Aa(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Xc(r))):this.states_[0]=Xc(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ay(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Aa(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],s=r;if(!k(n.shape,s))throw new ay(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>_a(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:i,dilationRate:a}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=hC(l,s[0],r,i[0],a[0]),h=hC(u,s[1],r,i[1],a[1]),d=[...e.slice(0,2),...o?[n,c,h]:[c,h,n]];return d}}GC.className="ConvRNN2D";class HC extends PC{constructor(e){const{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:i,dilationRate:a}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Ny(this.filters,"filters"),this.kernelSize=cC(n,2,"kernelSize"),this.kernelSize.forEach((e=>Ny(e,"kernelSize"))),this.strides=cC(s||1,2,"strides"),this.strides.forEach((e=>Ny(e,"strides"))),this.padding=r||"valid",Vy(this.padding),this.dataFormat=i||"channelsLast",Wy(this.dataFormat),this.dilationRate=cC(a||1,2,"dilationRate"),this.dilationRate.forEach((e=>Ny(e,"dilationRate")))}build(e){var t;e=sw(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new ay(`The channel dimension of the input should be defined. Found ${e[n]}`);const s=e[n],r=4,i=this.kernelSize.concat([s,this.filters*r]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;e=new(t=class extends Fv{apply(e,t){const r=n.apply([s]),i=Jc([s]),a=n.apply([2*s]);return gv([r,i,a])}},t.className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Ra((()=>{if(3!==e.length)throw new ay(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t["training"]||!1,s=e[0],r=e[1],i=e[2],a=4;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=UC({ones:()=>Zc(s),rate:this.dropout,training:n,count:a,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,l=(e,t,n)=>t&&t[n]?Ua(t[n],e):e;let u=l(s,o,0),c=l(s,o,1),h=l(s,o,2),d=l(s,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=UC({ones:()=>Zc(r),rate:this.recurrentDropout,training:n,count:a,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let f=l(r,p,0),g=l(r,p,1),m=l(r,p,2),b=l(r,p,3);const x=3,[y,v,w,k]=Lh(this.kernel.read(),a,x),[I,C,S,$]=this.useBias?Lh(this.bias.read(),a):[null,null,null,null];u=this.inputConv(u,y,I,this.padding),c=this.inputConv(c,v,C,this.padding),h=this.inputConv(h,w,S,this.padding),d=this.inputConv(d,k,$,this.padding);const[N,T,E,R]=Lh(this.recurrentKernel.read(),a,x);f=this.recurrentConv(f,N),g=this.recurrentConv(g,T),m=this.recurrentConv(m,E),b=this.recurrentConv(b,R);const A=this.recurrentActivation.apply(La(u,f)),_=this.recurrentActivation.apply(La(c,g)),F=La(Ua(_,i),Ua(A,this.activation.apply(La(h,m)))),D=Ua(this.recurrentActivation.apply(La(d,b)),this.activation.apply(F));return[D,D,F]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=VC(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),s)}inputConv(e,t,n,s){const r=Cu(e,t,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Iv(r,n,this.dataFormat):r}recurrentConv(e,t){const n=1;return Cu(e,t,n,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}HC.className="ConvLSTM2DCell",no(HC);class jC extends GC{constructor(e){const t=new HC(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}jC.className="ConvLSTM2D",no(jC);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class KC extends gw{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let s=0;s<this.noiseShape.length;++s)n.push(null==this.noiseShape[s]?t[s]:this.noiseShape[s]);return n}call(e,t){return Ra((()=>{this.invokeCallHook(e,t);const n=nw(e);if(0<this.rate&&this.rate<1){const e=null!=t["training"]&&t["training"],s=this.getNoiseShape(n),r=Tv((()=>$v(n,this.rate,s,this.seed)),(()=>n),e);return r}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}KC.className="Dropout",no(KC);class qC extends KC{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}qC.className="SpatialDropout1D",no(qC);class XC extends gw{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Ny(this.units,"units"),this.activation=JI(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Qv(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Qv(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Ww(e.kernelConstraint),this.biasConstraint=Ww(e.biasConstraint),this.kernelRegularizer=sC(e.kernelRegularizer),this.biasRegularizer=sC(e.biasRegularizer),this.activityRegularizer=sC(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=sw(e);const t=e[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=sw(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return Ra((()=>{this.invokeCallHook(e,t);const n=nw(e),s=Ry(this.activation.getClassName());let r;return null!=s?r=yv(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=yv(n,this.kernel.read()),null!=this.bias&&(r=Iv(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:qI(this.activation),useBias:this.useBias,kernelInitializer:Zv(this.kernelInitializer),biasInitializer:Zv(this.biasInitializer),kernelRegularizer:tC(this.kernelRegularizer),biasRegularizer:tC(this.biasRegularizer),activityRegularizer:tC(this.activityRegularizer),kernelConstraint:Pw(this.kernelConstraint),biasConstraint:Pw(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}XC.className="Dense",no(XC);class JC extends gw{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=sw(e);for(const t of e.slice(1))if(null==t)throw new ay(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],ev(e,1)]}call(e,t){return Ra((()=>{this.invokeCallHook(e,t);let n=nw(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=nd(n,e)}return hv(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e["dataFormat"]=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}JC.className="Flatten",no(JC);class YC extends gw{constructor(e){super(e),this.supportsMasking=!0,this.activation=JI(e.activation)}call(e,t){return Ra((()=>{this.invokeCallHook(e,t);const n=nw(e);return this.activation.apply(n)}))}getConfig(){const e={activation:qI(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}YC.className="Activation",no(YC);class ZC extends gw{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Ra((()=>(e=nw(e),uv(e,this.n))))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}ZC.className="RepeatVector",no(ZC);class QC extends gw{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",s=t.slice();let r=1,i=null;for(let o=0;o<s.length;++o){const e=s[o];if(this.isUnknown(e)){if(null!==i)throw new ay("Can only specifiy one unknown dimension.");i=o}else r*=e}const a=ev(e);if(null!==i){if(0===r||a%r!==0)throw new ay(n);s[i]=a/r}else if(a!==r)throw new ay(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Ra((()=>{this.invokeCallHook(e,t);const n=nw(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return Xl(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}QC.className="Reshape",no(QC);class eS extends gw{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=sv(1,e.dims.length+1);if(!k(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new cw({ndim:this.dims.length+1})]}computeOutputShape(e){e=sw(e);const t=e.slice();return this.dims.forEach(((n,s)=>{t[s+1]=e[n]})),t}call(e,t){return nd(nw(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}eS.className="Permute",no(eS);class tS extends gw{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=nw(e),s=-1;return $l(jc(n,this.maskValue),s)}call(e,t){return Ra((()=>{this.invokeCallHook(e,t);const n=nw(e),s=-1,r=!0,i=$l(jc(n,this.maskValue),s,r),a=Ua(n,ka(i,n.dtype));return a}))}}tS.className="Masking",no(tS);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class nS extends gw{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(fy(e.inputLength))}this.inputDim=e.inputDim,Ny(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Ny(this.outputDim,"outputDim"),this.embeddingsInitializer=Qv(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=sC(e.embeddingsRegularizer),this.activityRegularizer=sC(e.activityRegularizer),this.embeddingsConstraint=Ww(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Ra((()=>this.maskZero?(e=nw(e),jc(e,qa(e))):null))}computeOutputShape(e){if(e=sw(e),null==this.inputLength)return[...e,this.outputDim];const t=fy(this.inputLength);if(t.length!==e.length-1)throw new ay(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){const r=t[s],i=e[s+1];if(null!=r&&null!=i&&r!==i)throw new ay(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==r&&(t[n]=i),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Ra((()=>{this.invokeCallHook(e,t);let n=nw(e);"int32"!==n.dtype&&(n=ov(n,"int32"));const s=vv(this.embeddings.read(),Xl(n,[n.size]));return Xl(s,sw(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Zv(this.embeddingsInitializer),embeddingsRegularizer:tC(this.embeddingsRegularizer),activityRegularizer:tC(this.activityRegularizer),embeddingsConstraint:Pw(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}nS.className="Embedding",no(nS);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class sS extends gw{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new oy}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){const r=e[e.length-t.length+s],i=t[s];if(null==r||null==i||r<0||i<0)n.push(null);else if(1===r)n.push(i);else if(1===i)n.push(r);else{if(r!==i)throw new ay("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[sw(e)]),e.length<2)throw new ay(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const r of e)null!=r&&null!==r[0]&&t.push(r[0]);if(t=Iy(t),t.length>1)throw new ay(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let r=1;r<e.length;++r){const t=null==e[r]?null:e[r].slice(1);n=this.computeElementwiseOpOutputShape(n,t)}const s=e.map((e=>e.length));-1===e.indexOf(null)&&1===Iy(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Ra((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const s=nv(n);for(let n of e){const e=n.rank;for(let t=0;t<s-e;++t)n=lv(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const i of e){const e=i.rank;if(null==e){const e=i.shape,s=e[0],r=e.slice(1).concat([s]);let a=Xl(i,[s].concat(ev(e.slice(1))));a=nd(a,[1,0]),a=Xl(a,r),t.push(a),n=!0}else if(e>1){const s=sv(1,e).concat([0]);t.push(nd(i,s)),n=!0}else t.push(i)}let s=this.mergeFunction(t);const r=s.rank;if(n)if(null==r){const e=s.shape,t=e.length,n=e[t-1],r=[n].concat(e.slice(0,e.length-1));s=Xl(nd(Xl(s,[-1,n]),[1,0]),r)}else if(r>1){const e=[r-1].concat(sv(0,r-1));s=nd(s,e)}return s}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let s=1;s<e.length;++s){const n=null==e[s]?null:e[s].slice(1);t=this.computeElementwiseOpOutputShape(t,n)}let n=[];for(const s of e)null!=s&&null!==s[0]&&n.push(s[0]);return n=Iy(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Ra((()=>{if(null==t)return null;if(!Array.isArray(t))throw new ay("`mask` should be an Array");if(!Array.isArray(e))throw new ay("`inputs` should be an Array");if(t.length!==e.length)throw new ay(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;t=t.map((e=>null==e?e:qu(e,0)));let n=t[0];for(let e=1;e<t.length-1;++e)n=vc(n,t[e]);return n}))}}class rS extends sS{constructor(e){super(e)}mergeFunction(e){return Ra((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=La(t,e[n]);return t}))}}rS.className="Add",no(rS);class iS extends sS{constructor(e){super(e)}mergeFunction(e){return Ra((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=Ua(t,e[n]);return t}))}}iS.className="Multiply",no(iS);class aS extends sS{constructor(e){super(e)}mergeFunction(e){return Ra((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=La(t,e[n]);return Ua(1/e.length,t)}))}}aS.className="Average",no(aS);class oS extends sS{constructor(e){super(e)}mergeFunction(e){return Ra((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=yo(t,e[n]);return t}))}}oS.className="Maximum",no(oS);class lS extends sS{constructor(e){super(e)}mergeFunction(e){return Ra((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=_c(t,e[n]);return t}))}}lS.className="Minimum",no(lS);class uS extends sS{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new ay("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const s of e)if(null!=s){t=!1;break}if(t)return;const n=[];for(let s=0;s<e.length;++s){const t=e[s].slice();t.splice(this.axis,1);let r=!1;for(const e of n)if(k(e,t)){r=!0;break}r||n.push(t)}if(n.length>1)throw new ay("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Ra((()=>gv(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new ay("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const r of t.slice(1)){if(null==n[s]||null==r[s]){n[s]=null;break}n[s]+=r[s]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new ay("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new ay("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new ay(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Ra((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const s=[];for(let i=0;i<e.length;++i)null==t[i]?s.push(ka(Zc(e[i]),"bool")):t[i].rank<e[i].rank?s.push(qu(t[i],-1)):s.push(t[i]);const r=fu(s,this.axis);return Cl(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function cS(e,t){while(e<0)e+=t;return e}function hS(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new oy("batchDot is not implemented for tensors of 4D or higher rank yet");if(x(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),x(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"===typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new oy("batchDot is not implemented for complex64-type Tensors yet.");const s=e.shape.length,r=t.shape.length;null==n&&(n=[s-1,r-2]);const i=n;return Ra((()=>{let n,a;if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=Xl(t,t.shape.concat(e))}else if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=Xl(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)a=i[0]===i[1]?mc(Ua(e,t),i[0]):mc(Ua(nd(e,[1,0]),t),i[1]);else{const n=i[0]!==e.shape.length-1,s=i[1]===t.shape.length-1;a=kc(e,t,n,s)}if(n>0){let e;e=s>r?s+r-3:s-1;const t=[];for(let s=e;s<e+n;++s)t.push(s);a=zh(a,t)}return 1===a.shape.length&&(a=qu(a,1)),a}))}uS.className="Concatenate",no(uS);class dS extends sS{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){x(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new oy("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new ay(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(2!==e.length)throw new ay(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],s=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>cS(t,e[n].shape.length))):[cS(this.axes,n.shape.length),cS(this.axes,s.shape.length)],this.normalize&&(n=tk(n,t[0]),s=tk(s,t[1])),hS(n,s,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[cS(this.axes,e.length),cS(this.axes,t.length)],n}computeOutputShape(e){x(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new oy("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}dS.className="Dot",no(dS);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class pS extends gw{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Ra((()=>{this.invokeCallHook(e,t);const n=nw(e),s=()=>La(xv(n.shape,0,this.stddev),n),r=Tv(s,(()=>n),t["training"]||!1);return r}))}}pS.className="GaussianNoise",no(pS);class fS extends gw{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Ra((()=>{this.invokeCallHook(e,t);const n=nw(e);if(this.rate>0&&this.rate<1){const e=()=>{const e=Math.sqrt(this.rate/(1-this.rate));return Ua(n,xv(n.shape,1,e))};return Tv(e,(()=>n),t["training"]||!1)}return n}))}}fS.className="GaussianDropout",no(fS);class gS extends gw{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||nw(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Ra((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),s=()=>{const t=nw(e),s=1.6732632423543772,r=1.0507009873554805,i=-s*r;let a=ac(uh(n),this.rate);a=ov(a,"float32");const o=((1-this.rate)*(1+this.rate*i**2))**-.5,l=-o*i*this.rate,u=La(Ua(t,a),Ua(La(a,-1),i));return La(Ua(u,o),l)};return Tv(s,(()=>nw(e)),t["training"]||!1)}return e}))}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function mS(e,t,n,s,r,i=.001){let a;if(2===e.rank)a=ru(e,t,n,s,r,i);else if(3===e.rank)a=au(e,t,n,s,r,i);else{if(4!==e.rank)throw new oy(`batchNormalization is not implemented for array of rank ${e.rank} yet`);a=lu(e,t,n,s,r,i)}return a}function bS(e,t,n,s,r=.001){return Ra((()=>{const i=Uc(e,s),a=i.mean,o=i.variance,l=mS(e,a,o,n,t,r);return[l,a,o]}))}function xS(e,t,n,s,r=.001){return Ra((()=>{const i=Uc(e,s),a=i.mean,o=i.variance,l=[];for(const t of sv(0,e.rank))-1!==s.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=Xl(a,l),c=Xl(o,l),h=null==t?null:Xl(t,l),d=null==n?null:Xl(n,l),p=mS(e,u,c,d,h,r);return[p,a,o]}))}function yS(e,t,n,s,r=.001){return k(s.slice().sort(),sv(0,e.rank-1))?bS(e,t,n,s,r):xS(e,t,n,s,r)}gS.className="AlphaDropout",no(gS);class vS extends gw{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Qv(e.betaInitializer||"zeros"),this.gammaInitializer=Qv(e.gammaInitializer||"ones"),this.movingMeanInitializer=Qv(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Qv(e.movingVarianceInitializer||"ones"),this.betaConstraint=Ww(e.betaConstraint),this.gammaConstraint=Ww(e.gammaConstraint),this.betaRegularizer=sC(e.betaRegularizer),this.gammaRegularizer=sC(e.gammaRegularizer)}build(e){e=sw(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new ay(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new cw({ndim:e.length,axes:{[t]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Ra((()=>{const n=null!=t["training"]&&t["training"],s=nw(e),r=s.shape,i=r.length,a=sv(0,i),o=this.axis>=0?this.axis:this.axis+i;a.splice(o,1);const l=cy(1,i);l[o]=r[o];const u=a.slice();u.sort();const c=!k(u,sv(0,i).slice(0,i-1)),h=()=>{if(c){const e=Xl(this.movingMean.read(),l),t=Xl(this.movingVariance.read(),l),n=this.center?Xl(this.beta.read(),l):null,r=this.scale?Xl(this.gamma.read(),l):null;return mS(s,e,t,n,r,this.epsilon)}return mS(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)};if(!n)return h();const[d,p,f]=yS(s,this.gamma.read(),this.beta.read(),a,this.epsilon),g=(e,t,n)=>{Ra((()=>{const s=1-n,r=e.read(),i=Ua(co(r,t),s);e.write(co(r,i))}))},m=()=>{g(this.movingMean,p,this.momentum),g(this.movingVariance,f,this.momentum)};return m(),d}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Zv(this.betaInitializer),gammaInitializer:Zv(this.gammaInitializer),movingMeanInitializer:Zv(this.movingMeanInitializer),movingVarianceInitializer:Zv(this.movingVarianceInitializer),betaRegularizer:tC(this.betaRegularizer),gammaRegularizer:tC(this.gammaRegularizer),betaConstraint:Pw(this.betaConstraint),gammaConstraint:Pw(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}vS.className="BatchNormalization",no(vS);class wS extends gw{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"===typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Qv(e.betaInitializer||"zeros"),this.gammaInitializer=Qv(e.gammaInitializer||"ones"),this.betaRegularizer=sC(e.betaRegularizer),this.gammaRegularizer=sC(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=sw(e);const t=e.length;"number"===typeof this.axis&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==Iy(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t])),s=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,s):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,s):this.beta=null,this.built=!0}call(e,t){const n=nw(e),s=n.shape,r=s.length;return Ra((()=>{const e=!0;let{mean:t,variance:i}=Uc(n,this.axis,e);const a=cy(1,r);for(const n of this.axis)a[n]=s[n];const o=e=>null!=e&&e.shape.length!==r?Xl(e,a):e;let l=this.scale?o(this.gamma.read()):null,u=this.center?o(this.beta.read()):null;const c=[],h=[];for(let n=0;n<r;++n)-1!==this.axis.indexOf(n)?(c.push(s[n]),h.push(1)):(c.push(1),h.push(s[n]));return t=Ju(t,c),i=Ju(i,c),null!=l&&(l=Ju(l,h)),null!=u&&(u=Ju(u,h)),mS(n,t,i,u,l,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Zv(this.betaInitializer),gammaInitializer:Zv(this.gammaInitializer),betaRegularizer:tC(this.betaRegularizer),gammaRegularizer:tC(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}function kS(e,t,n){return Ra((()=>{if(4!==e.rank)throw new ay(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new ay("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n=av()),"channelsLast"!==n&&"channelsFirst"!==n)throw new ay(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return s="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],eh(e,s)}))}wS.className="LayerNormalization",no(wS);class IS extends gw{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?av():e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"===typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new ay(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"===typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new ay(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new ay(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new cw({ndim:4})]}computeOutputShape(e){let t,n;return e=sw(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Ra((()=>kS(nw(e),this.padding,this.dataFormat)))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function CS(e,t,n,s,r,i){return Ra((()=>{let a;Wy(r),Gy(i),Vy(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==r&&(r=av()),null==i&&(i="max"),e=pC(e,r);const o="same"===s?"same":"valid";return a="max"===i?Cc(e,t,n,o):Yl(e,t,n,o),"channelsFirst"===r&&(a=nd(a,[0,3,1,2])),a}))}function SS(e,t,n,s,r,i){return Ra((()=>{let a;Wy(r),Gy(i),Vy(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==r&&(r=av()),null==i&&(i="max"),e=fC(e,r);const o="same"===s?"same":"valid";return a="max"===i?$c(e,t,n,o):Ql(e,t,n,o),"channelsFirst"===r&&(a=nd(a,[0,4,1,2,3])),a}))}IS.className="ZeroPadding2D",no(IS);class $S extends gw{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"===typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!==typeof e.poolSize[0])throw new ay(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Ny(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"===typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!==typeof e.strides[0])throw new ay(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Ny(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Vy(this.padding),this.inputSpec=[new cw({ndim:3})]}computeOutputShape(e){e=sw(e);const t=hC(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Ra((()=>{this.invokeCallHook(e,t),e=lv(nw(e),2);const n=this.poolingFunction(nw(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return zh(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class NS extends $S{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Wy(r),Vy(s),CS(e,t,n,s,r,"max")}}NS.className="MaxPooling1D",no(NS);class TS extends $S{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Wy(r),Vy(s),CS(e,t,n,s,r,"avg")}}TS.className="AveragePooling1D",no(TS);class ES extends gw{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new ay(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Ny(this.poolSize,"poolSize"),Ny(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Wy(this.dataFormat),Vy(this.padding),this.inputSpec=[new cw({ndim:4})]}computeOutputShape(e){e=sw(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=hC(t,this.poolSize[0],this.padding,this.strides[0]),n=hC(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Ra((()=>(this.invokeCallHook(e,t),this.poolingFunction(nw(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class RS extends ES{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Wy(r),Vy(s),CS(e,t,n,s,r,"max")}}RS.className="MaxPooling2D",no(RS);class AS extends ES{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Wy(r),Vy(s),CS(e,t,n,s,r,"avg")}}AS.className="AveragePooling2D",no(AS);class _S extends gw{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new ay(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Ny(this.poolSize,"poolSize"),Ny(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Wy(this.dataFormat),Vy(this.padding),this.inputSpec=[new cw({ndim:5})]}computeOutputShape(e){e=sw(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[4]:e[3];return t=hC(t,this.poolSize[0],this.padding,this.strides[0]),n=hC(n,this.poolSize[1],this.padding,this.strides[1]),s=hC(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return Ra((()=>(this.invokeCallHook(e,t),this.poolingFunction(nw(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class FS extends _S{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Wy(r),Vy(s),SS(e,t,n,s,r,"max")}}FS.className="MaxPooling3D",no(FS);class DS extends _S{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Wy(r),Vy(s),SS(e,t,n,s,r,"avg")}}DS.className="AveragePooling3D",no(DS);class OS extends gw{constructor(e){super(e),this.inputSpec=[new cw({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new oy}}class LS extends OS{constructor(e){super(e||{})}call(e,t){return Ra((()=>{const t=nw(e);return Tc(t,1)}))}}LS.className="GlobalAveragePooling1D",no(LS);class MS extends OS{constructor(e){super(e||{})}call(e,t){return Ra((()=>{const t=nw(e);return fc(t,1)}))}}MS.className="GlobalMaxPooling1D",no(MS);class zS extends gw{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Wy(this.dataFormat),this.inputSpec=[new cw({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new oy}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class PS extends zS{call(e,t){return Ra((()=>{const t=nw(e);return"channelsLast"===this.dataFormat?Tc(t,[1,2]):Tc(t,[2,3])}))}}PS.className="GlobalAveragePooling2D",no(PS);class BS extends zS{call(e,t){return Ra((()=>{const t=nw(e);return"channelsLast"===this.dataFormat?fc(t,[1,2]):fc(t,[2,3])}))}}BS.className="GlobalMaxPooling2D",no(BS);
/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class WS extends gw{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const s=t["layer"],r=ek(s,n);delete t["layer"];const i={layer:r};return Object.assign(i,t),new e(i)}}class US extends WS{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=sw(e),e.length<3)throw new ay(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=sw(e);const t=[e[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return Ra((()=>{e=nw(e);const n=(e,n)=>{const s=nw(this.layer.call(e,t));return[s,[]]},s=_C(n,e,[],!1,null,null,!1,!0),r=s[1];return r}))}}function VS(e){Sy(Py,"BidirectionalMergeMode",e)}US.className="TimeDistributed",no(US);const GS="concat";class HS extends WS{constructor(e){super(e);const t=e.layer.getConfig(),n={};n["className"]=e.layer.getClassName(),n["config"]=t,this.forwardLayer=ek(n),t["goBackwards"]=!0!==t["goBackwards"];const s={};if(s["className"]=e.layer.getClassName(),s["config"]=t,this.backwardLayer=ek(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?GS:e.mergeMode,VS(this.mergeMode),e.weights)throw new oy("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,s,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(s=r.slice(1),t=r[0]):t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[t].concat(s).concat(s.slice()):py(n)}apply(e,t){let n=null==t?null:t["initialState"],s=null==t?null:t["constants"];null==t&&(t={});const r=AC(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==s)return super.apply(e,t);const i=[],a=[];if(null!=n){const e=n.length;if(e%2>0)throw new ay("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t["initialState"]=n,i.push(...n);const s=n.map((e=>new cw({shape:e.shape})));this.forwardLayer.stateSpec=s.slice(0,e/2),this.backwardLayer.stateSpec=s.slice(e/2),a.push(...s)}if(null!=s)throw new oy("Support for constants in Bidirectional layers is not implemented yet.");const o=i[0]instanceof hw;for(const l of i)if(l instanceof hw!==o)throw new ay("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(i),s=this.inputSpec.concat(a),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return Ra((()=>{const n=t["initialState"];let s,r,i,a;if(null==n)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const i=n.slice(0,n.length/2),a=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:i})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:a}))}return this.returnState&&(Array.isArray(s)&&(i=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=fh(r,1)),"concat"===this.mergeMode?a=gv([s,r]):"sum"===this.mergeMode?a=La(s,r):"ave"===this.mergeMode?a=Ua(.5,La(s,r)):"mul"===this.mergeMode?a=Ua(s,r):null==this.mergeMode&&(a=[s,r]),this.returnState?null==this.mergeMode?a.concat(i):[a].concat(i):a}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ky(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Ky(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states,t=e.map((e=>null));return Array.isArray(n)?n.concat(t).concat(t):[n].concat(t).concat(t)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=ek(t["layer"]);if(delete t["layer"],null!=t["numConstants"])throw new oy("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=t;return s["layer"]=n,new e(s)}}HS.className="Bidirectional",no(HS);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class jS extends gw{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Ra((()=>(e=nw(e),"float32"!==e.dtype&&(e=ov(e,"float32")),La(Ua(e,this.scale),this.offset))))}}jS.className="Rescaling",no(jS);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const{resizeBilinear:KS,cropAndResize:qS}=Kp;class XS extends gw{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,s,r,i,a,o){return Ra((()=>{let l,u=!1;const c=t/i,h=n/a,d=(s+t)/i,p=(r+n)/a,f=[c,h,d,p],g=[];3===e.rank?(u=!0,l=Bh([e])):l=e;for(let e=0;e<l.shape[0];e++)g.push(f);const m=bi(g,[g.length,4]),b=ch(0,g.length,1,"int32"),x=[s,r],y=qS(l,m,b,x,"nearest");return ov(u?nw(Kh(y)):y,o)}))}upsize(e,t,n,s){return Ra((()=>{const r=KS(e,[t,n]);return ov(r,s)}))}call(e,t){return Ra((()=>{const t=nw(e),n=t.dtype,s=t.shape,r=s[s.length-3],i=s[s.length-2];let a=0;r!==this.height&&(a=Math.floor((r-this.height)/2));let o=0;return i!==this.width&&(o=Math.floor((i-this.width)/2),0===o&&(o=1)),a>=0&&o>=0?this.centerCrop(t,a,o,this.height,this.width,r,i,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=sw(e);const t=e.length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}}
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
function JS(e,t,n,s){let r=nw(e);if("int32"!==r.dtype&&(r=ov(r,"int32")),"int"===t)return r;const i=r.shape;if(0===r.rank&&(r=qu(r,-1)),"oneHot"===t&&1!==r.shape[r.shape.length-1]&&(r=qu(r,-1)),r.rank>2)throw new ay(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${i} which would result in output rank ${r.rank}.`);const a=["multiHot","oneHot"].includes(t),o=r;let l;if(l=zu(o,"undefined"!==typeof s&&"count"===t?s:[],n,a),"tfIdf"!==t)return l;if(s)return Ua(l,s);throw new ay("When outputMode is 'tfIdf', weights must be provided.")}XS.className="CenterCrop",no(XS);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class YS extends gw{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=sw(e),null==e?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return Ra((()=>{let n;if(e=nw(e),"int32"!==e.dtype&&(e=ov(e,"int32")),"undefined"!==typeof t["countWeights"]){if("count"!==this.outputMode)throw new ay(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t["countWeights"]}`);n=nw(t["countWeights"])}const s=fc(e),r=Rc(e),i=rc(this.numTokens,s).bufferSync().get(0),a=ac(r,0).bufferSync().get(0);if(!i||!a)throw new ay(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return JS(e,this.outputMode,this.numTokens,n)}))}}YS.className="CategoryEncoding",no(YS);
/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const ZS=["bilinear","nearest"],QS=new Set(ZS);class e$ extends gw{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!QS.has(e.interpolation))throw new ay(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){e=sw(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return Ra((()=>{const t=[this.height,this.width];if("bilinear"===this.interpolation)return Kp.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return Kp.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...QS]} are supported`)}))}}e$.className="Resizing",no(e$);
/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class t${constructor(e){this.seed=e}next(){if(void 0!==this.seed)return this.seed++}}t$.className="RandomSeed";
/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
class n$ extends gw{constructor(e){super(e),this.randomGenerator=new t$(e.seed)}getConfig(){const e={seed:this.randomGenerator.seed},t=super.getConfig();return Object.assign(e,t),e}}n$.className="BaseRandomLayer";
/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */
const s$=["bilinear","nearest"],r$=new Set(s$);class i$ extends n${constructor(e){super(e);const{factor:t,interpolation:n="bilinear"}=e;if(this.factor=t,Array.isArray(this.factor)&&2===this.factor.length)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else{if(Array.isArray(this.factor)||!(this.factor>0))throw new ay(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);this.widthLower=-this.factor,this.widthUpper=this.factor}if(this.widthLower<-1||this.widthUpper<-1)throw new ay(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new ay(`factor cannot have upper bound less than lower bound.\n        Got upper bound: ${this.widthUpper}.\n        Got lower bound: ${this.widthLower}\n      `);if(n){if(!r$.has(n))throw new ay(`Invalid interpolation parameter: ${n} is not implemented`);this.interpolation=n}}getConfig(){const e={factor:this.factor,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=sw(e);const t=e[2];return[this.imgHeight,-1,t]}call(e,t){return Ra((()=>{const t=nw(e);this.imgHeight=t.shape[t.shape.length-3];const n=t.shape[t.shape.length-2];this.widthFactor=uh([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let s=this.widthFactor.dataSync()[0]*n;s=Math.round(s);const r=[this.imgHeight,s];switch(this.interpolation){case"bilinear":return Kp.resizeBilinear(e,r);case"nearest":return Kp.resizeNearestNeighbor(e,r);default:throw new Error(`Interpolation is ${this.interpolation}\n          but only ${[...r$]} are supported`)}}))}}i$.className="RandomWidth",no(i$);const a$=ie();
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
var o$,l$;a$.registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e["DT_INVALID"]=0]="DT_INVALID",e[e["DT_FLOAT"]=1]="DT_FLOAT",e[e["DT_DOUBLE"]=2]="DT_DOUBLE",e[e["DT_INT32"]=3]="DT_INT32",e[e["DT_UINT8"]=4]="DT_UINT8",e[e["DT_INT16"]=5]="DT_INT16",e[e["DT_INT8"]=6]="DT_INT8",e[e["DT_STRING"]=7]="DT_STRING",e[e["DT_COMPLEX64"]=8]="DT_COMPLEX64",e[e["DT_INT64"]=9]="DT_INT64",e[e["DT_BOOL"]=10]="DT_BOOL",e[e["DT_QINT8"]=11]="DT_QINT8",e[e["DT_QUINT8"]=12]="DT_QUINT8",e[e["DT_QINT32"]=13]="DT_QINT32",e[e["DT_BFLOAT16"]=14]="DT_BFLOAT16",e[e["DT_QINT16"]=15]="DT_QINT16",e[e["DT_QUINT16"]=16]="DT_QUINT16",e[e["DT_UINT16"]=17]="DT_UINT16",e[e["DT_COMPLEX128"]=18]="DT_COMPLEX128",e[e["DT_HALF"]=19]="DT_HALF",e[e["DT_RESOURCE"]=20]="DT_RESOURCE",e[e["DT_VARIANT"]=21]="DT_VARIANT",e[e["DT_UINT32"]=22]="DT_UINT32",e[e["DT_UINT64"]=23]="DT_UINT64",e[e["DT_FLOAT_REF"]=101]="DT_FLOAT_REF",e[e["DT_DOUBLE_REF"]=102]="DT_DOUBLE_REF",e[e["DT_INT32_REF"]=103]="DT_INT32_REF",e[e["DT_UINT8_REF"]=104]="DT_UINT8_REF",e[e["DT_INT16_REF"]=105]="DT_INT16_REF",e[e["DT_INT8_REF"]=106]="DT_INT8_REF",e[e["DT_STRING_REF"]=107]="DT_STRING_REF",e[e["DT_COMPLEX64_REF"]=108]="DT_COMPLEX64_REF",e[e["DT_INT64_REF"]=109]="DT_INT64_REF",e[e["DT_BOOL_REF"]=110]="DT_BOOL_REF",e[e["DT_QINT8_REF"]=111]="DT_QINT8_REF",e[e["DT_QUINT8_REF"]=112]="DT_QUINT8_REF",e[e["DT_QINT32_REF"]=113]="DT_QINT32_REF",e[e["DT_BFLOAT16_REF"]=114]="DT_BFLOAT16_REF",e[e["DT_QINT16_REF"]=115]="DT_QINT16_REF",e[e["DT_QUINT16_REF"]=116]="DT_QUINT16_REF",e[e["DT_UINT16_REF"]=117]="DT_UINT16_REF",e[e["DT_COMPLEX128_REF"]=118]="DT_COMPLEX128_REF",e[e["DT_HALF_REF"]=119]="DT_HALF_REF",e[e["DT_RESOURCE_REF"]=120]="DT_RESOURCE_REF",e[e["DT_VARIANT_REF"]=121]="DT_VARIANT_REF",e[e["DT_UINT32_REF"]=122]="DT_UINT32_REF",e[e["DT_UINT64_REF"]=123]="DT_UINT64_REF"}(o$||(o$={})),function(e){let t;(function(e){e[e["LEGACY"]=0]="LEGACY",e[e["V1"]=1]="V1",e[e["V2"]=2]="V2"})(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(l$||(l$={}));new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
function u$(e,t){return c$(e,t)}function c$(e,t,n=new Map,s=new Set){if(null==e)return null;if("function"===typeof Blob&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(f$(e)){const r=Array.isArray(e)?[]:{};s.add(e);for(const i in e){const a=e[i],o=c$(a,t,n,s);r[i]=o}return s.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,r.value),r.value}function h$(e,t=p$){return d$(e,t)}function d$(e,t,n=new Set){const s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(f$(s)){const r=Array.isArray(s)?[]:{};n.add(s);for(const i in s){const s=e.map((e=>e[i])),a=d$(s,t,n);r[i]=a}return n.delete(s),r}throw new Error(`Can't recurse into non-iterable type: ${s}`)}return r.value}function p$(e){return null===e?null:f$(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}function f$(e){let t=!1;if(ie().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:s}=n(4977);t=e instanceof s}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"===typeof e&&!(e instanceof Ar)&&!(e instanceof Promise)&&!t)}function g$(e){return null==e||m$(e)||Array.isArray(e)||"object"===typeof e&&e instanceof Ar||lr(e)}function m$(e){return null===e||"object"!==typeof e&&"function"!==typeof e}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
function b$(e){return u$(e,x$)}function x$(e){return e instanceof Ar?{value:e.clone(),recurse:!1}:f$(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class y${constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){while(e<0)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class v$ extends y${constructor(){super(v$.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let s=0;s<n;s++)t[s]=this.get(this.wrap(this.begin+s));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
function w$(e){return new S$(e)}function k$(e){return new $$(e)}function I$(e,t){return new M$(e,t)}v$.INITIAL_CAPACITY=32;class C${async toArray(){const e=[];let t=await this.next();while(!t.done)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();while(!n.done)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();while(!e.done)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);while(!t.done&&n)t=await this.next(),n=e(t.value)}handleErrors(e){return new F$(this,e)}filter(e){return new A$(this,e)}map(e){return new _$(this,e)}mapAsync(e){return new D$(this,e)}serialMapAsync(e){return new D$(this,e).serial()}flatmap(e){return new L$(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new R$(this,e,t)}columnMajorBatch(e,t=!0,n=p$){const s=this.rowMajorBatch(e,t);return s.map((e=>h$(e,n)))}concatenate(e,t){return new M$(w$([this,e]),t)}take(e){return e<0||null==e?this:new E$(this,e)}skip(e){return e<0||null==e?this:new T$(this,e)}prefetch(e){return new P$(this,e)}shuffle(e,t){return new B$(this,e,t)}serial(){return new N$(this)}}class S$ extends C${constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:b$(e),done:!1}}}class $$ extends C${constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class N$ extends C${constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class T$ extends C${constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){while(this.count++<this.maxCount){const e=await this.upstream.next();if(e.done)return e;Aa(e.value)}return this.upstream.next()}}class E$ extends C${constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class R$ extends C${constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];while(e.length<this.batchSize){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class A$ extends C${constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){while(1){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Aa(e.value)}}}class _$ extends C${constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=jr(e.value),n=this.transform(e.value),s=jr(n);for(const r of t)Hr(r,s)||r.dispose();return{value:n,done:!1}}}class F$ extends C${constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){while(1)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class D$ extends C${constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=jr(e.value),n=await this.transform(e.value),s=jr(n);for(const r of t)Hr(r,s)||r.dispose();return{value:n,done:!1}}}class O$ extends C${constructor(){super(),this.outputQueue=new v$,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){while(0===this.outputQueue.length())if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class L$ extends O${constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=jr(e.value),n=this.transform(e.value),s=jr(n);this.outputQueue.pushAll(n);for(const r of t)Hr(r,s)||r.dispose();return!0}}class M$ extends C${constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){const e="TODO: fill in upstream of chained summaries";return`${e} -> Chained`}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var z$;(function(e){e[e["FAIL"]=0]="FAIL",e[e["SHORTEST"]=1]="SHORTEST",e[e["LONGEST"]=2]="LONGEST"})(z$||(z$={}));class P$ extends C${constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new y$(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){while(!this.buffer.isFull()){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class B$ extends P${constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=sh.alea(n||ir().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){this.upstreamExhausted||this.refill();while(!this.buffer.isEmpty()){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
class W${constructor(){this.size=null}batch(e,t=!0){const n=this;let s;return x(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),s=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),U$((async()=>(await n.iterator()).columnMajorBatch(e,t,V$)),s)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,U$((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,U$((async()=>(await t.iterator()).filter((t=>Ra((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return U$((async()=>(await t.iterator()).map((t=>Ra((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return U$((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return U$((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,U$((async()=>{const n=k$((async()=>({value:await t.iterator(),done:!1})));return I$(n.take(e))}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,U$((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,r=sh.alea(t||ir().toString());return U$((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await s.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,U$((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function U$(e,t=null){return new class extends W${constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function V$(e){if(null===e)return null;const t=e[0];if(g$(t)){const t=G$(e);return{value:t,recurse:!1}}return{value:null,recurse:!0}}function G$(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Ar?Bh(e):bi(e)}W$.MAX_BUFFER_SIZE=1e4;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */
Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function H$(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&x("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const j$=ug;class K$ extends h{nextDataId(){return K$.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new c(this,Ta())}write(e,t,n){this.firstUse&&(this.firstUse=!1,ie().get("IS_NODE")&&$s("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));const s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&M(n[0])){const r=n.map((e=>ar(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){const t=this.data.get(e);return t.refCount}return 0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return Nf(e,t)}return j(this.data.get(e).values,t)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>or(e)));return va(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return va(e.shape,e.dtype,t)}makeOutput(e,t,n){return Ta().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=ir();e();const n=ir()-t;return{kernelMs:n}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){H$([e],"where");const t=this.readSync(e.dataId);return j$(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}K$.nextDataId=0;
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function q$(e){return(t,n,s)=>{const r=A(n,t.length);for(let i=0;i<t.length;++i)r[i]=e(t[i],s);return r}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function X$(e,t,n){const s=q$(t);return J$(e,s,n)}function J$(e,t,n){return({inputs:s,attrs:r,backend:i})=>{const{x:a}=s;H$(a,e);const o=i,l=o.data.get(a.dataId).values;let u;if("string"===a.dtype){if(!Array.isArray(l))throw new Error("String tensor's value was not an instance of Array");u=og(l)}else u=l;const c=n||a.dtype,h=t(u,c,r);return o.makeTensorInfo(a.shape,c,h)}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
Fa("cpu",(()=>new K$),1);
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Y$=X$(ht,(e=>e>=0?e:Math.exp(e)-1)),Z$={kernelName:ht,backendName:"cpu",kernelFunc:Y$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Q$(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const eN={kernelName:Tt,backendName:"cpu",kernelFunc:Q$};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tN(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:i}=s;H$([r],"leakyRelu");const a=w(r.shape),o=n.data.get(r.dataId).values,l=R("float32",a);for(let u=0;u<o.length;u++)l[u]=o[u]<0?i*o[u]:o[u];return n.makeTensorInfo(r.shape,"float32",l)}const nN={kernelName:Dt,backendName:"cpu",kernelFunc:tN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sN(e){return(t,n,s,r,i)=>{const a=bo(t,n),o=a.length,l=V(a),u=w(a),c=R(i,u),h=t.length,d=n.length,p=V(t),f=V(n),g=go(t,a),m=go(n,a);if(g.length+m.length===0)for(let b=0;b<c.length;++b)c[b]=e(s[b%s.length],r[b%r.length]);else for(let b=0;b<c.length;++b){const t=Z(b,o,l),n=t.slice(-h);g.forEach((e=>n[e]=0));const i=Y(n,h,p),a=t.slice(-d);m.forEach((e=>a[e]=0));const u=Y(a,d,f);c[b]=e(s[i],r[u])}return[c,a]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const rN=sN(((e,t)=>e<0?t*e:e));function iN(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t;H$([s,r],"prelu");const i=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,[o,l]=rN(s.shape,r.shape,i,a,"float32");return n.makeTensorInfo(l,"float32",o)}const aN={kernelName:bn,backendName:"cpu",kernelFunc:iN},oN=X$(Sn,(e=>Math.max(0,e))),lN={kernelName:Sn,backendName:"cpu",kernelFunc:oN},uN=X$(An,(e=>Math.min(Math.max(0,e),6))),cN={kernelName:An,backendName:"cpu",kernelFunc:uN},hN=q$((e=>1/(1+Math.exp(-e)))),dN=X$(Gn,(e=>1/(1+Math.exp(-e)))),pN={kernelName:Gn,backendName:"cpu",kernelFunc:dN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fN(e,t,n,s,r){if("linear"===n)return Q$({inputs:{x:t},backend:e});if("relu"===n)return oN({inputs:{x:t},backend:e});if("elu"===n)return Y$({inputs:{x:t},backend:e});if("relu6"===n)return uN({inputs:{x:t},backend:e});if("prelu"===n)return iN({inputs:{x:t,alpha:s},backend:e});if("leakyrelu"===n)return tN({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return dN({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gN(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,i=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64"),l=n.data.get(o.dataId);return l.complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",i),imag:n.makeTensorInfo(r.shape,"float32",a)},o}const mN={kernelName:Pe,backendName:"cpu",kernelFunc:gN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bN(e,t,n="float32"){if("complex64"===n){const n=bN(e,t,"float32"),s=bN(e,t,"float32");return gN({inputs:{real:n,imag:s},backend:e})}const s=q(w(t),n);return e.makeTensorInfo(t,n,s)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xN(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,i=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,i)}const yN={kernelName:In,backendName:"cpu",kernelFunc:xN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vN(e,t,n,s){if("int32"===s){const n=Int32Array.from(e);return[t,"int32",n]}if("bool"===s){const s=rr([0],n),[r,i]=sN(((e,t)=>e!==t?1:0))(t,[],e,s,"bool");return[i,"bool",r]}throw new Error(`Error in Cast: failed to cast ${n} to ${s}`)}function wN(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:i}=s;if("complex64"===i){if("complex64"===r.dtype)return Q$({inputs:{x:r},backend:n});const e=bN(n,r.shape,r.dtype),t=wN({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),s=gN({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),s}if("complex64"===r.dtype){const e=xN({inputs:{input:r},backend:n}),t=wN({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!D(r.dtype,i)){const e=Q$({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}const a=n.data.get(r.dataId).values,[o,l,u]=vN(a,r.shape,r.dtype,i);return n.makeTensorInfo(o,l,u)}const kN={kernelName:Le,backendName:"cpu",kernelFunc:wN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function IN(e,t,n,s){return null==n?({inputs:n,backend:r})=>{const{a:i,b:a}=n,o=r;H$([i,a],e);const l=o.data.get(i.dataId).values,u=o.data.get(a.dataId).values,c="string"===i.dtype?og(l):l,h="string"===i.dtype?og(u):u,d=s||i.dtype,[p,f]=t(i.shape,a.shape,c,h,d);return o.makeTensorInfo(f,d,p)}:({inputs:e,backend:r})=>{const{a:i,b:a}=e,o=r;if("complex64"===i.dtype||"complex64"===a.dtype){const e=wN({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),s=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,l=o.data.get(s.dataId).values,u=o.data.get(r.dataId).values,c=wN({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,g=o.data.get(p.dataId).values,[m,b,x]=n(i.shape,a.shape,l,u,f,g),y=o.makeTensorInfo(x,"float32",m),v=o.makeTensorInfo(x,"float32",b),w=gN({inputs:{real:y,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(v),w}{const e=o.data.get(i.dataId).values,n=o.data.get(a.dataId).values,r=s||i.dtype,[l,u]=t(i.shape,a.shape,e,n,r);return o.makeTensorInfo(u,r,l)}}}function CN(e){return(t,n,s,r,i,a)=>{const o=bo(t,n),l=w(o),u=o.length,c=V(o),h=R("float32",l),d=R("float32",l),p=go(t,o),f=go(n,o),g=Nf(s,r),m=Nf(i,a),b=t.length,x=V(t),y=n.length,v=V(n);if(p.length+f.length===0)for(let w=0;w<h.length;w++){const t=w%g.length,n=w%m.length,s=e(g[2*t],g[2*t+1],m[2*n],m[2*n+1]);h[w]=s.real,d[w]=s.imag}else for(let w=0;w<h.length;w++){const t=Z(w,u,c),n=t.slice(-b);p.forEach((e=>n[e]=0));const s=Y(n,b,x),r=t.slice(-y);f.forEach((e=>r[e]=0));const i=Y(r,y,v),a=e(g[2*s],g[2*s+1],m[2*i],m[2*i+1]);h[w]=a.real,d[w]=a.imag}return[h,d,o]}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const SN=sN(((e,t)=>e+t)),$N=CN(((e,t,n,s)=>({real:e+n,imag:t+s}))),NN=IN(ge,SN,$N),TN={kernelName:ge,backendName:"cpu",kernelFunc:NN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function EN(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:i}=s,a=w(r.shape),o=N(i,a),l=w(o);x(a===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);const u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}const RN={kernelName:$n,backendName:"cpu",kernelFunc:EN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function AN(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:i}=t,{transposeA:a,transposeB:o}=s;H$([r,i],"matMul");const l=r.shape.length,u=i.shape.length,c=a?r.shape[l-2]:r.shape[l-1],h=o?i.shape[u-1]:i.shape[u-2],d=a?r.shape[l-1]:r.shape[l-2],p=o?i.shape[u-2]:i.shape[u-1],f=r.shape.slice(0,-2),g=i.shape.slice(0,-2),m=w(f),b=w(g),y=bo(r.shape.slice(0,-2),i.shape.slice(0,-2)),v=y.concat([d,p]);x(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${i.shape} and transposeA=${a} and transposeB=${o} must match.`));const k=a?[m,c,d]:[m,d,c],I=o?[b,p,h]:[b,h,p],C=EN({inputs:{x:r},backend:n,attrs:{shape:k}}),S=EN({inputs:{x:i},backend:n,attrs:{shape:I}}),$=a?C.shape[1]:C.shape[2],N=a?C.shape[2]:C.shape[1],T=o?S.shape[1]:S.shape[2],E=Math.max(m,b),R=n.data.get(C.dataId).values,A=n.data.get(S.dataId).values,_=V(C.shape),F=V(S.shape),[D,O,L]=a?[_[0],1,_[1]]:[_[0],_[1],1],[M,z,P]=o?[1,F[1],F[0]]:[F[1],1,F[0]],B=N*T,W=va([E,N,T],C.dtype),U=W.values,G=n.blockSize;for(let x=0;x<E;x++){const e=x%m,t=x%b;for(let n=0;n<N;n+=G){const s=Math.min(n+G,N);for(let r=0;r<T;r+=G){const i=Math.min(r+G,T);for(let a=0;a<$;a+=G){const o=Math.min(a+G,$);for(let l=n;l<s;l++)for(let n=r;n<i;n++){let s=0;for(let r=a;r<o;r++){const i=R[e*D+l*O+r*L],a=A[r*M+n*z+t*P];s+=i*a}U[x*B+(l*T+n)]+=s}}}}}return n.disposeIntermediateTensorInfo(C),n.disposeIntermediateTensorInfo(S),n.makeTensorInfo(v,W.dtype,W.values)}const _N={kernelName:Re,backendName:"cpu",kernelFunc:AN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function FN(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:i,bias:a,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let d,p,f;const g=[],m=AN({inputs:{a:r,b:i},attrs:{transposeA:l,transposeB:u},backend:n});d=m,a&&(p=NN({inputs:{a:d,b:a},backend:n}),g.push(d),d=p),c&&(f=fN(n,d,c,o,h),g.push(d),d=f);for(const b of g)n.disposeIntermediateTensorInfo(b);return d}const DN={kernelName:Is,backendName:"cpu",kernelFunc:FN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ON(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const LN=e=>{const{x:t}=e.inputs,n=e.backend;H$(t,"abs");let s=new Float32Array(w(t.shape));const r=n.data.get(t.dataId).values;return s=ON(r),n.makeOutput(s,t.shape,t.dtype)},MN={kernelName:de,backendName:"cpu",kernelFunc:LN},zN=X$(pe,(e=>Math.acos(e))),PN={kernelName:pe,backendName:"cpu",kernelFunc:zN},BN=X$(fe,(e=>Math.acosh(e))),WN={kernelName:fe,backendName:"cpu",kernelFunc:BN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function UN(e){const{inputs:t,backend:n}=e,s=t;H$(t,"addN");const r=s.map((e=>n.data.get(e.dataId).values)),i=va(s[0].shape,s[0].dtype),a=i.values;for(let o=0;o<s.length;o++){const e=r[o];for(let t=0;t<a.length;t++)a[t]+=e[t]}return n.makeTensorInfo(i.shape,i.dtype,i.values)}const VN={kernelName:me,backendName:"cpu",kernelFunc:UN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function GN(e,t,n,s,r){const i=t.length,a=w(t),o=V(t),l=V(r),u=R(n,w(r));for(let c=0;c<a;++c){const t=Z(c,i,o),n=new Array(t.length);for(let e=0;e<n.length;e++)n[e]=t[s[e]];const r=Y(n,i,l);u[r]=e[c]}return u}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function HN(e){const{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:i}=n;H$(r,"transpose");const a=r.shape.length,o=new Array(a);for(let h=0;h<o.length;h++)o[h]=r.shape[i[h]];const l=s.data.get(r.dataId).values,u=GN(l,r.shape,r.dtype,i,o),c=s.write(u,o,r.dtype);return{dataId:c,shape:o,dtype:r.dtype}}const jN={kernelName:gs,backendName:"cpu",kernelFunc:HN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function KN(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s;H$(r,"all");const o=T(i,r.shape);let l=o;const u=zc(l,r.shape.length);let c=r;null!=u&&(c=HN({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Bc(l.length,r.shape.length)),Mc("all",l,c.shape.length);const[h,d]=Oc(c.shape,l),p=w(d),f=q(w(h),c.dtype),g=n.data.get(c.dataId).values;for(let b=0;b<f.length;++b){const e=b*p;let t=g[e];for(let n=0;n<p;++n){const s=g[e+n];t=t&&s}f[b]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(a){const e=Lc(h,o),t=EN({inputs:{x:m},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(m),t}return m}const qN={kernelName:be,backendName:"cpu",kernelFunc:KN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function XN(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s;H$(r,"any");const o=T(i,r.shape);let l=o;const u=zc(l,r.shape.length);let c=r;null!=u&&(c=HN({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Bc(l.length,r.shape.length)),Mc("any",l,c.shape.length);const[h,d]=Oc(c.shape,l),p=w(d),f=q(w(h),c.dtype),g=n.data.get(c.dataId).values;for(let b=0;b<f.length;++b){const e=b*p;let t=g[e];for(let n=0;n<p;++n){const s=g[e+n];t=t||s}f[b]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(a){const e=Lc(h,o),t=EN({inputs:{x:m},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(m),t}return m}const JN={kernelName:xe,backendName:"cpu",kernelFunc:XN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function YN(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i}=s;H$(r,"argMax");let a=T(i,r.shape);const o=zc(a,r.shape.length);let l=r;const u=[];null!=o&&(l=HN({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),a=Bc(a.length,l.shape.length)),a=[a[0]],Mc("argMax",a,l.shape.length);const[c,h]=Oc(l.shape,a),d=w(c),p=q(d,"int32"),f=w(h),g=n.data.get(l.dataId).values;for(let m=0;m<p.length;++m){const e=m*f;let t=g[e],n=0;for(let s=0;s<f;++s){const r=g[e+s];r>t&&(t=r,n=s)}p[m]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}const ZN={kernelName:ye,backendName:"cpu",kernelFunc:YN};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function QN(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i}=s;H$(r,"argMin");let a=T(i,r.shape);const o=zc(a,r.shape.length);let l=r;const u=[];null!=o&&(l=HN({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),a=Bc(a.length,l.shape.length)),a=[a[0]],Mc("argMin",a,l.shape.length);const[c,h]=Oc(l.shape,a),d=w(c),p=q(d,"int32"),f=w(h),g=n.data.get(l.dataId).values;for(let m=0;m<p.length;++m){const e=m*f;let t=g[e],n=0;for(let s=0;s<f;++s){const r=g[e+s];r<t&&(t=r,n=s)}p[m]=n}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}const eT={kernelName:ve,backendName:"cpu",kernelFunc:QN},tT=X$(we,(e=>Math.asin(e))),nT={kernelName:we,backendName:"cpu",kernelFunc:tT},sT=X$(ke,(e=>Math.asinh(e))),rT={kernelName:ke,backendName:"cpu",kernelFunc:sT},iT=X$(Ie,(e=>Math.atan(e))),aT={kernelName:Ie,backendName:"cpu",kernelFunc:iT},oT=sN(((e,t)=>Math.atan2(e,t))),lT=IN(Se,oT),uT={kernelName:Se,backendName:"cpu",kernelFunc:lT},cT=X$(Ce,(e=>Math.atanh(e))),hT={kernelName:Ce,backendName:"cpu",kernelFunc:cT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dT(e,t,n,s,r,i){const a=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,p=r.padInfo.left,f="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,g=va(r.outShape,n),m=g.values,b=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],y=r.outShape[3];for(let v=0;v<r.batchSize;++v){const t=v*b,n=v*s[0];for(let g=0;g<r.inChannels;++g)for(let b=0;b<r.outHeight;++b){const v=b*a-d,w=Math.max(0,v),k=Math.min(r.inHeight,c+v),I=t+b*x;for(let t=0;t<r.outWidth;++t){const a=t*o-p,c=Math.max(0,a),d=Math.min(r.inWidth,h+a);let b=f,x=0,v=0;for(let t=w;t<k;t+=l){const r=n+t*s[1];for(let t=c;t<d;t+=u){const n=r+t*s[2],a=e[n+g];"max"===i&&a>b?b=a:"avg"===i&&(x+=a,v++)}if(isNaN(b))break}const C=I+t*y+g;m[C]="avg"===i?x/v:b}}}return g}function pT(e,t,n,s,r=!1,i=!1){const a=va(s.outShape,"int32"),o=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,d=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,g=va(t,n,e);for(let m=0;m<s.batchSize;++m)for(let e=0;e<s.inChannels;++e)for(let t=0;t<s.outHeight;++t){const n=t*o-p;let b=n;while(b<0)b+=u;const x=Math.min(s.inHeight,h+n);for(let o=0;o<s.outWidth;++o){const h=o*l-f;let p=h;while(p<0)p+=c;const y=Math.min(s.inWidth,d+h);let v=Number.NEGATIVE_INFINITY,w=-1;for(let t=b;t<x;t+=u){const a=t-n;for(let n=p;n<y;n+=c){const o=n-h,l=g.get(m,t,n,e);l>v&&(v=l,w=r?i?((m*s.inHeight+t)*s.inWidth+n)*s.inChannels+e:(t*s.inWidth+n)*s.inChannels+e:a*d+o)}}a.set(w,m,t,o,e)}}return a}function fT(e,t,n,s,r,i){const a=r.strideDepth,o=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,g=r.padInfo.front,m=r.padInfo.top,b=r.padInfo.left,x="max"===i?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=va(r.outShape,n),v=y.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],C=r.outShape[4];for(let S=0;S<r.batchSize;++S){const t=S*w,n=S*s[0];for(let y=0;y<r.inChannels;++y)for(let w=0;w<r.outDepth;++w){const S=w*a-g;let $=S;while($<0)$+=u;const N=Math.min(r.inDepth,d+S),T=t+w*k;for(let t=0;t<r.outHeight;++t){const a=t*o-m;let d=a;while(d<0)d+=c;const g=Math.min(r.inHeight,p+a),w=T+t*I;for(let t=0;t<r.outWidth;++t){const a=t*l-b;let o=a;while(o<0)o+=h;const p=Math.min(r.inWidth,f+a),m=w+t*C;let k=x,I=0,S=0;for(let t=$;t<N;t+=u){const r=n+t*s[1];for(let t=d;t<g;t+=c){const n=r+t*s[2];for(let t=o;t<p;t+=h){const r=n+t*s[3],a=e[r+y];if("max"===i&&a>k?k=a:"avg"===i&&(I+=a,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}const T=m+y;v[T]="avg"===i?I/Math.max(S,1):k}}}}return y}function gT(e,t){const n=va(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,i=t.strideWidth,a=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let g=0;g<t.batchSize;++g)for(let m=0;m<t.inChannels;++m)for(let b=0;b<t.outDepth;++b){const x=b*s-d;let y=x;while(y<0)y+=a;const v=Math.min(t.inDepth,u+x);for(let s=0;s<t.outHeight;++s){const u=s*r-p;let d=u;while(d<0)d+=o;const w=Math.min(t.inHeight,c+u);for(let r=0;r<t.outWidth;++r){const p=r*i-f;let k=p;while(k<0)k+=l;const I=Math.min(t.inWidth,h+p);let C=Number.NEGATIVE_INFINITY,S=-1;for(let t=y;t<v;t+=a){const n=t-x;for(let s=d;s<w;s+=o){const r=s-u;for(let i=k;i<I;i+=l){const a=i-p,o=e.get(g,t,s,i,m);o>=C&&(C=o,S=n*c*h+r*c+a)}}}n.set(S,g,b,s,r,m)}}}return n}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;H$(r,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s,u=1;x(Gl(a,u),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=Rl(r.shape,i,a,u,o,l);let h;if(1===c.filterWidth&&1===c.filterHeight&&k(c.inShape,c.outShape))h=Q$({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=V(r.shape),s=dT(e,r.shape,r.dtype,t,c,"avg");h=n.makeTensorInfo(c.outShape,r.dtype,s.values)}return h}const bT={kernelName:$e,backendName:"cpu",kernelFunc:mT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=s;H$(r,"avgPool3d");const c=Al(r.shape,i,a,1,o,l,u),h=n.data.get(r.dataId).values,d=fT(h,r.shape,r.dtype,V(r.shape),c,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}const yT={kernelName:Te,backendName:"cpu",kernelFunc:xT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vT(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=s;H$([r,i],"avgPool3DGrad");const c=Al(i.shape,a,o,1,l,u),h=c.strideDepth,d=c.strideHeight,p=c.strideWidth,f=c.filterDepth,g=c.filterHeight,m=c.filterWidth,b=c.dilationDepth,x=c.dilationHeight,y=c.dilationWidth,v=c.effectiveFilterDepth,w=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=v-1-c.padInfo.front,C=k-1-c.padInfo.left,S=w-1-c.padInfo.top,$=va(i.shape,"float32"),N=1/(f*g*m),T=n.bufferSync(r);for(let E=0;E<c.batchSize;++E)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let s=0;s<c.inWidth;++s){const r=t-I,i=n-S,a=s-C;let o=0;for(let t=0;t<v;t+=b){const n=(r+t)/h;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let t=0;t<w;t+=x){const s=(i+t)/d;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let t=0;t<k;t+=y){const r=(a+t)/p;if(r<0||r>=c.outWidth||Math.floor(r)!==r)continue;const i=T.get(E,n,s,r,e);o+=i}}}$.set(o*N,E,t,n,s,e)}return n.makeTensorInfo($.shape,$.dtype,$.values)}const wT={kernelName:Ee,backendName:"cpu",kernelFunc:vT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kT(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,a=i;H$([r,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=Rl(a.shape,o,l,1,u),h=c.strideHeight,d=c.strideWidth,p=c.filterHeight,f=c.filterWidth,g=c.dilationHeight,m=c.dilationWidth,b=c.effectiveFilterHeight,x=c.effectiveFilterWidth,y=x-1-c.padInfo.left,v=b-1-c.padInfo.top,w=va(a.shape,"float32"),k=1/(p*f),I=n.data.get(r.dataId).values,C=va(r.shape,"float32",I);for(let S=0;S<c.batchSize;++S)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inHeight;++t)for(let n=0;n<c.inWidth;++n){const s=t-v,r=n-y;let i=0;for(let t=0;t<b;t+=g){const n=(s+t)/h;if(!(n<0||n>=c.outHeight||Math.floor(n)!==n))for(let t=0;t<x;t+=m){const s=(r+t)/d;if(s<0||s>=c.outWidth||Math.floor(s)!==s)continue;const a=C.get(S,n,s,e);i+=a}}w.set(i*k,S,t,n,e)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}const IT={kernelName:Ne,backendName:"cpu",kernelFunc:kT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function CT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,scale:i,offset:a,mean:o,variance:l}=t;x(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),x(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),x(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),H$([r,o,l,i,a],"batchNorm");let{varianceEpsilon:u}=s;null==u&&(u=.001);const c=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,p=i?n.data.get(i.dataId).values:new Float32Array([1]),f=a?n.data.get(a.dataId).values:new Float32Array([0]),g=new Float32Array(c.length),m=f.length,b=p.length,y=d.length,v=h.length;let w=0,k=0,I=0,C=0;for(let x=0;x<c.length;++x)g[x]=f[w++]+(c[x]-h[k++])*p[I++]/Math.sqrt(d[C++]+u),w>=m&&(w=0),k>=v&&(k=0),I>=b&&(I=0),C>=y&&(C=0);return n.makeTensorInfo(r.shape,r.dtype,g)}const ST={kernelName:It,backendName:"cpu",kernelFunc:CT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $T(e,t,n,s,r){const i=bl(s,t,n),a=w(n),o=V(s);if(i){const n=xl(t,o);return"string"===r?e.slice(n,n+a):e.subarray(n,n+a)}const l="string"===r?og(e):e,u=va(s,r,l),c=va(n,r);for(let h=0;h<c.size;++h){const e=c.indexToLoc(h),n=e.map(((e,n)=>e+t[n]));c.set(u.get(...n),...e)}return"string"===r?lg(c.values):c.values}function NT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:i,size:a}=s;H$(r,"slice");const[o,l]=yl(r,i,a);il(r,o,l);const u=n.data.get(r.dataId).values,c=$T(u,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,c)}const TT={kernelName:Bn,backendName:"cpu",kernelFunc:NT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ET(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:i,crops:a}=s;H$([r],"batchToSpaceND");const o=i.reduce(((e,t)=>e*t)),l=cf(r.shape,i,o),u=hf(l.length,i.length),c=df(r.shape,i,o),h=pf(a,i.length),d=ff(c,a,i.length),p=EN({inputs:{x:r},backend:n,attrs:{shape:l}}),f=HN({inputs:{x:p},backend:n,attrs:{perm:u}}),g=EN({inputs:{x:f},backend:n,attrs:{shape:c}}),m=NT({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}const RT={kernelName:Ae,backendName:"cpu",kernelFunc:ET};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function AT(e,t,n,s,r){const i=w(s),a=q(r,n);for(let o=0;o<e.length;o++){const n=e[o];if(n<0)throw new Error("Input x must be non-negative!");n>=r||(a[n]+=i>0?t[o]:1)}return a}function _T(e,t,n,s=!1){const r=e.shape[0],i=e.shape[1],a=va([r,n],t.dtype);for(let o=0;o<r;o++)for(let r=0;r<i;r++){const i=e.get(o,r);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(s?a.set(1,o,i):t.size>0?a.set(a.get(o,i)+t.get(o,r),o,i):a.set(a.get(o,i)+1,o,i))}return a}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function FT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:i}=t,{size:a}=s,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,u=AT(o,l,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,u)}const DT={kernelName:_e,backendName:"cpu",kernelFunc:FT},OT=sN(((e,t)=>e&t)),LT=IN(Fe,OT),MT={kernelName:Fe,backendName:"cpu",kernelFunc:LT};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zT(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,i=n.data.get(s.dataId).values,a=n.data.get(r.dataId).values,o=bo(Array.from(i),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const PT={kernelName:Oe,backendName:"cpu",kernelFunc:zT},BT=q$((e=>Math.ceil(e))),WT=J$(Me,BT),UT={kernelName:Me,backendName:"cpu",kernelFunc:WT},VT=X$(ze,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),GT={kernelName:ze,backendName:"cpu",kernelFunc:VT},HT=e=>{const{x:t}=e.inputs,n=e.backend,s=new Float32Array(w(t.shape)),r=n.data.get(t.dataId),i=r.complexTensorInfos.real,a=r.complexTensorInfos.imag,o=n.data.get(i.dataId).values,l=n.data.get(a.dataId).values;for(let u=0;u<o.length;u++){const e=o[u],t=l[u];s[u]=Math.hypot(e,t)}return n.makeOutput(s,t.shape,"float32")},jT={kernelName:Be,backendName:"cpu",kernelFunc:HT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function KT(e,t,n,s){const r=A(n,w(t));if(s&&"string"!==n){let t=0;e.forEach((e=>{const n=w(e.shape);r.set(e.vals,t),t+=n}))}else{let s=0;e.forEach((e=>{const i="string"===n?og(e.vals):e.vals;let a=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+s;for(let t=0;t<e.shape[1];++t)r[o+t]=i[a++]}s+=e.shape[1]}))}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qT(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,i=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,i)}const XT={kernelName:Rt,backendName:"cpu",kernelFunc:qT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function JT(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,i=T(r,t[0].shape)[0],a=t.map((e=>e.shape));Qp(a,i);let o=ef(t.map((e=>e.shape)),i);if(0===w(o))return n.makeTensorInfo(o,t[0].dtype,[]);const l=t.filter((e=>w(e.shape)>0));if(1===l.length)return Q$({inputs:{x:l[0]},backend:n});if("complex64"===l[0].dtype){const e=l.map((e=>xN({inputs:{input:e},backend:n}))),t=l.map((e=>qT({inputs:{input:e},backend:n}))),s=JT({inputs:e,backend:n,attrs:{axis:i}}),r=JT({inputs:t,backend:n,attrs:{axis:i}}),a=gN({inputs:{real:s,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),a}const u=l.map((e=>{const t=w(e.shape.slice(i)),s=[-1,t];return EN({inputs:{x:e},backend:n,attrs:{shape:s}})})),c=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=ef(u.map((e=>e.shape)),1);const h=1===u[0].shape[0],d=KT(c,o,t[0].dtype,h),p=ef(l.map((e=>e.shape)),i),f=n.makeTensorInfo(p,t[0].dtype,d);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const YT={kernelName:We,backendName:"cpu",kernelFunc:JT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ZT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s;H$([r,i],"conv2d");const h=jl(l),d=_l(r.shape,i.shape,a,u,o,c,!1,h),p=d.filterHeight,f=d.filterWidth,g=d.dilationHeight,m=d.dilationWidth,b=d.padInfo.left,x=d.padInfo.top,y="channelsLast"===d.dataFormat,v=new Cr(d.outShape,r.dtype),w=V(r.shape),k=V(i.shape),I=w[0],C=y?w[1]:w[2],S=y?w[2]:1,$=y?1:w[1],N=v.strides[0],T=y?v.strides[1]:v.strides[2],E=y?v.strides[2]:1,R=y?1:v.strides[1],A=n.data.get(r.dataId).values,_=n.data.get(i.dataId).values,F=v.values;for(let D=0;D<d.batchSize;++D){const e=D*I,t=D*N;for(let n=0;n<d.outHeight;++n){const s=t+n*T,r=n*d.strideHeight-x;for(let t=0;t<p;++t){const n=r+t*g;if(n<0||n>=d.inHeight)continue;const i=t*k[0],a=e+n*C;for(let e=0;e<d.outWidth;++e){const t=s+e*E,n=e*d.strideWidth-b;for(let e=0;e<f;++e){const s=n+e*m;if(s<0||s>=d.inWidth)continue;const r=i+e*k[1],o=a+s*S;let l=r;for(let e=0;e<d.inChannels;++e){const n=A[o+e*$];for(let e=0;e<d.outChannels;++e)F[t+e*R]+=n*_[l+e];l+=d.outChannels}}}}}}return n.makeTensorInfo(v.shape,v.dtype,F)}const QT={kernelName:Ue,backendName:"cpu",kernelFunc:ZT};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eE(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;H$([r,i],"conv2dBackpropFilter");const h=jl(l),d=_l(r.shape,c,a,1,o,u,!1,h),{strideHeight:p,strideWidth:f,filterHeight:g,filterWidth:m}=d,b="channelsLast"===d.dataFormat,x=new Cr(d.filterShape,"float32"),y=d.padInfo.left,v=d.padInfo.top,w=n.data.get(r.dataId).values,k=n.data.get(i.dataId).values,I=new Cr(r.shape,r.dtype,w),C=new Cr(i.shape,i.dtype,k);for(let S=0;S<g;++S){const e=Math.max(0,Math.ceil((v-S)/p)),t=Math.min(d.outHeight,(d.inHeight+v-S)/p);for(let n=0;n<m;++n){const s=Math.max(0,Math.ceil((y-n)/f)),r=Math.min(d.outWidth,(d.inWidth+y-n)/f);for(let i=0;i<d.inChannels;++i)for(let a=0;a<d.outChannels;++a){let o=0;for(let l=0;l<d.batchSize;++l)for(let u=e;u<t;++u){const e=S+u*p-v;for(let t=s;t<r;++t){const s=n+t*f-y;o+=b?I.get(l,e,s,i)*C.get(l,u,t,a):I.get(l,i,e,s)*C.get(l,a,u,t)}}x.set(o,S,n,i,a)}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}const tE={kernelName:Ve,backendName:"cpu",kernelFunc:eE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nE(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s;H$([r,i],"conv2dBackpropInput");const h=V(i.shape),d=V(r.shape);let p=jl(u);const f=_l(a,i.shape,o,1,l,c,!1,p),g=new Cr(f.inShape,"float32"),m=g.values,b=n.data.get(r.dataId).values,x=n.data.get(i.dataId).values,[y,v,w]=h,{batchSize:k,filterHeight:I,filterWidth:C,inChannels:S,inHeight:$,inWidth:N,outChannels:T,outHeight:E,outWidth:R,strideHeight:A,strideWidth:_}=f;p=f.dataFormat;const F=I-1-f.padInfo.top,D=C-1-f.padInfo.left,O="channelsLast"===p,L=g.strides[0],M=O?g.strides[1]:g.strides[2],z=O?g.strides[2]:1,P=O?1:g.strides[1],B=d[0],W=O?d[1]:d[2],U=O?d[2]:1,G=O?1:d[1];for(let V=0;V<k;++V)for(let e=0;e<S;++e)for(let t=0;t<$;++t){const n=t-F,s=Math.max(0,Math.ceil(n/A)),r=Math.min(E,(I+n)/A);for(let i=0;i<N;++i){const a=i-D,o=Math.max(0,Math.ceil(a/_)),l=Math.min(R,(C+a)/_);let u=0;for(let t=s;t<r;++t){const s=t*A-n;for(let n=o;n<l;++n){const r=n*_-a,i=B*V+W*t+U*n,o=y*(I-1-s)+v*(C-1-r)+w*e;for(let e=0;e<T;++e){const t=b[i+G*e],n=x[o+e];u+=t*n}}}const c=L*V+M*t+z*i+P*e;m[c]=u}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}const sE={kernelName:Ge,backendName:"cpu",kernelFunc:nE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rE(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:a,pad:o,dilations:l}=s;H$([r,i],"conv3d");const u=Fl(r.shape,i.shape,a,l,o),{filterDepth:c,filterHeight:h,filterWidth:d,dilationDepth:p,dilationHeight:f,dilationWidth:g,padInfo:m}=u,b=m.front,x=m.left,y=m.top,v=new Cr(u.outShape,r.dtype),w=n.data.get(r.dataId).values,k=n.data.get(i.dataId).values,I=v.values,C=V(r.shape),S=V(i.shape);for(let $=0;$<u.batchSize;++$){const e=$*C[0],t=$*v.strides[0];for(let n=0;n<u.outDepth;++n){const s=t+n*v.strides[1],r=n*u.strideDepth-b;for(let t=0;t<c;++t){const n=r+t*p;if(n<0||n>=u.inDepth)continue;const i=t*S[0],a=e+n*C[1];for(let e=0;e<u.outHeight;++e){const t=s+e*v.strides[2],n=e*u.strideHeight-y;for(let e=0;e<h;++e){const s=n+e*f;if(s<0||s>=u.inHeight)continue;const r=i+e*S[1],o=a+s*C[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,s=e*u.strideWidth-x;for(let e=0;e<d;++e){const t=s+e*g;if(t<0||t>=u.inWidth)continue;const i=r+e*S[2],a=o+t*u.inChannels;let l=i;for(let e=0;e<u.inChannels;++e){const t=w[a+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(v.shape,v.dtype,v.values)}const iE={kernelName:He,backendName:"cpu",kernelFunc:rE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function aE(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:a,pad:o,filterShape:l}=s;H$([r,i],"conv3dBackpropFilterV2");const u=V(r.shape),c=V(i.shape),h=Fl(r.shape,l,a,1,o),d=h.strideDepth,p=h.strideHeight,f=h.strideWidth,g=h.filterDepth,m=h.filterHeight,b=h.filterWidth,x=new Cr(h.filterShape,"float32"),y=x.values,[v,w,k,I]=x.strides,C=n.data.get(i.dataId).values,[S,$,N,T]=c,E=n.data.get(r.dataId).values,[R,A,_,F]=u,D=h.padInfo.front,O=h.padInfo.left,L=h.padInfo.top;for(let M=0;M<g;++M){const e=Math.max(0,Math.ceil((D-M)/d)),t=Math.min(h.outDepth,(h.inDepth+D-M)/d),n=M*v;for(let s=0;s<m;++s){const r=Math.max(0,Math.ceil((L-s)/p)),i=Math.min(h.outHeight,(h.inHeight+L-s)/p),a=s*w+n;for(let n=0;n<b;++n){const o=Math.max(0,Math.ceil((O-n)/f)),l=Math.min(h.outWidth,(h.inWidth+O-n)/f),u=n*k+a;for(let a=0;a<h.inChannels;++a){const c=a*I+u;for(let u=0;u<h.outChannels;++u){let g=0;for(let c=0;c<h.batchSize;++c){const h=c*R,m=c*S;for(let c=e;c<t;++c){const e=M+c*d-D,t=e*A+h,b=c*$+m;for(let c=r;c<i;++c){const e=s+c*p-L,r=e*_+t,i=c*N+b;for(let t=o;t<l;++t){const e=n+t*f-O,s=e*F+r,o=t*T+i;g+=E[s+a]*C[o+u]}}}}y[c+u]=g}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}const oE={kernelName:je,backendName:"cpu",kernelFunc:aE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lE(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{pad:a,strides:o,inputShape:l}=s;H$([r],"conv3dBackpropInputV2");const u=V(r.shape),c=V(i.shape),h=Fl(l,i.shape,o,1,a),d=new Cr(h.inShape,"float32"),p=d.values,[f,g,m,b]=d.strides,x=n.data.get(r.dataId).values,[y,v,w,k]=u,I=n.data.get(i.dataId).values,[C,S,$,N]=c,{batchSize:T,filterDepth:E,filterHeight:R,filterWidth:A,inChannels:_,inDepth:F,inHeight:D,inWidth:O,outChannels:L,outDepth:M,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:U}=h,G=E-1-h.padInfo.front,H=R-1-h.padInfo.top,j=A-1-h.padInfo.left;for(let V=0;V<T;++V)for(let e=0;e<_;++e)for(let t=0;t<F;++t){const n=t-G,s=Math.max(0,Math.ceil(n/B)),r=Math.min(M,(E+n)/B);for(let i=0;i<D;++i){const a=i-H,o=Math.max(0,Math.ceil(a/W)),l=Math.min(z,(R+a)/W);for(let u=0;u<O;++u){const c=u-j,h=Math.max(0,Math.ceil(c/U)),d=Math.min(P,(A+c)/U);let T=0;for(let t=s;t<r;++t){const s=t*B-n;for(let n=o;n<l;++n){const r=n*W-a;for(let i=h;i<d;++i){const a=i*U-c,o=y*V+v*t+w*n+k*i,l=C*(E-1-s)+S*(R-1-r)+$*(A-1-a)+N*e;for(let e=0;e<L;++e){const t=x[o+e],n=I[l+e];T+=t*n}}}}p[f*V+g*t+m*i+b*u+e]=T}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}const uE={kernelName:Ke,backendName:"cpu",kernelFunc:lE},cE=X$(qe,(e=>Math.cos(e))),hE={kernelName:qe,backendName:"cpu",kernelFunc:cE},dE=X$(Xe,(e=>Math.cosh(e))),pE={kernelName:Xe,backendName:"cpu",kernelFunc:dE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fE(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:i,boxInd:a}=t,{cropSize:o,method:l,extrapolationValue:u}=s,[c,h,d,p]=r.shape,f=i.shape[0],[g,m]=o,b=va([f,g,m,p],"float32"),x=n.data.get(i.dataId).values,y=n.data.get(a.dataId).values,v=n.data.get(r.dataId).values,w=V(r.shape),k=V(b.shape);for(let I=0;I<f;I++){const e=4*I,t=x[e],n=x[e+1],s=x[e+2],r=x[e+3],i=y[I];if(i>=c)continue;const a=g>1?(s-t)*(h-1)/(g-1):0,o=m>1?(r-n)*(d-1)/(m-1):0;for(let c=0;c<g;c++){const e=g>1?t*(h-1)+c*a:.5*(t+s)*(h-1);if(e<0||e>h-1)for(let t=0;t<m;t++)for(let e=0;e<p;e++){const n=e+t*k[2]+c*k[1]+I*k[0];b.values[n]=u}else if("bilinear"===l){const t=Math.floor(e),s=Math.ceil(e),a=e-t;for(let e=0;e<m;e++){const l=m>1?n*(d-1)+e*o:.5*(n+r)*(d-1);if(l<0||l>d-1){for(let t=0;t<p;t++){const n=t+e*k[2]+c*k[1]+I*k[0];b.values[n]=u}continue}const h=Math.floor(l),f=Math.ceil(l),g=l-h;for(let n=0;n<p;n++){let r=n+h*w[2]+t*w[1]+i*w[0];const o=v[r];r=n+f*w[2]+t*w[1]+i*w[0];const l=v[r];r=n+h*w[2]+s*w[1]+i*w[0];const u=v[r];r=n+f*w[2]+s*w[1]+i*w[0];const d=v[r],p=o+(l-o)*g,m=u+(d-u)*g;r=n+e*k[2]+c*k[1]+I*k[0],b.values[r]=p+(m-p)*a}}}else for(let t=0;t<m;++t){const s=m>1?n*(d-1)+t*o:.5*(n+r)*(d-1);if(s<0||s>d-1){for(let e=0;e<p;e++){const n=e+t*k[2]+c*k[1]+I*k[0];b.values[n]=u}continue}const a=Math.round(s),l=Math.round(e);for(let e=0;e<p;e++){const n=e+a*w[2]+l*w[1]+i*w[0],s=e+t*k[2]+c*k[1]+I*k[0];b.values[s]=v[n]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}const gE={kernelName:Ze,backendName:"cpu",kernelFunc:fE};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function mE(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,exclusive:a,reverse:o}=s;H$(r,"cumprod");const l=zc([i],r.shape.length);let u=r;null!=l&&(u=HN({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=Bc(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Br(u.dtype,"int32"),d=K(w(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let b=0;b<p.length;b+=f)for(let e=0;e<f;e++){const t=g(b,e);if(0===e)d[t]=a?1:p[t];else{const n=g(b,e-1);d[t]=a?p[n]*d[n]:p[t]*d[n]}}const m=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=Pc(l),t=HN({inputs:{x:m},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(u),t}return m}const bE={kernelName:Je,backendName:"cpu",kernelFunc:mE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xE(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,exclusive:a,reverse:o}=s;H$(r,"cumsum");const l=zc([i],r.shape.length);let u=r;null!=l&&(u=HN({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=Bc(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=Br(u.dtype,"int32"),d=q(w(u.shape),h),p=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],g=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let b=0;b<p.length;b+=f)for(let e=0;e<f;e++){const t=g(b,e);if(0===e)d[t]=a?0:p[t];else{const n=g(b,e-1);d[t]=a?p[n]+d[n]:p[t]+d[n]}}const m=n.makeTensorInfo(u.shape,h,d);if(null!=l){const e=Pc(l),t=HN({inputs:{x:m},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(u),t}return m}const yE={kernelName:Ye,backendName:"cpu",kernelFunc:xE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vE(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:i}=t,{size:a,binaryOutput:o}=s;if(1===r.shape.length){const e=n.data.get(r.dataId).values,t=n.data.get(i.dataId).values,s=AT(e,t,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,s)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(i),s=_T(e,t,a,o);return n.makeTensorInfo(s.shape,i.dtype,s.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const wE={kernelName:Qe,backendName:"cpu",kernelFunc:vE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kE(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:i,dataFormat:a}=s;x("NHWC"===a,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`));const o=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],h=l*i,d=u*i,p=c/(i*i),f=n.data.get(r.dataId).values,g=new Float32Array(o*h*d*p);let m=0;for(let b=0;b<o;++b)for(let e=0;e<h;++e){const t=Math.floor(e/i),n=e%i;for(let e=0;e<d;++e){const s=Math.floor(e/i),r=e%i,a=(n*i+r)*p;for(let e=0;e<p;++e){const n=e+a,r=n+c*(s+u*(t+l*b));g[m++]=f[r]}}}return n.makeTensorInfo([o,h,d,p],r.dtype,g)}const IE={kernelName:et,backendName:"cpu",kernelFunc:kE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function CE(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=s;H$([r,i],"depthwiseConv2DNative");const c=V(r.shape),h=V(i.shape);let d=l;null==d&&(d=[1,1]),x(Gl(a,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${d}'`));const p=_l(r.shape,i.shape,a,d,o,u,!0),{filterHeight:f,filterWidth:g,dilationHeight:m,dilationWidth:b,padInfo:y}=p,v=y.left,w=y.top,k=p.outChannels/p.inChannels,I=new Cr(p.outShape,r.dtype),C=n.data.get(r.dataId).values,S=n.data.get(i.dataId).values,$=I.values;for(let x=0;x<p.batchSize;++x){const e=x*c[0],t=x*I.strides[0];for(let n=0;n<p.outHeight;++n){const s=t+n*I.strides[1],r=n*p.strideHeight-w;for(let t=0;t<f;++t){const n=r+t*m;if(n<0||n>=p.inHeight)continue;const i=t*h[0],a=e+n*c[1];for(let e=0;e<p.outWidth;++e){const t=s+e*I.strides[2],n=e*p.strideWidth-v;for(let e=0;e<g;++e){const s=n+e*b;if(s<0||s>=p.inWidth)continue;const r=i+e*h[1],o=a+s*p.inChannels;let l=t,u=r;for(let e=0;e<p.inChannels;++e){const t=C[o+e];for(let e=0;e<k;++e)$[l+e]+=t*S[u+e];l+=k,u+=k}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const SE={kernelName:tt,backendName:"cpu",kernelFunc:CE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $E(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s;H$([r,i],"depthwiseConv2dNativeBackpropFilter");const h=_l(r.shape,c,a,o,l,u,!0),{strideHeight:d,strideWidth:p,filterHeight:f,filterWidth:g}=h,m=new Cr(h.filterShape,"float32"),b=h.padInfo.left,x=h.padInfo.top,y=h.outChannels/h.inChannels,v=n.data.get(r.dataId).values,w=new Cr(r.shape,r.dtype,v),k=n.data.get(i.dataId).values,I=new Cr(i.shape,i.dtype,k);for(let C=0;C<f;++C){const e=Math.max(0,Math.ceil((x-C)/d)),t=Math.min(h.outHeight,(h.inHeight+x-C)/d);for(let n=0;n<g;++n){const s=Math.max(0,Math.ceil((b-n)/p)),r=Math.min(h.outWidth,(h.inWidth+b-n)/p);for(let i=0;i<h.outChannels;++i){const a=Math.trunc(i/y),o=i%y;let l=0;for(let u=0;u<h.batchSize;++u)for(let o=e;o<t;++o){const e=C+o*d-x;for(let t=s;t<r;++t){const s=n+t*p-b;l+=w.get(u,e,s,a)*I.get(u,o,t,i)}}m.set(l,C,n,a,o)}}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}const NE={kernelName:nt,backendName:"cpu",kernelFunc:$E};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function TE(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s;H$([r,i],"depthwiseConv2DNativeBackpropInput");const h=V(r.shape),d=V(i.shape),p=_l(c,i.shape,a,o,l,u,!0),f=new Cr(p.inShape,"float32"),g=f.values,[m,b,x]=f.strides,y=n.data.get(r.dataId).values,[v,w,k]=h,I=n.data.get(i.dataId).values,[C,S,$]=d,{batchSize:N,filterHeight:T,filterWidth:E,inChannels:R,inHeight:A,inWidth:_,outChannels:F,outHeight:D,outWidth:O,strideHeight:L,strideWidth:M}=p,z=T-1-p.padInfo.top,P=E-1-p.padInfo.left,B=F/R;for(let W=0;W<N;++W)for(let e=0;e<R;++e)for(let t=0;t<A;++t){const n=t-z,s=Math.max(0,Math.ceil(n/L)),r=Math.min(D,(T+n)/L);for(let i=0;i<_;++i){const a=i-P,o=Math.max(0,Math.ceil(a/M)),l=Math.min(O,(E+a)/M);let u=0;for(let t=s;t<r;++t){const s=t*L-n;for(let n=o;n<l;++n){const r=n*M-a,i=v*W+w*t+k*n,o=C*(T-1-s)+S*(E-1-r)+$*e;for(let t=0;t<B;++t){const n=e*B+t,s=y[i+n],r=I[o+t];u+=s*r}}}g[m*W+b*t+x*i+e]=u}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}const EE={kernelName:st,backendName:"cpu",kernelFunc:TE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function RE(e){const{inputs:t,backend:n}=e,{x:s}=t,r=w(s.shape),i=n.data.get(s.dataId).values,a=va([r,r],s.dtype),o=a.values;for(let u=0;u<i.length;u++)o[u*r+u]=i[u];const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,a.dtype,a.values)}const AE={kernelName:rt,backendName:"cpu",kernelFunc:RE},_E={kernelName:it,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r}=e,{strides:i,pad:a,dilations:o}=n,l=t,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:p,inHeight:f,inWidth:g,inChannels:m,outHeight:b,outWidth:x,padInfo:y,strideHeight:v,strideWidth:k,filterHeight:I,filterWidth:C,dilationHeight:S,dilationWidth:$,outShape:N}=El(s.shape,r.shape,i,a,"NHWC",o),T=w(N),E=N.length,R=A(s.dtype,T);for(let w=0;w<p;++w)for(let e=0;e<b;++e){const t=e*v-y.top;for(let n=0;n<x;++n){const i=n*k-y.left;for(let a=0;a<m;++a){let o=Number.MIN_SAFE_INTEGER;for(let e=0;e<I;++e){const n=t+e*S;if(n>=0&&n<f)for(let t=0;t<C;++t){const l=i+t*$;if(l>=0&&l<g){const i=Y([w,n,l,a],c,V(s.shape)),p=Y([e,t,a],d,V(r.shape)),f=u[i]+h[p];f>o&&(o=f)}}}const l=Y([w,e,n,a],E,V(N));R[l]=o}}}const _=l.write(rr(R,s.dtype),N,s.dtype);return{dataId:_,shape:N,dtype:s.dtype}}},FE={kernelName:ot,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:i}=e,{strides:a,pad:o,dilations:l}=n,u=t,c=H(s.shape,u.data.get(s.dataId).values),h=H(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:b,padInfo:y,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:C,dilationWidth:S,outShape:$}=El(s.shape,r.shape,a,o,"NHWC",l);x(i.rank===$.length,(()=>`Error in ${ot}, dy must have the same rank as output ${$.length}, but got ${i.rank}`));const N=H($,u.data.get(i.dataId).values),T=X(r.shape,r.dtype);for(let x=0;x<d;++x)for(let e=0;e<m;++e){const t=e*v-y.top;for(let n=0;n<b;++n){const s=n*w-y.left;for(let r=0;r<g;++r){let i=Number.MIN_SAFE_INTEGER,a=0,o=0;for(let e=0;e<k;++e){const n=t+e*C;if(n>=0&&n<p)for(let t=0;t<I;++t){const l=s+t*S;if(l>=0&&l<f){const s=c[x][n][l][r]+h[e][t][r];s>i&&(i=s,a=e,o=t)}}}T[a][o][r]+=N[x][e][n][r]}}}const E=u.write(rr(T,s.dtype),r.shape,r.dtype);return{dataId:E,shape:r.shape,dtype:r.dtype}}},DE={kernelName:at,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:i}=e,{strides:a,pad:o,dilations:l}=n,u=t,c=H(s.shape,u.data.get(s.dataId).values),h=H(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:p,inWidth:f,inChannels:g,outHeight:m,outWidth:b,padInfo:y,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:C,dilationWidth:S,outShape:$}=El(s.shape,r.shape,a,o,"NHWC",l);x(i.rank===$.length,(()=>`Error in ${at}, dy must have the same rank as output ${$.length}, but got ${i.rank}`));const N=H($,u.data.get(i.dataId).values),T=X(s.shape,s.dtype);for(let x=0;x<d;++x)for(let e=0;e<m;++e){const t=e*v-y.top;for(let n=0;n<b;++n){const s=n*w-y.left;for(let r=0;r<g;++r){let i=Number.MIN_SAFE_INTEGER,a=t<0?0:t,o=s<0?0:s;for(let e=0;e<k;++e){const n=t+e*C;if(n>=0&&n<p)for(let t=0;t<I;++t){const l=s+t*S;if(l>=0&&l<f){const s=c[x][n][l][r]+h[e][t][r];s>i&&(i=s,a=n,o=l)}}}T[x][a][o][r]+=N[x][e][n][r]}}}const E=u.write(rr(T,s.dtype),s.shape,s.dtype);return{dataId:E,shape:s.shape,dtype:s.dtype}}};
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function OE(e){const{inputs:t,backend:n,attrs:s}=e,{image:r}=t,{canvas:i,options:a}=s,{contextOptions:o,imageOptions:l}=a||{},u=(null===l||void 0===l?void 0:l.alpha)||1,c=(null===o||void 0===o?void 0:o.contextType)||"2d";if("2d"!==c)throw new Error(`Context type ${o.contextType} is not supported by the CPU backend.`);const h=i.getContext(c,(null===o||void 0===o?void 0:o.contextAttributes)||{});if(null==h)throw new Error(`Could not get the context with ${c} type.`);const[d,p]=r.shape.slice(0,2),f=2===r.shape.length?1:r.shape[2],g=n.data.get(r.dataId).values,m="float32"===r.dtype?255:1,b=new Uint8ClampedArray(p*d*4);for(let y=0;y<d*p;++y){const e=[0,0,0,255*u];for(let n=0;n<f;n++){const t=g[y*f+n];if("float32"===r.dtype){if(t<0||t>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${t}.`)}else if("int32"===r.dtype&&(t<0||t>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${t}.`);1===f?(e[0]=t*m,e[1]=t*m,e[2]=t*m):e[n]=t*m}const t=4*y;b[t+0]=Math.round(e[0]),b[t+1]=Math.round(e[1]),b[t+2]=Math.round(e[2]),b[t+3]=Math.round(e[3])}i.width=p,i.height=d;const x=new ImageData(b,p,d);return h.putImageData(x,0,0),r}const LE={kernelName:lt,backendName:"cpu",kernelFunc:OE},ME=sN(((e,t)=>e*t)),zE=CN(((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n}))),PE=IN(an,ME,zE),BE={kernelName:an,backendName:"cpu",kernelFunc:PE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function WE(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s;let o;H$(r,"sum"),o="bool"===r.dtype?wN({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):Q$({inputs:{x:r},backend:n});const l=o.shape.length,u=T(i,o.shape),c=zc(u,l);let h=u,d=o;null!=c&&(d=HN({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Bc(h.length,l)),Mc("sum",h,d.shape.length);const[p,f]=Oc(d.shape,h),g=Br(d.dtype,"int32");let m=bN(n,p,g);const b=w(f),x=n.data.get(m.dataId).values,y=n.data.get(d.dataId).values;for(let v=0;v<x.length;++v){const e=v*b;let t=0;for(let n=0;n<b;++n)t+=y[e+n];x[v]=t}if(a){const e=Lc(m.shape,u),t=m;m=EN({inputs:{x:m},backend:n,attrs:{shape:e}}),n.disposeIntermediateTensorInfo(t)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(d),m}const UE={kernelName:Kn,backendName:"cpu",kernelFunc:WE};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function VE(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,i=t,{allDims:a,summedDims:o,idDims:l}=Pf(r,i.length);Wf(a.length,l,i);const{path:u,steps:c}=Uf(o,l),h=c.length;let d=null,p=a.length;const f=[];for(let g=0;g<h;++g){for(const e of c[g]){const{permutationIndices:t,expandDims:s}=Bf(p,l[e]);let r;Vf(t)?r=i[e]:(r=HN({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),f.push(r));const a=r.shape.slice();for(let e=0;e<s.length;++e)a.splice(s[e],0,1);k(r.shape,a)||(r=EN({inputs:{x:r},backend:n,attrs:{shape:a}}),f.push(r)),null===d?d=r:(d=PE({inputs:{a:r,b:d},backend:n}),f.push(d))}g<h-1&&(u[g]>=0&&(d=WE({inputs:{x:d},backend:n,attrs:{axis:u[g]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const g of f)g!==d&&n.disposeIntermediateTensorInfo(g);return d}const GE={kernelName:ct,backendName:"cpu",kernelFunc:VE};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function HE(e){const{inputs:t,backend:n}=e,{dy:s,y:r}=t;H$([s,r],"eluGrad");const i=new Float32Array(w(r.shape)),a=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values;for(let l=0;l<a.length;++l){const e=a[l];i[l]=e>=0?o[l]:o[l]*(e+1)}return n.makeTensorInfo(r.shape,"float32",i)}const jE={kernelName:dt,backendName:"cpu",kernelFunc:HE},KE=sN(((e,t)=>e===t?1:0)),qE=IN(ft,KE,null,"bool"),XE={kernelName:ft,backendName:"cpu",kernelFunc:qE},JE=wf,YE=kf,ZE=If,QE=Cf,eR=Sf,tR=$f,nR=X$(pt,(e=>{const t=Math.sign(e),n=Math.abs(e),s=1/(1+JE*n);return t*(1-((((tR*s+eR)*s+QE)*s+ZE)*s+YE)*s*Math.exp(-n*n))})),sR={kernelName:pt,backendName:"cpu",kernelFunc:nR},rR=q$((e=>Math.exp(e))),iR=J$(gt,rR,"float32"),aR={kernelName:gt,backendName:"cpu",kernelFunc:iR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oR(e){const{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:i}=s,a=r.shape.length,o=r.shape.slice();let l=i;return i<0&&(x(-(a+1)<=i,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+i+1),o.splice(l,0,1),EN({inputs:{x:r},backend:n,attrs:{shape:o}})}const lR={kernelName:mt,backendName:"cpu",kernelFunc:oR},uR=q$((e=>Math.expm1(e))),cR=J$(bt,uR),hR={kernelName:bt,backendName:"cpu",kernelFunc:cR},dR=sN(((e,t)=>e/t)),pR=IN(ut,dR),fR={kernelName:ut,backendName:"cpu",kernelFunc:pR},gR=sN(((e,t)=>e-t)),mR=CN(((e,t,n,s)=>({real:e-n,imag:t-s}))),bR=IN(us,gR,mR),xR={kernelName:us,backendName:"cpu",kernelFunc:bR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yR(e,t,n){const s=e.shape,r=s[0],i=s[1],a=n.data.get(e.dataId),o=a.complexTensorInfos.real,l=a.complexTensorInfos.imag,u=[r,i],c=w(u),h=R("float32",c),d=R("float32",c);for(let m=0;m<r;m++){const e=NT({inputs:{x:o},backend:n,attrs:{begin:[m,0],size:[1,i]}}),s=NT({inputs:{x:l},backend:n,attrs:{begin:[m,0],size:[1,i]}}),r=gN({inputs:{real:e,imag:s},backend:n}),{real:a,imag:u}=vR(r,t,n),c=Nf(a,u);for(let t=0;t<i;t++){const e=Af(c,t);h[m*i+t]=e.real,d[m*i+t]=e.imag}n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r)}const p=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),g=gN({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}function vR(e,t,n){const s=w(e.shape),r=n.data.get(e.dataId),i=n.data.get(r.complexTensorInfos.real.dataId).values,a=n.data.get(r.complexTensorInfos.imag.dataId).values;if(wR(s)){const r=kR(i,a,s,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",r.real),t=n.makeTensorInfo(o,"float32",r.imag),i=n.makeTensorInfo([],"float32",nr(s,"float32")),a=Q$({inputs:{x:i},backend:n}),l=fR.kernelFunc({inputs:{a:e,b:i},backend:n}),u=fR.kernelFunc({inputs:{a:t,b:a},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return r}{const e=Nf(i,a),n=IR(e,s,t);return Tf(n)}}function wR(e){return 0===(e&e-1)}function kR(e,t,n,s,r){if(1===n)return{real:e,imag:t};const i=Nf(e,t),a=n/2,o=Ef(i),l=o.real,u=o.imag,c=[l.length],h=r.makeTensorInfo(c,"float32",l),d=r.makeTensorInfo(c,"float32",u),p=gN({inputs:{real:h,imag:d},backend:r}),f=Rf(i),g=f.real,m=f.imag,b=[g.length],x=r.makeTensorInfo(b,"float32",g),y=r.makeTensorInfo(b,"float32",m),v=gN({inputs:{real:x,imag:y},backend:r}),w=kR(l,u,a,s,r),k=w.real,I=w.imag,C=[k.length],S=r.makeTensorInfo(C,"float32",k),$=r.makeTensorInfo(C,"float32",I),N=gN({inputs:{real:S,imag:$},backend:r}),T=kR(g,m,a,s,r),E=T.real,R=T.imag,A=[E.length],_=r.makeTensorInfo(A,"float32",E),F=r.makeTensorInfo(A,"float32",R),D=gN({inputs:{real:_,imag:F},backend:r}),O=Ff(n,s),L=[O.real.length],M=r.makeTensorInfo(L,"float32",O.real),z=r.makeTensorInfo(L,"float32",O.imag),P=gN({inputs:{real:M,imag:z},backend:r}),B=PE({inputs:{a:P,b:D},backend:r}),W=NN({inputs:{a:N,b:B},backend:r}),U=bR({inputs:{a:N,b:B},backend:r}),V=xN({inputs:{input:W},backend:r}),G=xN({inputs:{input:U},backend:r}),H=qT({inputs:{input:W},backend:r}),j=qT({inputs:{input:U},backend:r}),K=JT({inputs:[V,G],backend:r,attrs:{axis:0}}),q=JT({inputs:[H,j],backend:r,attrs:{axis:0}}),X=r.data.get(K.dataId).values,J=r.data.get(q.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo($),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(M),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(q),{real:X,imag:J}}function IR(e,t,n){const s=new Float32Array(2*t);for(let r=0;r<t;r++){let i=0,a=0;for(let s=0;s<t;s++){const o=Df(r*s,t,n),l=Af(e,s);i+=l.real*o.real-l.imag*o.imag,a+=l.real*o.imag+l.imag*o.real}n&&(i/=t,a/=t),_f(s,i,a,r)}return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function CR(e){const{inputs:t,backend:n}=e,{input:s}=t,r=w(s.shape),i=s.shape[s.shape.length-1],a=r/i,o=EN({inputs:{x:s},backend:n,attrs:{shape:[a,i]}}),l=yR(o,!1,n),u=EN({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}const SR={kernelName:xt,backendName:"cpu",kernelFunc:CR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $R(e){const{backend:t,attrs:n}=e,{shape:s,value:r,dtype:i}=n,a=i||B(r),o=A(a,w(s));return TR(o,r,a),t.makeTensorInfo(s,a,o)}const NR={kernelName:yt,backendName:"cpu",kernelFunc:$R};function TR(e,t,n){e.fill(t)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ER={kernelName:vt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,r=n,i=R(s.dtype,w(s.shape)),[a,o,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let d=0;d<a;d++){const e=d*l*o*u;for(let t=0;t<o;t++){const n=t*(l*u);for(let t=0;t<l;t++){const s=t*u;for(let r=0;r<u;r++){const a=Math.round(l-t-1),o=e+n+s+r;let h=c[o];if(a>=0&&a<l){const t=a*u,s=e+n+t+r;h=c[s]}i[o]=h}}}}const h=r.write(i,s.shape,s.dtype);return{dataId:h,shape:s.shape,dtype:s.dtype}}},RR=q$((e=>Math.floor(e))),AR=J$(wt,RR),_R={kernelName:wt,backendName:"cpu",kernelFunc:AR},FR=sN(((e,t)=>Math.floor(e/t))),DR=IN(kt,FR,null,"int32"),OR={kernelName:kt,backendName:"cpu",kernelFunc:DR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function LR(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let g=ZT({inputs:{x:r,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const e=g;if("NCHW"===c&&1===a.shape.length&&1!==a.shape[0]){const e=EN({inputs:{x:a},backend:n,attrs:{shape:[a.shape[0],1,1]}});g=NN({inputs:{a:g,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else g=NN({inputs:{a:g,b:a},backend:n});n.disposeIntermediateTensorInfo(e)}if(p){const e=g;if("NCHW"===c&&"prelu"===p&&1===o.shape.length&&1!==o.shape[0]){const e=EN({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});g=fN(n,g,p,e,f),n.disposeIntermediateTensorInfo(e)}else g=fN(n,g,p,o,f);n.disposeIntermediateTensorInfo(e)}return g}const MR={kernelName:Cs,backendName:"cpu",kernelFunc:LR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zR(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s;let g=CE({inputs:{x:r,filter:i},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d}});if(a){const e=g;g=NN({inputs:{a:g,b:a},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=g;g=fN(n,g,p,o,f),n.disposeIntermediateTensorInfo(e)}return g}const PR={kernelName:Ss,backendName:"cpu",kernelFunc:zR};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function BR(e,t,n,s,r,i,a,o,l){const u=va([s,i],n);for(let c=0;c<s;c++){const n=[];let s=0;for(let t=0;t<r;t++){const i=e[c*r+t];s+=i*a[t],n.push(i)}if(s<0||s>=l/i)throw new Error(`Invalid indices: ${n} does not index into ${o}`);for(let e=0;e<i;e++)u.values[c*i+e]=t.get(...t.indexToLoc(s*i+e))}return u}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function WR(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,i=w(s.shape),a=r.shape,o=a[a.length-1],[l,u,c,h]=gf(s,r);if(0===u)return n.makeTensorInfo(l,s.dtype,[]);const d=n.data.get(r.dataId).values,p=n.bufferSync(s),f=BR(d,p,s.dtype,u,o,c,h,s.shape,i);return n.makeTensorInfo(l,s.dtype,f.values)}const UR={kernelName:St,backendName:"cpu",kernelFunc:WR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function VR(e,t,n){const s=va(n,e.dtype);for(let r=0;r<s.size;++r){const n=s.indexToLoc(r),i=n.slice(),a=i[0],o=i[2],l=t.locToIndex([a,o]);i[2]=t.values[l];const u=e.locToIndex(i);0<=u&&u<e.values.length&&(s.values[r]=e.values[u])}return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function GR(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:i}=t,{axis:a,batchDims:o}=s;H$([r,i],"gatherV2");const l=T(a,r.shape)[0],u=n.data.get(i.dataId).values,c=r.shape[l];for(let w=0;w<u.length;++w){const e=u[w];x(e<=c-1&&e>=0,(()=>`GatherV2: the index value ${e} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const d=w(i.shape),p=ag(r,i,l,h),f=EN({inputs:{x:r},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),g=EN({inputs:{x:i},backend:n,attrs:{shape:[p.batchSize,d/p.batchSize]}}),m=[p.batchSize,p.outerSize,d/p.batchSize,p.sliceSize],b=n.bufferSync(g),y=n.bufferSync(f),v=VR(y,b,m);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.makeTensorInfo(p.outputShape,v.dtype,v.values)}const HR={kernelName:Ct,backendName:"cpu",kernelFunc:GR},jR=sN(((e,t)=>e>t?1:0)),KR=IN($t,jR,null,"bool"),qR={kernelName:$t,backendName:"cpu",kernelFunc:KR},XR=sN(((e,t)=>e>=t?1:0)),JR=IN(Nt,XR,null,"bool"),YR={kernelName:Nt,backendName:"cpu",kernelFunc:JR};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ZR(e){const{inputs:t,backend:n}=e,{input:s}=t,r=w(s.shape),i=s.shape[s.shape.length-1],a=r/i,o=EN({inputs:{x:s},backend:n,attrs:{shape:[a,i]}}),l=yR(o,!0,n),u=EN({inputs:{x:l},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),u}const QR={kernelName:Et,backendName:"cpu",kernelFunc:ZR},eA=X$(At,(e=>Number.isFinite(e)?1:0),"bool"),tA={kernelName:At,backendName:"cpu",kernelFunc:eA},nA=X$(_t,(e=>Math.abs(e)===1/0?1:0),"bool"),sA={kernelName:_t,backendName:"cpu",kernelFunc:nA},rA=X$(Ft,(e=>Number.isNaN(e)?1:0),"bool"),iA={kernelName:Ft,backendName:"cpu",kernelFunc:rA},aA=sN(((e,t)=>e<t?1:0)),oA=IN(Ot,aA,null,"bool"),lA={kernelName:Ot,backendName:"cpu",kernelFunc:oA},uA=sN(((e,t)=>e<=t?1:0)),cA=IN(Lt,uA,null,"bool"),hA={kernelName:Lt,backendName:"cpu",kernelFunc:cA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dA(e,t,n){const s=(t-e)/(n-1),r=q(n,"float32");r[0]=e;for(let i=1;i<r.length;i++)r[i]=r[i-1]+s;return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pA(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:i}=n,a=dA(s,r,i);return t.makeTensorInfo([a.length],"float32",a)}const fA={kernelName:Mt,backendName:"cpu",kernelFunc:pA},gA=q$((e=>Math.log(e))),mA=J$(zt,gA),bA={kernelName:zt,backendName:"cpu",kernelFunc:mA},xA=X$(Pt,(e=>Math.log1p(e))),yA={kernelName:Pt,backendName:"cpu",kernelFunc:xA},vA=sN(((e,t)=>e&&t)),wA=IN(Bt,vA,null,"bool"),kA={kernelName:Bt,backendName:"cpu",kernelFunc:wA},IA=X$(Wt,(e=>e?0:1),"bool"),CA={kernelName:Wt,backendName:"cpu",kernelFunc:IA},SA=sN(((e,t)=>e||t)),$A=IN(Ut,SA,null,"bool"),NA={kernelName:Ut,backendName:"cpu",kernelFunc:$A};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function TA(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:i,bias:a,alpha:o,beta:l}=s;H$(r,"LRN");const u=r.shape[3],c=u-1,h=n.data.get(r.dataId).values,d=w(r.shape),p=new Float32Array(d);function f(e){const t=e%u;let n=e-t+Math.max(0,t-i);const s=e-t+Math.min(t+i,c);let r=0;for(;n<=s;n++){const e=h[n];r+=e*e}return r}for(let g=0;g<d;g++){const e=f(g),t=h[g]*Math.pow(a+o*e,-l);p[g]=t}return n.makeTensorInfo(r.shape,r.dtype,p)}const EA={kernelName:Gt,backendName:"cpu",kernelFunc:TA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function RA(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,y:i,dy:a}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s;H$(a,"LRNGrad");const h=w(a.shape),d=a.shape[3],p=n.data.get(a.dataId).values,f=n.data.get(r.dataId).values,g=n.data.get(i.dataId).values,m=new Float32Array(h),b=h;for(let x=0;x<b;x++){const e=x%d,t=x-e+Math.max(0,e-o),n=x-e+Math.min(d,e+o+1);let s=0;for(let r=t;r<n;r++)s+=Math.pow(f[r],2);s=u*s+l;for(let r=t;r<n;r++){let e=-2*u*c*f[r]*g[x]/s;x===r&&(e+=Math.pow(s,-c)),e*=p[x],m[r]+=e}}return n.makeTensorInfo(a.shape,r.dtype,m)}const AA={kernelName:Ht,backendName:"cpu",kernelFunc:RA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _A(e,t,n,s){const r=R(s,w(n));for(let i=0;i<r.length;++i){const n=i*t;let s=e[n];for(let r=0;r<t;++r){const t=e[n+r];(Number.isNaN(t)||t>s)&&(s=t)}r[i]=s}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function FA(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:i,keepDims:a}=s,o=n;let l=r.shape;const u=l.length,c=T(i,l);let h=c;const d=zc(h,u);let p=o.data.get(r.dataId).values;if(null!=d){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];p=GN(p,l,r.dtype,d,e),h=Bc(h.length,u),l=e}H$(r,"max"),Mc("max",h,u);const[f,g]=Oc(l,h),m=w(g),b=_A(p,m,f,r.dtype),x=o.write(b,f,r.dtype);let y=f;if(a){const e=Lc(f,c);y=e}return{dataId:x,shape:y,dtype:r.dtype}}const DA={kernelName:jt,backendName:"cpu",kernelFunc:FA},OA=sN(((e,t)=>Math.max(e,t))),LA=IN(Kt,OA),MA={kernelName:Kt,backendName:"cpu",kernelFunc:LA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zA(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;H$(r,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s,u=1;x(Gl(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=Rl(r.shape,i,a,u,o,l);let h;if(1===c.filterWidth&&1===c.filterHeight&&k(c.inShape,c.outShape))h=Q$({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=V(r.shape),s=dT(e,r.shape,r.dtype,t,c,"max");h=n.makeTensorInfo(c.outShape,r.dtype,s.values)}return h}const PA={kernelName:qt,backendName:"cpu",kernelFunc:zA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function BA(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=s;H$(r,"maxPool3d");const c=Al(r.shape,i,a,1,o,l,u),h=n.data.get(r.dataId).values,d=fT(h,r.shape,r.dtype,V(r.shape),c,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}const WA={kernelName:Jt,backendName:"cpu",kernelFunc:BA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function UA(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,{filterSize:a,strides:o,pad:l,dimRoundingMode:u}=s;H$([r,i],"maxPool3DGrad");const c=Al(i.shape,a,o,1,l,u),h=n.bufferSync(i),d=gT(h,c),p=c.strideDepth,f=c.strideHeight,g=c.strideWidth,m=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,y=c.effectiveFilterDepth,v=c.effectiveFilterHeight,w=c.effectiveFilterWidth,k=y-1-c.padInfo.front,I=w-1-c.padInfo.left,C=v-1-c.padInfo.top,S=va(i.shape,"float32"),$=n.bufferSync(r);for(let N=0;N<c.batchSize;++N)for(let e=0;e<c.inChannels;++e)for(let t=0;t<c.inDepth;++t)for(let n=0;n<c.inHeight;++n)for(let s=0;s<c.inWidth;++s){const r=t-k,i=n-C,a=s-I;let o=0;for(let t=0;t<y;t+=m){const n=(r+t)/p;if(!(n<0||n>=c.outDepth||Math.floor(n)!==n))for(let s=0;s<v;s+=b){const r=(i+s)/f;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let i=0;i<w;i+=x){const l=(a+i)/g;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const u=y*v*w-1-d.get(N,n,r,l,e),h=t*v*w+s*w+i,p=u===h?1:0;if(0===p)continue;const f=$.get(N,n,r,l,e);o+=f*p}}}S.set(o,N,t,n,s,e)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}const VA={kernelName:Yt,backendName:"cpu",kernelFunc:UA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function GA(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i,output:a}=t,o=i;H$([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=Rl(o.shape,l,u,1,c,h),p=n.data.get(o.dataId).values,f=va(d.outShape,o.dtype,pT(p,o.shape,o.dtype,d).values),g=d.strideHeight,m=d.strideWidth,b=d.dilationHeight,x=d.dilationWidth,y=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=y-1-d.padInfo.top,I=va(o.shape,"float32"),C=n.data.get(r.dataId).values,S=va(r.shape,"float32",C);for(let $=0;$<d.batchSize;++$)for(let e=0;e<d.inChannels;++e)for(let t=0;t<d.inHeight;++t)for(let n=0;n<d.inWidth;++n){const s=t-k,r=n-w;let i=0;for(let t=0;t<y;t+=b){const n=(s+t)/g;if(!(n<0||n>=d.outHeight||Math.floor(n)!==n))for(let s=0;s<v;s+=x){const a=(r+s)/m;if(a<0||a>=d.outWidth||Math.floor(a)!==a)continue;const o=y*v-1-f.get($,n,a,e),l=t*v+s,u=o===l?1:0;if(0===u)continue;const c=S.get($,n,a,e);i+=c*u}}I.set(i,$,t,n,e)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}const HA={kernelName:Xt,backendName:"cpu",kernelFunc:GA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jA(e,t,n,s,r){const i=V(t),a=dT(e,t,n,i,r,"max"),o=pT(e,t,n,r,!0,s);return[a.values,o.values]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const KA={kernelName:Zt,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:i,pad:a,includeBatchInIndex:o}=t,l=n;H$(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=Rl(s.shape,r,i,[1,1],a),[h,d]=jA(u,s.shape,s.dtype,o,c),p=l.write(h,c.outShape,s.dtype),f=l.write(d,c.outShape,s.dtype);return[{dataId:p,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qA(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s,o=T(i,r.shape),l=Oc(r.shape,o),u=l[1],c=w(u),h=[],d=n.makeTensorInfo([],"float32",new Float32Array([c]));h.push(d);const p=wN({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});h.push(p);const f=pR({inputs:{a:p,b:d},backend:n});h.push(f);const g=WE({inputs:{x:f},backend:n,attrs:{axis:i,keepDims:a}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}const XA={kernelName:Qt,backendName:"cpu",kernelFunc:qA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function JA(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s;H$(r,"min");const o=T(i,r.shape);let l=o;const u=zc(l,r.shape.length);let c=r;null!=u&&(c=HN({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Bc(l.length,r.shape.length)),Mc("min",l,c.shape.length);const[h,d]=Oc(c.shape,l),p=w(d),f=q(w(h),c.dtype),g=n.data.get(c.dataId).values;for(let b=0;b<f.length;++b){const e=b*p;let t=g[e];for(let n=0;n<p;++n){const s=g[e+n];(Number.isNaN(s)||s<t)&&(t=s)}f[b]=t}null!=u&&n.disposeIntermediateTensorInfo(c);const m=n.makeTensorInfo(h,c.dtype,f);if(a){const e=Lc(h,o),t=EN({inputs:{x:m},backend:n,attrs:{shape:e}});return n.disposeIntermediateTensorInfo(m),t}return m}const YA={kernelName:en,backendName:"cpu",kernelFunc:JA},ZA=sN(((e,t)=>Math.min(e,t))),QA=IN(tn,ZA),e_={kernelName:tn,backendName:"cpu",kernelFunc:QA};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function t_(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:i,mode:a}=s;H$(r,"mirrorPad");const o=i.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=i.map((e=>e[0])),u=i.map(((e,t)=>e[0]+r.shape[t])),c="reflect"===a?0:1,h=n.data.get(r.dataId).values,d=r.shape.length,p=V(r.shape),f=w(o),g=o.length,m=V(o),b=R(r.dtype,f);for(let y=0;y<f;y++){let e=Z(y,g,m);for(let n=0;n<g;n++)e[n]<l[n]?e[n]=2*l[n]-e[n]-c:e[n]>=u[n]&&(e[n]=2*(u[n]-1)-e[n]+c);e=e.map(((e,t)=>e-l[t]));const t=Y(e,d,p);b[y]=h[t]}const x=n.write(b,o,r.dtype);return{dataId:x,shape:o,dtype:r.dtype}}const n_={kernelName:nn,backendName:"cpu",kernelFunc:t_},s_=sN(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),r_=IN(sn,s_),i_={kernelName:sn,backendName:"cpu",kernelFunc:r_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function a_(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:i}=s,a=r.shape.length;let o=i;if(-1===o&&(o=a-1),o!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${o}`);const l=T([o],r.shape),u=FA({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=Lc(u.shape,l),h=EN({inputs:{x:u},backend:n,attrs:{shape:c}}),d=bR({inputs:{a:r,b:h},backend:n}),p=iR({inputs:{x:d},backend:n}),f=WE({inputs:{x:p},backend:n,attrs:{axis:l,keepDims:!1}}),g=EN({inputs:{x:f},backend:n,attrs:{shape:c}}),m=pR({inputs:{a:p,b:g},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),m}const o_={kernelName:Jn,backendName:"cpu",kernelFunc:a_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function l_(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:i,seed:a,normalized:o}=s;H$(r,"multinomial");const l=o?r:a_({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,d=[u,i],p=q(w(d),"int32");for(let f=0;f<u;++f){const e=f*c,t=new Float32Array(c-1);t[0]=h[e];for(let r=1;r<t.length;++r)t[r]=t[r-1]+h[e+r];const n=sh.alea(a.toString()),s=f*i;for(let r=0;r<i;++r){const e=n();p[s+r]=t.length;for(let n=0;n<t.length;n++)if(e<t[n]){p[s+r]=n;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",p)}const u_={kernelName:rn,backendName:"cpu",kernelFunc:l_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function c_(e,t,n){const s=nr(-1,n);return ME([],t,s,e,n)}function h_(e){const{inputs:t,backend:n}=e,{x:s}=t;H$(s,"neg");const r=n.data.get(s.dataId).values,[i,a]=c_(r,s.shape,s.dtype);return n.makeTensorInfo(a,s.dtype,i)}const d_={kernelName:on,backendName:"cpu",kernelFunc:h_},p_=Zd;function f_(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=s;H$(r,"NonMaxSuppression");const u=n.data.get(r.dataId).values,c=n.data.get(i.dataId).values,{selectedIndices:h}=p_(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const g_={kernelName:un,backendName:"cpu",kernelFunc:f_},m_=Qd;function b_(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s;H$(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,{selectedIndices:d,validOutputs:p}=m_(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}const x_={kernelName:cn,backendName:"cpu",kernelFunc:b_},y_=ep;function v_(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s;H$(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,h=n.data.get(i.dataId).values,d=a,p=o,f=l,g=u,{selectedIndices:m,selectedScores:b}=y_(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const w_={kernelName:hn,backendName:"cpu",kernelFunc:v_},k_=sN(((e,t)=>e!==t?1:0)),I_=IN(ln,k_,null,"bool"),C_={kernelName:ln,backendName:"cpu",kernelFunc:I_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function S_(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{dtype:i,depth:a,onValue:o,offValue:l}=s;H$(r,"oneHot");const u=w(r.shape),c=new Float32Array(u*a);c.fill(l);const h=n.data.get(r.dataId).values;for(let d=0;d<u;++d)h[d]>=0&&h[d]<a&&(c[d*a+h[d]]=o);return n.makeTensorInfo([...r.shape,a],i,c)}const $_={kernelName:pn,backendName:"cpu",kernelFunc:S_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function N_(e){const{inputs:t,backend:n}=e,{x:s}=t;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const e=xN({inputs:{input:s},backend:n}),t=N_({inputs:{x:e},backend:n}),r=qT({inputs:{input:s},backend:n}),i=N_({inputs:{x:r},backend:n}),a=gN({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),a}return $R({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const T_={kernelName:ys,backendName:"cpu",kernelFunc:N_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function E_(e){const{inputs:t,backend:n}=e,{x:s}=t;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const e=xN({inputs:{input:s},backend:n}),t=E_({inputs:{x:e},backend:n}),r=qT({inputs:{input:s},backend:n}),i=N_({inputs:{x:r},backend:n}),a=gN({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),a}return $R({backend:n,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const R_={kernelName:dn,backendName:"cpu",kernelFunc:E_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function A_(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return oR({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const i=t[0].shape,a=t[0].dtype;t.forEach((e=>{y(i,e.shape,"All tensors passed to stack must have matching shapes"),x(a===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=t.map((e=>{const t=oR({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),u=JT({inputs:l,backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const __={kernelName:fn,backendName:"cpu",kernelFunc:A_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function F_(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:i,constantValue:a}=s;H$(r,"pad");const o=i.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=i.map((e=>e[0])),u=n.data.get(r.dataId).values,c=w(r.shape),h=r.shape.length,d=V(r.shape),p=w(o),f=o.length,g=V(o),m=R(r.dtype,p);0!==a&&m.fill(a);for(let x=0;x<c;x++){const e=Z(x,h,d),t=e.map(((e,t)=>e+l[t])),n=Y(t,f,g);m[n]=u[x]}const b=n.write(m,o,r.dtype);return{dataId:b,shape:o,dtype:r.dtype}}const D_={kernelName:gn,backendName:"cpu",kernelFunc:F_},O_=sN(((e,t)=>Math.pow(e,t))),L_=IN(mn,O_),M_={kernelName:mn,backendName:"cpu",kernelFunc:L_};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function z_(e,t,n,s){const[r,i]=Oc(e,s),a=Br(t,"int32"),o=q(w(r),a),l=w(i);for(let u=0;u<o.length;++u){const e=u*l;let t=1;for(let s=0;s<l;++s)t*=n[e+s];o[u]=t}return{outVals:o,outShape:r,outDtype:a}}function P_(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s;H$(r,"prod");const o=r.shape.length,l=T(i,r.shape),u=zc(l,o);let c=l,h=r;const d=[];null!=u&&(h=HN({inputs:{x:r},backend:n,attrs:{perm:u}}),d.push(h),c=Bc(c.length,o));const p=n.data.get(h.dataId).values,{outVals:f,outShape:g,outDtype:m}=z_(h.shape,h.dtype,p,c);let b=g;return a&&(b=Lc(g,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,m,f)}const B_={kernelName:xn,backendName:"cpu",kernelFunc:P_};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function W_(e,t,n){e.forEach(((e,s)=>{if(e<0||e>=n){const r=Z(s,t.length,V(t)).join(",");throw new Error(`indices[${r}] = ${e} is not in [0, ${n})`)}}))}function U_(e,t){for(let n=0;n<e.length;++n){const s=e[n],r=n===e.length-1?t:e[n+1].length;if(0===s.length)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<s.length;++e)if(s[e-1]>s[e])throw new Error("Ragged splits must be sorted in ascending order")}}function V_(e,t,n,s){const r=[];let i=0;const a=t.length-1+n.length,o=new Array(a).fill(null).map((()=>[0]));U_(n,s);let l=1;for(let u=0;u<t.length-1;++u){l*=t[u];const e=t[u+1];for(let t=1;t<l+1;++t)o[u].push(t*e)}for(let u=0;u<e.length;++u){let s=e[u],a=e[u]+1;for(let e=0;e<n.length;++e){const r=n[e],i=e+t.length-1;if(i>=0){const e=o[i],t=e[e.length-1]-r[s];for(let n=s;n<a;++n)o[i].push(r[n+1]+t)}s=r[s],a=r[a]}a!==s&&(r.push([s,a]),i+=a-s)}return{outSplits:o,valueSlices:r,numValues:i}}function G_(e){const t=[];for(let n=0;n<e.length;++n){const s=e[n].length,r=A("int32",s);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}function H_(e,t){const n=e.slice(0,t);while(n.length<t)n.push(1);for(let s=t;s<e.length;s++)n[t-1]*=e[s];return n}function j_(e,t,n,s,r,i){const a=H_(t,2)[1],o=H_(i,2)[1];let l=0;for(const u of n)for(let t=u[0];t<u[1];++t){for(let n=0;n<s;++n)r[l*o+n]=e[t*a+n];++l}}function K_(e,t,n,s,r){const i=t.slice();i[0]=r;const a=A(n,w(i)),o=e.length,l=0===o?0:o/t[0];return j_(e,t,s,l,a,i),[a,i]}function q_(e,t,n,s,r,i,a,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");const l=t[0][0]-1;if(W_(i,a,l),0===s.length)throw new Error("params.rank must be nonzero");const u=s[0],{outSplits:c,valueSlices:h,numValues:d}=V_(i,a,e,u),p=G_(c),f=K_(n,s,r,h,d);return[p,f[0],f[1]]}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function X_(e){const{inputs:t,backend:n,attrs:s}=e,{paramsNestedSplits:r,paramsDenseValues:i,indices:a}=t,{outputRaggedRank:o}=s,l=r.map((e=>n.data.get(e.dataId).values)),u=r.map((e=>e.shape)),c=n.data.get(i.dataId).values,h=n.data.get(a.dataId).values,[d,p,f]=q_(l,u,c,i.shape,i.dtype,h,a.shape,o),g=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),m=n.makeTensorInfo(f,i.dtype,p);return g.concat([m])}const J_={kernelName:yn,backendName:"cpu",kernelFunc:X_},Y_=2147483647;function Z_(e,t,n,s,r,i,a){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const o=0===t.length,l=0===r.length,u=0===a.length,c=[];o||c.push(t[0]),l||c.push(r[0]),u||c.push(a[0]);for(let m=1;m<c.length;++m)if(c[m]!==c[m-1])throw new Error("starts, limits, and deltas must have the same shape");const h=0===c.length?1:c[0],d=A("int32",h+1);d[0]=0;for(let m=0;m<h;++m){const t=o?e[0]:e[m],n=l?s[0]:s[m],r=u?i[0]:i[m];if(0===r)throw new Error("Requires delta != 0");let a;if(r>0&&n<t||r<0&&n>t)a=0;else if(a=Math.ceil(Math.abs((n-t)/r)),a>Y_)throw new Error(`Requires ((limit - start) / delta) <= ${Y_}`);d[m+1]=d[m]+a}const p=d[h],f=A(n,p);let g=0;for(let m=0;m<h;++m){const t=d[m+1]-d[m];let n=o?e[0]:e[m];const s=u?i[0]:i[m];for(let e=0;e<t;++e)f[g++]=n,n+=s}return[d,f]}
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Q_(e){const{inputs:t,backend:n}=e,{starts:s,limits:r,deltas:i}=t,a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,[u,c]=Z_(a,s.shape,s.dtype,o,r.shape,l,i.shape),h=n.makeTensorInfo([u.length],"int32",u),d=n.makeTensorInfo([c.length],s.dtype,c);return[h,d]}const eF={kernelName:vn,backendName:"cpu",kernelFunc:Q_};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var tF=tf;class nF{constructor(e,t,n,s,r,i,a,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=s,this.valuesDType=r,this.defaultValue=i,this.defaultValueShape=a,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=sf(u),this.raggedRank=rf(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===tF.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===tF.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case tF.VALUE_ROWIDS:return nF.getMaxWidthValueRowID(t);case tF.ROW_SPLITS:return nF.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${tF[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(0===t||1===t)return 0;let n=0;for(let s=0;s<t-1;++s){const t=e[s+1]-e[s];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){const t=e.length;if(0===t)return 0;let n=0,s=e[0],r=0;for(let i=1;i<t;++i){const t=e[i];t!==s&&(s=t,r=Math.max(i-n,r),n=i)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return rF(e,n)}calculateOutputSize(e){const t=this.valuesShape,n=this.defaultValueShape;af(n,t);const s=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=nf(this.raggedRank,s,t),i=r;i[0]<0&&(i[0]=e);for(let a=1;a<=this.raggedRank;++a)i[a]<0&&(i[a]=this.getMaxWidth(a));return i}calculateFirstParentOutputIndex(e,t,n){const s=Math.min(e,n),r=[];let i=0;for(let a=0;a<s;++a,i+=t)r.push(i);for(let a=s;a<e;++a)r.push(-1);return x(r.length===e,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(e,t,n,s){const r=e.length,i=[];for(let a=0;a<r-1;++a){const r=e[a+1]-e[a];let o=Math.min(s,r),l=t[a];-1===l&&(o=0);for(let e=0;e<o;++e)i.push(l),l+=n;for(let e=0;e<r-o;++e)i.push(-1)}if(r>0&&i.length!==e[r-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(e,t,n,s){const r=e.length,i=[];if(0===r)return[];let a=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];i.push(l);for(let u=1;u<r;++u){const r=e[u];if(r===o)l>=0&&(++a,a<s?l+=n:l=-1);else{if(a=0,o=r,r>=t.length)throw new Error(`Got nextValueRowId=${r} which is not less than ${t.length}`);l=t[r]}i.push(l)}if(i.length!==e.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(e,t,n,s){const r=this.getRowPartitionTensor(e),i=this.getRowPartitionTypeByDimension(e);switch(i){case tF.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,s);case tF.ROW_SPLITS:if(r.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,n,s);default:throw new Error(`Unsupported partition type: ${tF[i]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case tF.FIRST_DIM_SIZE:return e[0];case tF.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case tF.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${tF[t]}`)}}compute(){const e=this.rowPartitionValues[0];if(e.length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),n=this.calculateOutputSize(t),s=new Array(this.raggedRank+1);s[s.length-1]=1;for(let o=s.length-2;o>=0;--o)s[o]=s[o+1]*n[o+1];const r=rF(n,!1),i=A(this.valuesDType,w(r)),a=s[0]*n[0];if(a>0){let e=this.calculateFirstParentOutputIndex(t,s[0],n[0]);for(let t=1;t<=this.raggedRank;++t){const r=this.calculateOutputIndex(t-1,e,s[t],n[t]);e=r}this.setOutput(this.raggedRank,e,i,r)}return[r,i]}setOutput(e,t,n,s){if(0===n.length)return;const r=this.values,i=n;let a=s.slice();a=a.slice(e+1);const o=w(a),l=t.length;let u=this.defaultValue;if(u.length!==o&&1!==u.length){const e=this.defaultValueShape;Ra((()=>{const t=Xl(u,e),n=cu(t,a);u=n.dataSync()}))}let c=0,h=0,d=0;for(let p=0;p<=l;++p){let e=p<l?t[p]:-1;if(e!==d){if(h<d){const e=r.subarray(c*o),t=i.subarray(h*o),n=(d-h)*o;sF(t,e,n)}if(p>=l){const t=n.length;e=Math.floor(t/o)}if(e>d)if(1===this.defaultValue.length)i.subarray(d*o,e*o).fill(this.defaultValue[0]),d=e;else while(e>d){const e=i.slice(d*o);sF(e,u,o),++d}e<0?(c=p+1,h=d):(c=p,h=d,d=h+1)}else++d}}}function sF(e,t,n){for(let s=0;s<n;s++)e[s]=t[s]}function rF(e,t){const n=[];for(let s of e){if(s<0){if(!t)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}n.push(s)}return n}function iF(e,t,n,s,r,i,a,o,l,u){return new nF(e,t,n,s,r,i,a,o,l,u).compute()}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function aF(e){const{inputs:t,backend:n,attrs:s}=e,{shape:r,values:i,defaultValue:a,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=s,u=n.data.get(r.dataId).values,c=n.data.get(i.dataId).values,h=n.data.get(a.dataId).values,d=o.map((e=>n.data.get(e.dataId).values)),p=o.map((e=>e.shape)),[f,g]=iF(u,r.shape,c,i.shape,i.dtype,h,a.shape,d,p,l);return n.makeTensorInfo(f,i.dtype,g)}const oF={kernelName:wn,backendName:"cpu",kernelFunc:aF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lF(e,t,n,s){const r=e===t,i=e<t&&n<0,a=t<e&&n>1;if(r||i||a)return q(0,s);const o=Math.abs(Math.ceil((t-e)/n)),l=q(o,s);t<e&&1===n&&(n=-1),l[0]=e;for(let u=1;u<l.length;u++)l[u]=l[u-1]+n;return l}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uF(e){const{backend:t,attrs:n}=e,{start:s,stop:r,dtype:i,step:a}=n,o=lF(s,r,a,i);return t.makeTensorInfo([o.length],i,o)}const cF={kernelName:kn,backendName:"cpu",kernelFunc:uF},hF=X$(Cn,(e=>1/e)),dF={kernelName:Cn,backendName:"cpu",kernelFunc:hF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pF(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:a,size:o}=s;H$(r,"resizeBilinear");const l=V(r.shape),[u,c]=o,[h,d,p,f]=r.shape,g=n.data.get(r.dataId).values,m=new Float32Array(w([h,u,c,f])),b=[i&&u>1?d-1:d,i&&c>1?p-1:p],x=[i&&u>1?u-1:u,i&&c>1?c-1:c];let y=0;const v=b[0]/x[0],k=b[1]/x[1];for(let w=0;w<h;w++)for(let e=0;e<u;e++){let t;t=a?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),s=t-n,r=Math.min(d-1,Math.ceil(t)),i=w*l[0]+n*l[1],o=w*l[0]+r*l[1];for(let e=0;e<c;e++){let t;t=a?k*(e+.5)-.5:k*e;const n=Math.max(0,Math.floor(t)),r=t-n,u=Math.min(p-1,Math.ceil(t)),c=i+n*l[2],h=o+n*l[2],d=i+u*l[2],b=o+u*l[2];for(let e=0;e<f;e++){const t=g[c+e],n=g[h+e],i=g[d+e],a=g[b+e],o=t+(i-t)*r,l=n+(a-n)*r,u=o+(l-o)*s;m[y++]=u}}}return n.makeTensorInfo([h,u,c,f],"float32",m)}const fF={kernelName:En,backendName:"cpu",kernelFunc:pF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gF(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:i}=t,{alignCorners:a}=s;H$([i,r],"resizeBilinearGrad");const o=V(r.shape),[l,u,c,h]=r.shape,[,d,p]=i.shape,f=new Float32Array(l*u*c*h),g=[a&&d>1?u-1:u,a&&p>1?c-1:c],m=[a&&d>1?d-1:d,a&&p>1?p-1:p],b=g[0]/m[0],x=g[1]/m[1],y=n.data.get(i.dataId).values;let v=0;for(let w=0;w<l;w++){const e=w*o[0];for(let t=0;t<d;t++){const n=t*b,s=Math.floor(n),r=Math.min(Math.ceil(n),u-1),i=e+s*o[1],a=e+r*o[1],l=n-s,d=1-l;for(let e=0;e<p;e++){const t=e*x,n=Math.floor(t),s=Math.min(Math.ceil(t),c-1),r=t-n,u=1-r,p=i+n*o[2],g=i+s*o[2],m=a+n*o[2],b=a+s*o[2],w=d*u,k=d*r,I=l*u,C=l*r;for(let e=0;e<h;e++){const t=y[v++];f[p+e]+=t*w,f[g+e]+=t*k,f[m+e]+=t*I,f[b+e]+=t*C}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}const mF={kernelName:Rn,backendName:"cpu",kernelFunc:gF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bF(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:a,size:o}=s;H$(r,"resizeNearestNeighbor");const l=V(r.shape),[u,c]=o,[h,d,p,f]=r.shape,g=n.data.get(r.dataId).values,m=new Float32Array(h*u*c*f),b=[i&&u>1?d-1:d,i&&c>1?p-1:p],x=[i&&u>1?u-1:u,i&&c>1?c-1:c],y=b[0]/x[0],v=b[1]/x[1];let w=0;for(let k=0;k<h;k++){const e=k*l[0];for(let t=0;t<u;t++){const n=a?y*(t+.5):y*t;let s=Math.min(d-1,i?Math.round(n):Math.floor(n));a&&(s=Math.max(0,s));const r=e+s*l[1];for(let e=0;e<c;e++){const t=a?v*(e+.5):v*e;let n=Math.min(p-1,i?Math.round(t):Math.floor(t));a&&(n=Math.max(0,n));const s=r+n*l[2];for(let e=0;e<f;e++){const t=g[s+e];m[w++]=t}}}}return n.makeTensorInfo([h,u,c,f],r.dtype,m)}const xF={kernelName:Nn,backendName:"cpu",kernelFunc:bF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yF(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:i}=t,{alignCorners:a}=s;H$([i,r],"resizeNearestNeighborGrad");const o=V(r.shape),l=V(i.shape),[u,c,h,d]=r.shape,[,p,f]=i.shape,g=new Float32Array(u*c*h*d),m=n.data.get(i.dataId).values,b=[a&&p>1?c-1:c,a&&f>1?h-1:h],x=[a&&p>1?p-1:p,a&&f>1?f-1:f],y=b[0]/x[0],v=b[1]/x[1],w=1/y,k=1/v,I=2*Math.ceil(w)+2,C=2*Math.ceil(k)+2;for(let S=0;S<u;S++){const e=S*o[0];for(let t=0;t<c;t++){const n=e+t*o[1],s=Math.floor(t*w),r=Math.floor(s-I/2);for(let i=0;i<h;i++){const s=n+i*o[2],u=Math.floor(i*k),b=Math.floor(u-C/2);for(let n=0;n<d;n++){let o=0;for(let s=0;s<I;s++){const u=s+r;if(u<0||u>=p)continue;const d=e+u*l[1],g=u*y,x=Math.min(c-1,a?Math.round(g):Math.floor(g));if(t===x)for(let e=0;e<C;e++){const t=e+b;if(t<0||t>=f)continue;const s=d+t*l[2],r=t*v,u=Math.min(h-1,a?Math.round(r):Math.floor(r));i===u&&(o+=m[s+n])}}g[s+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,g)}const vF={kernelName:Tn,backendName:"cpu",kernelFunc:yF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wF(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:i}=s;H$(r,"reverse");const a=r.shape.length,o=T(i,r.shape);if(0===a)return Q$({inputs:{x:r},backend:n});const l=new Cr(r.shape,r.dtype),u=n.bufferSync(r);for(let c=0;c<l.size;c++){const e=l.indexToLoc(c),t=e.slice();o.forEach((e=>t[e]=r.shape[e]-1-t[e])),l.set(u.get(...t),...e)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}const kF={kernelName:_n,backendName:"cpu",kernelFunc:wF},IF={kernelName:ks,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:i,center:a}=t,o=n,l=R(s.dtype,w(s.shape)),[u,c,h,d]=s.shape,[p,f]=uf(a,c,h),g=255,m=Math.sin(r),b=Math.cos(r),x=o.data.get(s.dataId).values;for(let v=0;v<u;v++){const e=v*h*c*d;for(let t=0;t<c;t++){const n=t*(h*d);for(let s=0;s<h;s++){const r=s*d;for(let a=0;a<d;a++){const o=[u,t,s,a],y=o[2],v=o[1];let w=(y-p)*b-(v-f)*m,k=(y-p)*m+(v-f)*b;w=Math.round(w+p),k=Math.round(k+f);let I=i;if("number"!==typeof i&&(I=3===a?g:i[a]),w>=0&&w<h&&k>=0&&k<c){const t=k*(h*d),n=w*d,s=e+t+n+a;I=x[s]}const C=e+n+r+a;l[C]=I}}}}const y=o.write(l,s.shape,s.dtype);return{dataId:y,shape:s.shape,dtype:s.dtype}}},CF=X$(Fn,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2===0?t:t+1})),SF={kernelName:Fn,backendName:"cpu",kernelFunc:CF},$F=q$((e=>1/Math.sqrt(e))),NF=J$(Dn,$F),TF={kernelName:Dn,backendName:"cpu",kernelFunc:NF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function EF(e,t,n,s,r,i,a,o,l,u){const c=[s/r,r],h=e.values,d=t.values;if(0===s)return va(n,t.dtype);const p=l instanceof Cr?l:va(c,t.dtype);"string"===typeof l||"number"===typeof l?p.values.fill(l):"boolean"===typeof l&&p.values.fill(+l);for(let f=0;f<i;f++){const e=[];let i=0;for(let t=0;t<a;t++){const n=h[f*a+t];e.push(n),i+=n*o[t]}if(i<0||i>=s/r)throw new Error(`Invalid indices: ${e} does not index into ${n}`);for(let n=0;n<r;n++)u?p.values[i*r+n]+=d[f*r+n]:p.values[i*r+n]=0===t.rank?d[0]:d[f*r+n]}return p}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function RF(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:i}=t,{shape:a}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=xf(i,r,a),d=!0,p=n.bufferSync(r),f=n.bufferSync(i),g=EF(p,f,a,h,u,l,o,c,0,d);return n.makeTensorInfo(a,g.dtype,g.values)}const AF={kernelName:On,backendName:"cpu",kernelFunc:RF};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _F(e,t){let n=0,s=e.length,r=0;while(n<s)r=Math.floor((n+s)/2),e[r]<t?n=r+1:s=r;return s}function FF(e,t){let n=0,s=e.length,r=0;while(n<s)r=Math.floor((n+s)/2),e[r]<=t?n=r+1:s=r;return s}function DF(e,t,n,s,r,i){const a=A("int32",n*r);for(let o=0;o<n;++o){const n=e.slice(o*s,(o+1)*s),l=o*r;for(let e=0;e<r;++e)a[l+e]="left"===i?_F(n,t[e+l]):FF(n,t[e+l])}return a}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function OF(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:i}=t,{side:a}=s,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,u=DF(o,l,r.shape[0],r.shape[1],i.shape[1],a);return n.makeTensorInfo(i.shape,"int32",u)}const LF={kernelName:Mn,backendName:"cpu",kernelFunc:OF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function MF(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:i}=t;H$([s,r,i],"select");const a=s.shape.length,o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,c=Br(r.dtype,i.dtype),h=q(w(r.shape),c);let d=0;const p=0===a||a>1||1===r.shape.length?1:w(r.shape.slice(1));for(let f=0;f<o.length;f++)for(let e=0;e<p;e++)1===o[f]?h[d++]=l[f]:h[d++]=u[f];return n.makeTensorInfo(r.shape,c,h)}const zF={kernelName:zn,backendName:"cpu",kernelFunc:MF},PF=yf,BF=vf,WF=X$(Pn,(e=>e>=0?BF*e:PF*(Math.exp(e)-1))),UF={kernelName:Pn,backendName:"cpu",kernelFunc:WF},VF=X$(Vn,(e=>e<0?-1:e>0?1:0)),GF={kernelName:Vn,backendName:"cpu",kernelFunc:VF},HF=X$(Wn,(e=>Math.sin(e))),jF={kernelName:Wn,backendName:"cpu",kernelFunc:HF},KF=X$(Un,(e=>Math.sinh(e))),qF={kernelName:Un,backendName:"cpu",kernelFunc:KF},XF=1.1920928955078125e-7,JF=Math.log(XF)+2,YF=X$(Hn,(e=>{const t=e>-JF,n=e<JF,s=Math.exp(e);let r;return r=n?s:t?e:Math.log(1+s),r})),ZF={kernelName:Hn,backendName:"cpu",kernelFunc:YF};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function QF(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:i,paddings:a}=s;H$([r],"spaceToBatchND");const o=w(i),l=[[0,0]];l.push(...a);for(let w=1+i.length;w<r.shape.length;++w)l.push([0,0]);const u=D_.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=cf(u.shape,i,o,!1),h=hf(c.length,i.length,!1),d=df(u.shape,i,o,!1),p={x:u},f={shape:c},g=EN({inputs:p,backend:n,attrs:f}),m={x:g},b={perm:h},x=HN({inputs:m,backend:n,attrs:b}),y={x:x},v={shape:d},k=EN({inputs:y,backend:n,attrs:v});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(x),k}const eD={kernelName:qn,backendName:"cpu",kernelFunc:QF};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tD(e,t,n,s,r,i,a){const o=t[0],l=i[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(jf(o));const e=A(n,0),t=A(r,0);return[e,[0,h],t,u,c]}let d=!0,p=0;const f=new Array(l).fill(0);for(let m=0;m<o;++m){const t=e[m*h];if(t<0)throw new Error(Kf(m,t));if(t>=l)throw new Error(qf(m,t,l));++f[t],d=d&&t>=p,p=t}let g=!0;for(let m=0;m<l;++m){const e=0===f[m];u[m]=e,g=g&&!e,f[m]=Math.max(f[m],1),m>0&&(f[m]+=f[m-1])}if(g&&d){const t=e,n=s;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=f[l-1],i=A(n,t*h),d=A(r,t),p=new Array(l).fill(0);for(let n=0;n<o;++n){const t=e[n*h],r=p[t],a=(0===t?0:f[t-1])+r;p[t]++;for(let s=0;s<h;++s)i[a*h+s]=e[n*h+s];d[a]=s[n],c[n]=a}for(let e=0;e<l;++e){const t=p[e];if(0===t){const t=0===e?0:f[e-1];i[t*h+0]=e;for(let e=1;e<h;++e)i[t*h+e]=0;d[t]=a}}return[i,[t,h],d,u,c]}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nD(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:i,defaultValue:a}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${i.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n        ${r.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(i.dataId).values,c=n.data.get(a.dataId).values[0],[h,d,p,f,g]=tD(o,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}const sD={kernelName:Yn,backendName:"cpu",kernelFunc:nD};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rD(e,t,n,s,r){const i=w(s),a=t[0],o=r.length,l=[];let u=1,c=-1;for(let m=0;m<o;++m){const e=r[m];if(-1===e){if(-1!==c)throw new Error(Xf(c,m));c=m,l.push(1)}else{if(e<0)throw new Error(Jf(m,e));u*=e,l.push(e)}}if(-1!==c){if(u<=0)throw new Error(Yf());const e=Math.trunc(i/u);if(u*e!==i)throw new Error(Zf(s,l));l[c]=e}const h=w(l);if(h!==i)throw new Error(Qf(s,l));const d=s.length,p=[];if(d>0){p[d-1]=1;for(let e=d-2;e>=0;--e)p[e]=p[e+1]*s[e+1]}const f=[];if(o>0){f[o-1]=1;for(let e=o-2;e>=0;--e)f[e]=f[e+1]*l[e+1]}const g=A(n,a*o);for(let m=0;m<a;++m){let t=0;for(let n=0;n<d;++n)t+=e[m*d+n]*p[n];for(let e=0;e<o;++e)g[m*o+e]=Math.trunc(t/f[e]),t%=f[e]}return[g,[a,o],l]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function iD(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:i}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(n.data.get(r.dataId).values),o=n.data.get(s.dataId).values,l=Array.from(n.data.get(i.dataId).values),[u,c,h]=rD(o,s.shape,s.dtype,a,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}const aD={kernelName:Zn,backendName:"cpu",kernelFunc:iD};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oD(e,t,n,s,r,i=!1,a=0){const o=s.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?r[o-1]+1:0,h=c;if(h<0)throw new Error(eg());const d=t.slice();d[0]=h;const p=d.reduce(((e,t)=>e*t),1),f=A(n,p);if(0===o)return h>0&&f.fill(a),[f,d];if(h<=0)throw new Error(eg());let g=0,m=1,b=0,x=r[g];while(1){let t=0;if(m<o){if(t=r[m],x===t){++m;continue}if(x>=t)throw new Error(tg())}if(x<0||x>=h)throw new Error(ng(x,h));x>b&&f.fill(a,b*u,x*u);for(let n=g;n<m;++n){const t=s[n];if(t<0||t>=l[0])throw new Error(sg(n,s[n],l[0]));for(let n=0;n<u;n++)f[x*u+n]+=e[t*u+n]}if(i)for(let e=0;e<u;e++)f[x*u+e]/=m-g;if(g=m,++m,b=x+1,x=t,m>o)break}return b<h&&f.fill(a,b*u,h*u),[f,d]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lD(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${i.shape}`);if(r.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,[u,c]=oD(a,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}const uD={kernelName:Qn,backendName:"cpu",kernelFunc:lD};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cD(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${i.shape}`);if(r.shape[0]!==i.shape[0])throw new Error("segmentIds and indices should have same size.");const a=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(i.dataId).values,[u,c]=oD(a,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}const hD={kernelName:es,backendName:"cpu",kernelFunc:cD};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dD(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:i,defaultValue:a}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=xf(i,r,o),p=!1,f=n.bufferSync(r);let g;switch(i.dtype){case"bool":{const e=n.bufferSync(i),t=Boolean(n.data.get(a.dataId).values[0]);g=EF(f,e,o,d,c,u,l,h,t,p);break}case"float32":{const e=n.bufferSync(i),t=n.data.get(a.dataId).values[0];g=EF(f,e,o,d,c,u,l,h,t,p);break}case"int32":{const e=n.bufferSync(i),t=n.data.get(a.dataId).values[0];g=EF(f,e,o,d,c,u,l,h,t,p);break}case"string":{const e=n.bufferSync(i),t=or(n.data.get(a.dataId).values[0]);g=EF(f,e,o,d,c,u,l,h,t,p);break}default:throw new Error(`Unsupported type ${i.dtype}`)}return n.makeTensorInfo(o,g.dtype,g.values)}const pD={kernelName:ts,backendName:"cpu",kernelFunc:dD};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function fD(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:i,axis:a}=s,o=T(a,r.shape)[0],l=Hf(r,i,o),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const s=NT({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,s}))}const gD={kernelName:Xn,backendName:"cpu",kernelFunc:fD},mD=q$((e=>Math.sqrt(e))),bD=X$(jn,(e=>Math.sqrt(e))),xD={kernelName:jn,backendName:"cpu",kernelFunc:bD},yD={kernelName:ss,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,s=t;H$(n,"square");const r=s.data.get(n.dataId).values,i=new Float32Array(r.length);for(let o=0;o<r.length;++o){const e=r[o];i[o]=e*e}const a=s.write(i,n.shape,n.dtype);return{dataId:a,shape:n.shape,dtype:n.dtype}}},vD=sN(((e,t)=>{const n=e-t;return n*n})),wD=IN(ns,vD),kD={kernelName:ns,backendName:"cpu",kernelFunc:wD},ID=q$(((e,t)=>{const{pattern:n,replaceGlobal:s,rewrite:r}=t;return e.replace(new RegExp(n,s?"g":""),r)})),CD=J$(rs,ID),SD={kernelName:rs,backendName:"cpu",kernelFunc:CD},$D=X$(vs,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),ND={kernelName:vs,backendName:"cpu",kernelFunc:$D};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function TD(e,t,n,s){const r=va(e,t.dtype);for(let i=0;i<r.size;i++){const e=r.indexToLoc(i),a=new Array(e.length);for(let t=0;t<a.length;t++)a[t]=e[t]*n[t]+s[t];r.set(t.get(...a),...e)}return r}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ED(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s;H$(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:m,isSimpleSlice:b,begin:y,end:v,strides:w}=vl(r.shape,i,a,o,l,u,c,h,d);let k;if(g)k=EN({inputs:{x:r},backend:n,attrs:{shape:f}});else if(m||b){x(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=ol(y,v,w),t=NT({inputs:{x:r},backend:n,attrs:{begin:y,size:e}});k=EN({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=n.bufferSync(r),t=TD(p,e,w,y);k=n.makeTensorInfo(f,t.dtype,t.values)}return k}const RD={kernelName:is,backendName:"cpu",kernelFunc:ED};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class AD{constructor(e,t,n,s,r,i){this.separator=ar(e),this.nGramWidths=t,this.leftPad=ar(n),this.rightPad=ar(s),this.padWidth=r,this.preserveShort=i}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,i){for(let a=0;a<r;++a){const o=this.getPadWidth(i),l=Math.max(0,o-a),u=Math.max(0,o-(r-(a+1))),c=i-(l+u),h=t+(l>0?0:a-o);let d=0;d+=l*this.leftPad.length;for(let t=0;t<c;++t)d+=e[h+t].length;d+=u*this.rightPad.length;const p=l+u+c-1;d+=p*this.separator.length,n[s+a]=new Uint8Array(d);const f=n[s+a];let g=0;const m=e=>e.forEach((e=>f[g++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,s=t.length;if(s>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<s;++r){let s=t[r]>=e;if(s=s&&t[r]<=n,!s)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const r=s-1,i=A("int32",s);if(0===n||0===s){const e=new Array(n);for(let t=0;t<=r;++t)i[t]=0;return[e,i]}i[0]=0;for(let o=1;o<=r;++o){const e=t[o]-t[o-1];let n=0;this.nGramWidths.forEach((t=>{n+=this.getNumNGrams(e,t)})),this.preserveShort&&e>0&&0===n&&(n=1),i[o]=i[o-1]+n}const a=new Array(i[r]);for(let o=0;o<r;++o){const n=t[o];let s=i[o];if(this.nGramWidths.forEach((r=>{const i=t[o+1]-t[o],l=this.getNumNGrams(i,r);this.createNGrams(e,n,a,s,l,r),s+=l})),this.preserveShort&&s===i[o]){const r=t[o+1]-t[o];if(0===r)continue;const i=r+2*this.padWidth,l=1;this.createNGrams(e,n,a,s,l,i)}}return[a,i]}}function _D(e,t,n,s,r,i,a,o){return new AD(n,s,r,i,a,o).compute(e,t)}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function FD(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,d=n.data.get(c.dataId).values,p=n.data.get(h.dataId).values,[f,g]=_D(d,p,r,i,a,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",g)]}const DD={kernelName:as,backendName:"cpu",kernelFunc:FD};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function OD(e,t,n,s){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)s.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let i=e.indexOf(r);while(-1!==i){const t=e.subarray(0,i);n&&0===t.length||s.push(t),e=e.subarray(i+1),i=e.indexOf(r)}return void(n&&0===e.length||s.push(e))}let r=0;for(let i=0;i<e.length+1;i++)if(i===e.length||-1!==t.indexOf(e[i])){const t=e.subarray(r,i);n&&0===t.length||s.push(t),r=i+1}}function LD(e,t,n){const s=e.length,r=[];let i=0,a=0;const o=new Array(s);for(let d=0;d<s;++d){const s=r.length;OD(e[d],t,n,r);const l=r.length-s;o[d]=l,i+=l,a=Math.max(a,l)}const l=A("int32",2*i),u=new Array(i),c=[s,a];let h=0;for(let d=0;d<s;++d)for(let e=0;e<o[d];++e)l[2*h]=d,l[2*h+1]=e,u[h]=r[h],++h;return[l,u,c]}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function MD(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:i,delimiter:a}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.data.get(i.dataId).values,l=n.data.get(a.dataId).values[0],[u,c,h]=LD(o,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}const zD={kernelName:os,backendName:"cpu",kernelFunc:MD};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function PD(e,t){const n=A("int32",e.length);for(let s=0;s<e.length;++s)n[s]=tr(e[s]).modulo(t).getLowBitsUnsigned();return n}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function BD(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const a=n.data.get(i.dataId).values,o=PD(a,r);return n.makeTensorInfo(i.shape,"int32",o)}const WD={kernelName:ls,backendName:"cpu",kernelFunc:BD},UD=X$(cs,(e=>Math.tan(e))),VD={kernelName:cs,backendName:"cpu",kernelFunc:UD},GD=X$(hs,(e=>Math.tanh(e))),HD={kernelName:hs,backendName:"cpu",kernelFunc:GD};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jD(e){const{inputs:t,backend:n}=e,{tensor:s,indices:r,updates:i}=t,{sliceRank:a,numUpdates:o,sliceSize:l,strides:u,outputSize:c}=xf(i,r,s.shape),h=!1,d=n.bufferSync(r),p=n.bufferSync(i),f=n.bufferSync(s),g=EF(d,p,s.shape,c,l,o,a,u,f,h);return n.makeTensorInfo(s.shape,g.dtype,g.values)}const KD={kernelName:Ln,backendName:"cpu",kernelFunc:jD};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qD(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const s=va(n,e.dtype);for(let r=0;r<s.values.length;++r){const t=s.indexToLoc(r),n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=t[s]%e.shape[s];const i=e.locToIndex(n);s.values[r]=e.values[i]}return s}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function XD(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:i}=s;H$(r,"tile");const a=qD(n.bufferSync(r),i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const JD={kernelName:ds,backendName:"cpu",kernelFunc:XD},YD=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function ZD(e,t,n=0,s=e.length-1){while(s>n){if(s-n>600){const r=s-n+1,i=t-n+1,a=Math.log(r),o=.5*Math.exp(2*a/3),l=.5*Math.sqrt(a*o*(r-o)/r)*Math.sign(i-r/2),u=Math.max(n,Math.floor(t-i*o/r+l)),c=Math.min(s,Math.floor(t+(r-i)*o/r+l));ZD(e,t,u,c)}const r=e[t];let i=n,a=s;m(e,n,t),YD(e[s],r)>0&&m(e,n,s);while(i<a){m(e,i,a),i++,a--;while(YD(e[i],r)<0)i+=1;while(YD(e[a],r)>0)a-=1}0===YD(e[n],r)?m(e,n,a):(a+=1,m(e,a,s)),a<=t&&(n=a+1),t<=a&&(s=a-1)}}function QD(e,t,n,s,r){const i=t[t.length-1],[a,o]=[e.length/i,i],l=R(n,a*s),u=R("int32",a*s);for(let h=0;h<a;h++){const t=h*o,n=e.subarray(t,t+o);let i=new Array(n.length);n.forEach(((e,t)=>i[t]={value:e,index:t})),s<i.length&&(ZD(i,s),i=i.slice(0,s)),r&&i.sort(YD);const a=h*s,c=l.subarray(a,a+s),d=u.subarray(a,a+s);for(let e=0;e<s;e++)c[e]=i[e].value,d[e]=i[e].index}const c=t.slice();return c[c.length-1]=s,[va(c,n,l),va(c,"int32",u)]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eO(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:i,sorted:a}=s;H$(r,"topk");const o=n.data.get(r.dataId).values,[l,u]=QD(o,r.shape,r.dtype,i,a);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}const tO={kernelName:ps,backendName:"cpu",kernelFunc:eO};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nO(e){const{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:i}=t,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,d,p]=r.shape,[f,g]=null!=u?u:[h,d],m=[c,f,g,p],b=V(r.shape),x=b[0],y=b[1],v=b[2],k=V(m),I=k[0],C=k[1],S=k[2],$=R(r.dtype,w(m));$.fill(l);const N=s.data.get(r.dataId).values,T=s.data.get(i.dataId).values;for(let w=0;w<c;++w){const e=1===i.shape[0]?T:T.subarray(8*w,8*w+8);for(let t=0;t<f;++t)for(let n=0;n<g;++n)for(let s=0;s<p;++s){let r;const i=e[6]*n+e[7]*t+1;if(0===i)continue;const u=(e[0]*n+e[1]*t+e[2])/i,c=(e[3]*n+e[4]*t+e[5])/i,p=rO(u,d,o),f=rO(c,h,o);switch(a){case"nearest":r=cO(N,h,d,x,y,v,w,f,p,s,l);break;case"bilinear":r=hO(N,h,d,x,y,v,w,f,p,s,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}const g=w*I+t*C+n*S+s;$[g]=r}return s.makeTensorInfo(m,r.dtype,$)}const E=s.write($,m,r.dtype);return{dataId:E,shape:r.shape,dtype:r.dtype}}const sO={kernelName:fs,backendName:"cpu",kernelFunc:nO};function rO(e,t,n){switch(n){case"reflect":return iO(e,t);case"wrap":return aO(e,t);case"nearest":return lO(e,t);case"constant":default:return oO(e,t)}}function iO(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return f(0,n,t-1)}function aO(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return f(0,n,t-1)}function oO(e,t){return e}function lO(e,t){return f(0,e,t-1)}function uO(e,t,n,s,r,i,a,o,l,u,c){const h=a*s+o*r+l*i+u;return 0<=o&&o<t&&0<=l&&l<n?e[h]:c}function cO(e,t,n,s,r,i,a,o,l,u,c){const h=Math.round(o),d=Math.round(l);return uO(e,t,n,s,r,i,a,h,d,u,c)}function hO(e,t,n,s,r,i,a,o,l,u,c){const h=Math.floor(o),d=Math.floor(l),p=h+1,f=d+1,g=(f-l)*uO(e,t,n,s,r,i,a,h,d,u,c)+(l-d)*uO(e,t,n,s,r,i,a,h,f,u,c),m=(f-l)*uO(e,t,n,s,r,i,a,p,d,u,c)+(l-d)*uO(e,t,n,s,r,i,a,p,f,u,c);return(p-o)*g+(o-h)*m}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function dO(e,t,n,s){const r=T(t,n)[0],i=[1,n[0],1];for(let f=0;f<r;f++)i[0]*=n[f];i[1]=n[r];for(let f=r+1;f<n.length;f++)i[2]*=n[f];const a=new Map,o=new Int32Array(n[r]),l=new Cr(i,s,e),u=[],c=1===i[0]&&1===i[2];for(let f=0;f<n[r];f++){let t;if(c)t=e[f].toString();else{const e=[];for(let t=0;t<i[0];t++)for(let n=0;n<i[2];n++)e.push(l.get(t,f,n));t=e.join(",")}const n=a.get(t);if(null!=n)o[f]=n;else{const e=a.size;a.set(t,e),o[f]=e,u.push(f)}}const h=i.slice();h[1]=a.size;const d=new Cr(h,s);u.forEach(((e,t)=>{for(let n=0;n<i[0];n++)for(let s=0;s<i[2];s++)d.set(l.get(n,e,s),n,t,s)}));const p=n.slice();return p[r]=h[1],{outputValues:d.values,outputShape:p,indices:o}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pO(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:i}=t;H$(i,"unique");const a=s.data.get(i.dataId).values,{outputValues:o,outputShape:l,indices:u}=dO(a,r,i.shape,i.dtype);return[s.makeTensorInfo(l,i.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}const fO={kernelName:ms,backendName:"cpu",kernelFunc:pO};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gO(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:i}=s;i<0&&(i+=r.shape.length);const a=r.shape.length,o=r.shape[i],l=new Array(a-1);let u=0;for(let p=0;p<a;p++)p!==i&&(l[u++]=r.shape[p]);const c=new Array(a).fill(0),h=r.shape.slice();h[i]=1;const d=new Array(o);for(let p=0;p<d.length;p++){c[i]=p;const e=NT({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});d[p]=EN({inputs:{x:e},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(e)}return d}const mO={kernelName:bs,backendName:"cpu",kernelFunc:gO};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bO(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:i}=t,{numSegments:a}=s;H$(r,"unsortedSegmentSum");const o=r.shape.length,l=i.shape.length,u=[],c=[],h=o-l;let d=i;for(let f=0;f<h;++f){const e=oR({inputs:{input:d},backend:n,attrs:{dim:f+1}});d=e,c.push(e)}for(let f=0;f<a;++f){const e=nr(f,"int32"),t=n.makeTensorInfo([],"int32",e),s=qE({inputs:{a:t,b:d},backend:n}),i=wN({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),a=PE({inputs:{a:i,b:r},backend:n}),o=WE({inputs:{x:a},backend:n,attrs:{axis:0,keepDims:!1}});u.push(o),c.push(t),c.push(s),c.push(i),c.push(a),c.push(o)}const p=A_({inputs:u,backend:n,attrs:{axis:0}});return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}const xO={kernelName:xs,backendName:"cpu",kernelFunc:bO},yO=[DN,MN,PN,WN,TN,VN,qN,JN,ZN,eT,nT,rT,aT,uT,hT,bT,yT,wT,IT,_N,ST,RT,DT,MT,PT,kN,UT,GT,mN,jT,YT,QT,tE,sE,iE,oE,uE,hE,pE,gE,bE,yE,wE,IE,SE,NE,EE,AE,_E,FE,DE,LE,GE,Z$,jE,XE,sR,aR,lR,hR,SR,NR,ER,_R,OR,MR,PR,UR,HR,qR,YR,eN,QR,XT,tA,sA,iA,nN,lA,hA,fA,bA,yA,kA,CA,NA,EA,AA,DA,MA,PA,WA,VA,HA,KA,XA,YA,e_,n_,i_,u_,BE,d_,g_,x_,w_,C_,$_,R_,__,D_,M_,aN,B_,J_,eF,oF,cF,yN,fR,dF,lN,cN,RN,fF,mF,xF,vF,kF,IF,SF,TF,AF,LF,zF,UF,pN,GF,jF,qF,TT,o_,ZF,eD,sD,aD,uD,hD,pD,gD,xD,yD,kD,SD,ND,RD,DD,zD,WD,xR,UE,VD,HD,KD,JD,tO,sO,jN,fO,mO,xO,T_];for(const aJ of yO)Fs(aJ);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const vO={},wO={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function kO(e,t){vO[e]=t}function IO(e,t){if(!(e in vO)||null!=t){const n=SO(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;vO[e]=n}const n=vO[e];return null==n||n.isContextLost()?(delete vO[e],IO(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),vO[e])}function CO(e){if(ie().getBool("IS_SAFARI")||"undefined"===typeof OffscreenCanvas||2!==e){if("undefined"!==typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}return new OffscreenCanvas(300,150)}function SO(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?CO(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete vO[e]}),!1),ie().getBool("SOFTWARE_WEBGL_ENABLED")&&(wO.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",wO)||n.getContext("experimental-webgl",wO):n.getContext("webgl2",wO)}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var $O,NO,TO;function EO(e,t){return[t,e]}function RO(e,t){return e*t}function AO(e){const t=w(e),n=Math.ceil(t/4);return C(n)}function _O(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function FO(e,t){const[n,s]=_O(e,t);return n*s*4}function DO(e,t){const n=e;let s,r,i,a,o,l,u,c,h,d;return 2===ie().getNumber("WEBGL_VERSION")?(s=n.R32F,r=n.R16F,i=n.RGBA16F,a=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,d=n.FLOAT,l=n.RGBA8):(s=e.RGBA,r=e.RGBA,i=e.RGBA,a=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT,l=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:a,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:d}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function OO(e,t){const n=t();return ie().getBool("DEBUG")&&LO(e),n}function LO(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+BO(e,t))}(function(e){e[e["DENSE"]=0]="DENSE",e[e["SHARED_BATCH"]=1]="SHARED_BATCH"})($O||($O={})),function(e){e[e["RENDER"]=0]="RENDER",e[e["UPLOAD"]=1]="UPLOAD",e[e["PIXELS"]=2]="PIXELS",e[e["DOWNLOAD"]=3]="DOWNLOAD"}(NO||(NO={})),function(e){e[e["UNPACKED_FLOAT16"]=0]="UNPACKED_FLOAT16",e[e["UNPACKED_FLOAT32"]=1]="UNPACKED_FLOAT32",e[e["PACKED_4X1_UNSIGNED_BYTE"]=2]="PACKED_4X1_UNSIGNED_BYTE",e[e["PACKED_2X2_FLOAT32"]=3]="PACKED_2X2_FLOAT32",e[e["PACKED_2X2_FLOAT16"]=4]="PACKED_2X2_FLOAT16"}(TO||(TO={}));const MO=5.96e-8,zO=65504;function PO(e){return!!(ie().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||MO<Math.abs(e)&&Math.abs(e)<zO)}function BO(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function WO(e,t){return uL(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function UO(e,t){const n=uL(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(OO(e,(()=>e.shaderSource(n,t))),OO(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function VO(e,t){const n=uL(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(OO(e,(()=>e.shaderSource(n,t))),OO(e,(()=>e.compileShader(n))),ie().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw HO(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const GO=/ERROR: [0-9]+:([0-9]+):/g;function HO(e,t){const n=GO.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const s=+n[1],r=e.split("\n"),i=r.length.toString().length+2,a=r.map(((e,t)=>S((t+1).toString(),i)+e));let o=0;for(let h=0;h<a.length;h++)o=Math.max(a[h].length,o);const l=a.slice(0,s-1),u=a.slice(s-1,s),c=a.slice(s);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${S(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}function jO(e){return uL(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function KO(e,t){if(OO(e,(()=>e.linkProgram(t))),!ie().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function qO(e,t){if(OO(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function XO(e,t){const n=uL(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return OO(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),OO(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function JO(e,t){const n=uL(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return OO(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),OO(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function YO(e){return uL(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function ZO(e,t){const n=ie().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0){const n=`[${e}x${t}]`;throw new Error("Requested texture size "+n+" is invalid.")}if(e>n||t>n){const s=`[${e}x${t}]`,r=`[${n}x${n}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function QO(e){return uL(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function eL(e,t,n,s,r,i,a){const o=e.getAttribLocation(t,n);return-1!==o&&(OO(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,s))),OO(e,(()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,i,a))),OO(e,(()=>e.enableVertexAttribArray(o))),!0)}function tL(e,t,n){cL(e,n),OO(e,(()=>e.activeTexture(e.TEXTURE0+n))),OO(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function nL(e,t,n){return uL(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function sL(e,t,n){return e.getUniformLocation(t,n)}function rL(e,t,n,s){OO(e,(()=>tL(e,t,s))),OO(e,(()=>e.uniform1i(n,s)))}function iL(e,t,n){OO(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),OO(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function aL(e,t){OO(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),OO(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function oL(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+lL(e,t))}function lL(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function uL(e,t,n){const s=OO(e,(()=>t()));if(null==s)throw new Error(n);return s}function cL(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n){const e=`[gl.TEXTURE0, gl.TEXTURE${n}]`;throw new Error(`textureUnit must be in ${e}.`)}}function hL(e,t=2){return w(e.slice(0,e.length-t))}function dL(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function pL(e){let t=[1,1,1];const n=0===e.length||1===e.length&&1===e[0];return n||(t=[hL(e),...dL(e)]),t}function fL(e,t=!1){let n=ie().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=ie().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");if(s===1/0&&ie().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=n/2),t&&(n*=2,s*=2,e=e.map(((t,n)=>n>=e.length-2?g(e[n]):e[n])),1===e.length&&(e=[2,e[0]])),2!==e.length){const t=E(e);e=t.newShape}let r=w(e),i=null;e.length<=1&&r<=n?i=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?i=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?i=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?i=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?i=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(i=[e[0],e[1]*e[2]*e[3]]);const a=null!=i&&Math.max(...i)>s&&Math.min(...i)<=(t?2:1)&&Math.min(...i)>0;if(null==i||a)if(t){const t=hL(e);let n=2,s=2;e.length&&([n,s]=dL(e)),r=t*(n/2)*(s/2),i=C(r).map((e=>2*e))}else i=C(r);return i}function gL(e){return e%2===0}function mL(e,t){if(e=e.slice(-2),t=t.slice(-2),k(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e[e.length-1],s=t[t.length-1];if(n===s)return!0;if(gL(n)&&gL(s)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&gL(e[0])&&gL(t[0])}let bL,xL;function yL(e){if(null==bL){const t=IO(e);bL=t.getParameter(t.MAX_TEXTURE_SIZE)}return bL}function vL(e){if(null==xL){const t=IO(e);xL=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,xL)}function wL(e){if(0===e)return 0;let t;const n=IO(e);return t=kL(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:kL(n,"EXT_disjoint_timer_query")?1:0,t}function kL(e,t){const n=e.getExtension(t);return null!=n}function IL(e){try{const t=IO(e);if(null!=t)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function CL(e){if(0===e)return!1;const t=IO(e);if(1===e){if(!kL(t,"OES_texture_float"))return!1}else if(!kL(t,"EXT_color_buffer_float"))return!1;const n=$L(t);return n}function SL(e){if(0===e)return!1;const t=IO(e);if(1!==e){if(kL(t,"EXT_color_buffer_float"))return $L(t);const e="EXT_color_buffer_half_float";if(kL(t,e)){const n=t.getExtension(e);return NL(t,n)}return!1}if(!kL(t,"OES_texture_float"))return!1;if(!kL(t,"WEBGL_color_buffer_float"))return!1;const n=$L(t);return n}function $L(e){const t=DO(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);const s=1,r=1;e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,s,r,0,t.textureFormatFloat,t.textureTypeFloat,null);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(i),a}function NL(e,t){const n=DO(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s);const r=1,i=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,r,i,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(a),o}function TL(e){if(2!==e)return!1;const t=IO(e),n=null!=t.fenceSync;return n}function EL(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&x("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const RL=ie();
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function AL(){let e,t,n,s,r,i,a,o,l,u;return 2===ie().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",s="in",r="texture",i="outputColor",a="out vec4 outputColor;",o=ie().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",s="varying",r="texture2D",i="gl_FragColor",a="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:i,defineOutput:a,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _L(e,t,n="index"){const s=V(t);return s.map(((t,r)=>{const i=`int ${e[r]} = ${n} / ${t}`,a=r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`;return`${i}; ${a};`})).join("")}function FL(e,t,n="index"){const s=V(t);return s.map(((t,r)=>{const i=`int ${e[r]} = ${n} / outShapeStrides[${r}]`,a=r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`;return`${i}; ${a};`})).join("")}function DL(e,t){const n=e.length,s=e.map((e=>`${t}[${e}]`)),r=new Array(n-1);r[n-2]=s[n-1];for(let i=n-3;i>=0;--i)r[i]=`(${r[i+1]} * ${s[i+1]})`;return r}function OL(e,t,n="index"){const s=e.map(((e,t)=>t)),r=DL(s,t);return r.map(((t,s)=>{const i=`int ${e[s]} = ${n} / ${r[s]}`,a=s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r[s]}`:`index -= ${e[s]} * ${r[s]}`;return`${i}; ${a};`})).join("")}function LL(e){const t=V(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}function ML(){return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n"}RL.registerFlag("HAS_WEBGL",(()=>RL.getNumber("WEBGL_VERSION")>0)),RL.registerFlag("WEBGL_VERSION",(()=>IL(2)?2:IL(1)?1:0)),RL.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),RL.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===RL.get("WEBGL_VERSION"))),RL.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),RL.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),RL.registerFlag("WEBGL_PACK",(()=>RL.getBool("HAS_WEBGL"))),RL.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>RL.getBool("WEBGL_PACK"))),RL.registerFlag("WEBGL_PACK_CLIP",(()=>RL.getBool("WEBGL_PACK"))),RL.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>RL.getBool("WEBGL_PACK"))),RL.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>RL.getBool("WEBGL_PACK"))),RL.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>RL.getBool("WEBGL_PACK"))),RL.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>RL.getBool("WEBGL_PACK"))),RL.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>RL.getBool("WEBGL_PACK"))),RL.registerFlag("WEBGL_PACK_REDUCE",(()=>RL.getBool("WEBGL_PACK"))),RL.registerFlag("WEBGL_LAZILY_UNPACK",(()=>RL.getBool("WEBGL_PACK"))),RL.registerFlag("WEBGL_CONV_IM2COL",(()=>RL.getBool("WEBGL_PACK"))),RL.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>yL(RL.getNumber("WEBGL_VERSION")))),RL.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>vL(RL.getNumber("WEBGL_VERSION")))),RL.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=RL.getNumber("WEBGL_VERSION");return 0===e?0:wL(e)})),RL.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>RL.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ri())),RL.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>CL(RL.getNumber("WEBGL_VERSION")))),RL.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!RL.getBool("WEBGL_FORCE_F16_TEXTURES")&&RL.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),RL.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>SL(RL.getNumber("WEBGL_VERSION")))),RL.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>TL(RL.getNumber("WEBGL_VERSION")))),RL.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>{const e=RL.getBool("WEBGL_RENDER_FLOAT32_ENABLED");return e?4:0})),RL.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if("number"!==typeof e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),RL.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>ri()?1:-1),(e=>{if("number"!==typeof e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${e}.`);if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),RL.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),RL.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),RL.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),RL.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),RL.registerFlag("WEBGL_EXP_CONV",(()=>!1)),RL.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>RL.getBool("IS_TEST"))),RL.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),RL.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),RL.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),RL.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));const zL="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:PL}=a;function BL(e,t,n){const s=[];if(e.forEach((e=>{const t=w(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=TM(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:s.push(`uniform int ${e.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${e.name}Shape;`);break;default:break}s.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break;default:break}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{s.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const r=s.join("\n"),i=e.map((e=>VL(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),a=t.texShape,o=AL(),l=jL(o);let u,c,h=XL(o);t.isPacked?(u=GL(t.logicalShape,a,n.enableShapeUniforms),c=qL(o)):(u=HL(t.logicalShape,a,n.enableShapeUniforms),c=KL(o)),n.packedInputs&&(h+=QL);const d=[h,l,c,r,u,i,n.userCode].join("\n");return d}function WL(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return pM(e,t);case 1:return gM(e,t);case 2:return bM(e,t);case 3:return yM(e,t);case 4:return wM(e,t);case 5:return kM(e);case 6:return IM(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function UL(e,t){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return dM(e);case 1:return fM(e,t);case 2:return mM(e,t);case 3:return xM(e,t);default:return vM(e,t)}}function VL(e,t,n=!1,s){let r="";r+=n?UL(e,s):WL(e,s);const i=e.shapeInfo.logicalShape,a=t.logicalShape;return i.length<=a.length&&(r+=n?SM(e,t):$M(e,t)),r}function GL(e,t,n){switch(e.length){case 0:return eM();case 1:return tM(e,t,n);case 2:return uM(e,t,n);case 3:return sM(e,t,n);default:return iM(e,t,n)}}function HL(e,t,n){switch(e.length){case 0:return eM();case 1:return nM(e,t,n);case 2:return cM(e,t,n);case 3:return rM(e,t,n);case 4:return aM(e,t,n);case 5:return oM(e,t);case 6:return lM(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function jL(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}function KL(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}function qL(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}function XL(e){const t=`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${JL}\n    ${YL}\n    ${ZL}\n  `;return t}const JL="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",YL="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",ZL="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",QL="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function eM(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function tM(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===s[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${s[1]}.0);\n      }\n    `:1===s[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${s[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);\n    }\n  `}function nM(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}function sM(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),i=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}function rM(e,t,n){if(n){const t=FL(["r","c","d"],e);return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${t}\n    return ivec3(r, c, d);\n  }\n`}const s=_L(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec3(r, c, d);\n    }\n  `}function iM(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),i=r*Math.ceil(e[e.length-2]/2);let a=i,o="",l="b, r, c";for(let u=2;u<e.length-1;u++)a*=e[e.length-u-1],o=`\n      int b${u} = index / ${a};\n      index -= b${u} * ${a};\n    `+o,l=`b${u}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}function aM(e,t,n){if(n){const t=FL(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${t}\n      return ivec4(r, c, d, d2);\n    }\n  `}const s=_L(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec4(r, c, d, d2);\n    }\n  `}function oM(e,t){const n=_L(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}function lM(e,t){const n=_L(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}function uM(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(k(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}function cM(e,t,n){return k(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}function hM(e){return`offset${e}`}function dM(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=AL();return`\n    vec4 ${n}() {\n      return ${s.texture2D}(${t}, halfCR);\n    }\n  `}function pM(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;const[r,i]=e.shapeInfo.texShape;if(1===r&&1===i)return`\n      float ${s}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const a=hM(n);if(t)return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${a});\n      return sampleTexture(${n}, uv);\n    }\n  `}function fM(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,i=AL();if(t)return`\n    vec4 ${s}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `;const a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${i.texture2D}(${n}, uv);\n    }\n  `}function gM(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${s}(int index) {\n        ${CM(e)}\n      }\n    `;const r=e.shapeInfo.texShape,i=r[0],a=r[1];if(1===a&&1===i)return`\n      float ${s}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=hM(n);return 1===a?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${i}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===i?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${i}, ${a}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}function mM(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=e.shapeInfo.texShape,a=i[0],o=i[1],l=AL();if(null!=i&&k(n,i))return t?`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `:`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${a}.0);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `;if(t)return`\n    vec4 ${r}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `;const u=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],c=Math.ceil(n[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `}function bM(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=e.shapeInfo.texShape;if(null!=i&&k(n,i)){if(t)return`\n      float ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `;const e=i[0],n=i[1];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${n}.0, ${e}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `}const{newShape:a,keptDims:o}=E(n),l=a;if(l.length<n.length){const n=EM(e,l),s=["row","col"];return`\n      ${WL(n,t)}\n      float ${r}(int row, int col) {\n        return ${r}(${RM(s,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${CM(e)}\n      }\n    `;const u=i[0],c=i[1],h=hM(s);return 1===c?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `:1===u?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${s}, uv);\n    }\n  `:t?`\n      float ${r}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${s}, uv);\n  }\n`}function xM(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=e.shapeInfo.texShape,a=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===n[0]){const s=n.slice(1),i=[1,2],a=EM(e,s),o=["b","row","col"];return`\n        ${UL(a,t)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${RM(o,i)});\n        }\n      `}const o=AL();if(t)return`\n    vec4 ${r}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `;const l=a[0],u=a[1],c=Math.ceil(n[2]/2),h=c*Math.ceil(n[1]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${h}, ${c}, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `}function yM(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n[1]*n[2],a=n[2],{newShape:o,keptDims:l}=E(n),u=o;if(u.length<n.length){const n=EM(e,u),s=["row","col","depth"];return`\n        ${WL(n,t)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${RM(s,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${i}, ${a}, 1)));\n        ${CM(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===i&&null==p)return t?`\n      float ${r}(int row, int col, int depth) {\n        int stride1 = ${s}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${a}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${s}, uv);\n        }\n      `;if(d===a&&null==p)return t?`\n      float ${r}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;const f=hM(s);return t?`\n    float ${r}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${s}Shape[1] * ${s}Shape[2];\n      int stride1 = ${s}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n      return sampleTexture(${s}, uv);\n    }\n    `:`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${i} + col * ${a} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${s}, uv);\n      }\n  `}function vM(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=AL();if(t)return`\n    vec4 ${s}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);\n    }\n  `;const i=e.shapeInfo.logicalShape,a=i.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(i[a-1]/2);let d=h*Math.ceil(i[a-2]/2),p="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let g=2;g<a-1;g++)p=`int b${g}, `+p,d*=i[a-g-1],f=`b${g} * ${d} + `+f;return`\n    vec4 ${s}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${r.texture2D}(${n}, uv);\n    }\n  `}function wM(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),i=n[3],a=n[2]*i,o=n[1]*a,{newShape:l,keptDims:u}=E(n);if(l.length<n.length){const n=EM(e,l),s=["row","col","depth","depth2"];return`\n      ${WL(n,t)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${RM(s,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${a}, ${i}, 1)));\n        ${CM(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1],f=`int stride2 = ${s}Shape[3];`,g=`int stride1 = ${s}Shape[2] * stride2;`,m=`int stride0 = ${s}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${g}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${a}, ${i}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;if(p===i&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;const b=hM(s);return t?`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${g}\n      ${m}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${b});\n      return sampleTexture(${s}, uv);\n    }\n  `:`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} +\n          depth * ${i} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${b});\n      return sampleTexture(${s}, uv);\n    }\n  `}function kM(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],i=t[3]*r,a=t[2]*i,o=t[1]*a,{newShape:l,keptDims:u}=E(t);if(l.length<t.length){const t=EM(e,l),n=["row","col","depth","depth2","depth3"];return`\n      ${WL(t)}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${RM(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${a}, ${i}, ${r})) +\n          depth3;\n        ${CM(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${a}, ${i}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===r&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=hM(n);return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${a} + depth * ${i} +\n          depth2 * ${r} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${d}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function IM(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:i}=E(t);if(r.length<t.length){const t=EM(e,r),n=["row","col","depth","depth2","depth3","depth4"];return`\n      ${WL(t)}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${RM(n,i)});\n      }\n    `}const a=t[5],o=t[4]*a,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${a}, 1)));\n        ${CM(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===c&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${a})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const g=hM(n);return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${a} + depth4 + ${g};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function CM(e){const t=e.name,n=w(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function SM(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",i=e.shapeInfo.logicalShape.length,a=t.logicalShape.length,o=PL(e.shapeInfo.logicalShape,t.logicalShape),l=NM(a),u=a-i;let c;const h=["x","y","z","w","u","v"];c=0===i?"":a<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let d="";d=a<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let p="return outputValue;";const f=w(e.shapeInfo.logicalShape),g=1===f,m=w(t.logicalShape),b=1===m;if(1!==i||g||b){if(g&&!b)p=1===a?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=i-2,t=i-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${s}(${d});\n      ${p}\n    }\n  `}function $M(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",i=t.texShape,a=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&k(a,i))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=NM(l),c=PL(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let d;const p=["x","y","z","w","u","v"];d=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${p[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+h]}`)).join(", "),`\n    float ${r}() {\n      ${u} coords = getOutputCoords();\n      ${d}\n      return get${s}(${f});\n    }\n  `}function NM(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function TM(e,t,n){const{newShape:s,keptDims:r}=E(t),i=t.length,a=e&&3===i&&1===t[0],o=a?t.slice(1):s,l=!e&&i>1&&!k(t,n)&&s.length<i||a,u=l?o:t;return{useSqueezeShape:l,uniformShape:u,keptDims:r}}function EM(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function RM(e,t){return t.map((t=>e[t])).join(", ")}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function AM(e,t,n,s){const r=n.map(((e,n)=>{const s={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(s.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:s}})),i=r.map((e=>e.shapeInfo)),a={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},o=BL(r,a,t),l=VO(e.gl,o),u=e.createProgram(l);return ie().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:a,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(e.buildVao(u),Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:i,outShapeInfo:a},_M(e,t,u)))}function _M(e,t,n){const s=[],r=[];let i,a,o,l=null,u=null;u=e.getUniformLocation(n,"NAN",!1),1===ie().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(n,"INFINITY",!1));const c=!1;for(const h of t.variableNames){const r={name:h,uniform:e.getUniformLocation(n,h,c),offset:e.getUniformLocation(n,`offset${h}`,c)};t.enableShapeUniforms&&(r.shape=e.getUniformLocation(n,`${h}Shape`,c),r.texShape=e.getUniformLocation(n,`${h}TexShape`,c)),s.push(r)}if(t.enableShapeUniforms&&(i=e.getUniformLocation(n,"outShape",c),o=e.getUniformLocation(n,"outShapeStrides",c),a=e.getUniformLocation(n,"outTexShape",c)),t.customUniforms)for(const h of t.customUniforms)r.push(e.getUniformLocation(n,h.name,c));return{variablesLocations:s,customUniformLocations:r,infLoc:l,nanLoc:u,outShapeLocation:i,outShapeStridesLocation:o,outTexShapeLocation:a}}function FM(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const s=e.logicalShape,r=t[n],i=r.shape;if(!k(s,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${i} must match`);if(e.isUniform&&r.isUniform)return;const a=e.texShape,o=r.isUniform?null:r.texData.texShape;if(!k(a,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${o} must match`)}))}function DM(e,t,n,s,r){t.program.enableShapeUniforms||(FM(t.inShapeInfos,n),FM([t.outShapeInfo],[s]));const i=s.texData.texture,a=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(i.texture,a[0],a[1]):e.setOutputMatrixTexture(i.texture,a[0],a[1]),e.setProgram(t.webGLProgram),e.bindVertexArray(t.webGLProgram.vao),1===ie().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN);for(let l=0;l<n.length;++l){const s=n[l],{uniform:r,offset:i,shape:a,texShape:o}=t.variablesLocations[l];if(a){const{uniformShape:n}=TM(t.program.packedInputs,s.shape,s.texData.texShape);switch(n.length){case 1:e.gl.uniform1iv(a,new Int32Array(n));break;case 2:e.gl.uniform2iv(a,new Int32Array(n));break;case 3:e.gl.uniform3iv(a,new Int32Array(n));break;case 4:e.gl.uniform4iv(a,new Int32Array(n));break;default:break}}if(o&&e.gl.uniform2i(o,s.texData.texShape[0],s.texData.texShape[1]),null!=r)if(s.isUniform)if(w(s.shape)<2)e.gl.uniform1f(r,s.uniformValues[0]);else{let t=s.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(r,t)}else null!=s.texData.slice&&null!=i&&e.gl.uniform1i(i,s.texData.slice.flatOffset),e.setInputMatrixTexture(s.texData.texture.texture,r,l)}const o=t.outShapeLocation;if(o)switch(s.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(s.shape));break;default:break}if(t.outShapeStridesLocation){const n=V(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n));break;default:break}}if(t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r)for(let l=0;l<t.program.customUniforms.length;++l){const n=t.program.customUniforms[l],s=t.customUniformLocations[l],i=r[l];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}}e.executeProgram()}function OM(e,t,n){let s="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const i=t.texData.texShape,{useSqueezeShape:a,uniformShape:o,keptDims:l}=TM(e.packedInputs,t.shape,i);let u="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=V(o);h=`${e[0]===i[1]}_${e[e.length-1]===i[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const d=t.shape.length,p=2===o.length&&k(t.shape,i),f=1===w(t.shape),g=go(t.shape,n.shape),m=!e.packedInputs&&d===n.shape.length&&k(i,n.texData.texShape),b=e.packedInputs||o.length>2?"":`${i[0]>1}_${i[1]>1}`;s+=`${d}_${m}_${a?l:""}_${o.length}_${f}_${g}_${p}_${u}_${c}_${h}_${b}_${r}`}else{const e=t.isUniform?"uniform":t.texData.texShape;s+=`${t.shape}_${e}_${r}`}}));const r=e.userCode;let i=e.constructor.name;return i+="_"+s+"_"+r+`${ie().getNumber("WEBGL_VERSION")}`,i}function LM(e){return ie().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class MM{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=$O.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=AL();this.outputShape=e,this.enableShapeUniforms=LM(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?FL(["r","c","d"],e):_L(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class zM{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=$O.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=AL();this.outputShape=e,this.enableShapeUniforms=LM(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?FL(["r","c","d"],e):_L(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class PM{constructor(e){this.variableNames=["A"],this.outTexUsage=NO.DOWNLOAD;const t=AL();this.outputShape=e,this.userCode=`\n      ${zL}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class BM{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=NO.DOWNLOAD;const t=AL();this.outputShape=e,this.userCode=`\n      ${zL}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const WM={R:0,G:1,B:2,A:3};class UM{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=AL();this.outputShape=e,this.enableShapeUniforms=LM(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let i="";for(let a=0;a<n.length;a++){const e=n[a];i+=`\n          if(offset == ${a}) {\n            result = values[${WM[e]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?ML():LL(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${s.texture2D}(A, uv);\n          ${i}\n        }\n        ${s.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class VM{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=AL();this.outputShape=e,this.enableShapeUniforms=LM(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let t=0;t<=1;t++){const r=2*i+t;s+=`\n          localCoords = coords;\n          if(localCoords[2] + ${t} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${t};\n          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${i};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${r}] = values[0];\n            } else if (offset == 1) {\n              result[${r}] = values[1];\n            } else if (offset == 2) {\n              result[${r}] = values[2];\n            } else {\n              result[${r}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?ML():LL(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${s}\n\n          ${n.output} = ${r};\n        }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function GM(e){const t=AL(),n=`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`;return UO(e,n)}function HM(e){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return XO(e,t)}function jM(e){const t=new Uint16Array([0,1,2,2,1,3]);return JO(e,t)}function KM(e,t,n,s,r,i){ZO(t,n);const a=YO(e),o=e.TEXTURE_2D;return OO(e,(()=>e.bindTexture(o,a))),OO(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),OO(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),OO(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),OO(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===ie().getNumber("WEBGL_VERSION")?OO(e,(()=>e.texImage2D(o,0,s,t,n,0,r,i,null))):OO(e,(()=>e.texStorage2D(o,1,s,t,n))),OO(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:a,texShape:[n,t]}}function qM(e){return e.internalFormatFloat}function XM(e,t,n,s){const[r,i]=EO(t,n);return KM(e,r,i,qM(s),s.textureFormatFloat,e.FLOAT)}function JM(e){return e.internalFormatHalfFloat}function YM(e,t,n,s){const[r,i]=EO(t,n);return KM(e,r,i,JM(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function ZM(e){return e.downloadTextureFormat}function QM(e,t,n,s){const[r,i]=EO(t,n);return KM(e,r,i,ZM(s),e.RGBA,e.UNSIGNED_BYTE)}function ez(e){return e.internalFormatPackedFloat}function tz(e,t,n,s){const[r,i]=_O(t,n);return KM(e,r,i,ez(s),e.RGBA,e.FLOAT)}function nz(e){return e.internalFormatPackedHalfFloat}function sz(e,t,n,s){const[r,i]=_O(t,n);return KM(e,r,i,nz(s),e.RGBA,s.textureTypeHalfFloat)}function rz(e,t,n){const s=0,r=12,i=20;OO(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n)));const a=eL(e,t,"clipSpacePos",n,3,i,s);return a&&eL(e,t,"uv",n,2,i,r)}function iz(e,t,n,s,r,i){let a,o,l;OO(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(a=new Uint8Array(n*s*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(a=new Float32Array(n*s*4),o=e.FLOAT,l=i.internalFormatPackedFloat),a.set(r),2===ie().getNumber("WEBGL_VERSION")?OO(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,o,a))):OO(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,s,0,e.RGBA,o,a))),OO(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function az(e,t,n){OO(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===ie().getNumber("WEBGL_VERSION")?OO(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):OO(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===ie().getNumber("WEBGL_VERSION")?OO(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):OO(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),OO(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function oz(e,t,n,s){const r=e.createBuffer();OO(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const i=4,a=4,o=i*a*t*n;return OO(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,o,e.STREAM_READ))),OO(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),OO(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}function lz(e,t,n){const s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function uz(e,t,n,s){const[r,i]=EO(t,n),a=4,o=new Uint8Array(RO(t*n,a));return OO(e,(()=>e.readPixels(0,0,r,i,s.downloadTextureFormat,e.UNSIGNED_BYTE,o))),new Float32Array(o.buffer)}function cz(e,t,n,s,r,i,a,o){const l=e,u=new Float32Array(FO(i,a));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function hz(e,t,n){const s=new Float32Array(t*n*4);return OO(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s))),s}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class dz{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=ie().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,kO(t,e)):this.gl=IO(t),e=this.gl,2===ie().getNumber("WEBGL_VERSION")){const t=e;this.createVertexArray=()=>OO(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>OO(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>OO(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>OO(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){const t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>OO(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>OO(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>OO(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>OO(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===ie().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=WO(this.gl,e),kL(this.gl,t))this.textureHalfFloatExtension=WO(this.gl,t);else if(ie().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),kL(this.gl,s))this.colorBufferHalfFloatExtension=WO(this.gl,s);else if(ie().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",kL(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!kL(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=HM(this.gl),this.indexBuffer=jM(this.gl),this.framebuffer=QO(this.gl),this.textureConfig=DO(this.gl,this.textureHalfFloatExtension)}get debug(){return ie().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;OO(e,(()=>e.finish())),OO(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),OO(e,(()=>e.deleteFramebuffer(this.framebuffer))),OO(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),OO(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),OO(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),XM(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),YM(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),QM(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),az(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),iz(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),sz(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),tz(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(aL(this.gl,this.framebuffer),this.outputTexture=null),OO(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>uz(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,s,r,i){return cz(this.gl,e,t,n,s,r,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return lz(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const s=oz(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(ie().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=s.clientWaitSync(r,0,0);return e===s.ALREADY_SIGNALED||e===s.CONDITION_SATISFIED},t=r}else ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>hz(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=GM(t));const n=jO(t);OO(t,(()=>t.attachShader(n,this.vertexShader))),OO(t,(()=>t.attachShader(n,e))),KO(t,n);const s=Object.assign(n,{vao:this.createVertexArray()});return this.debug&&qO(t,s),s}buildVao(e){this.setProgram(e),this.bindVertexArray(e.vao);const t=this.gl;OO(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),rz(t,e,this.vertexBuffer)}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(OO(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&qO(this.gl,this.program),OO(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?nL(this.gl,e,t):sL(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),OO(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),rL(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[s,r]=_O(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&qO(this.gl,this.program),oL(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}OO(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),OO(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=WO(this.gl,2===ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await $((()=>this.disposed||this.isQueryAvailable(e,ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl,n=t.getQueryParameter(e,t.QUERY_RESULT);return n/1e6}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT);return n/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=pz(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in ie().platform&&(n=ie().platform.setTimeoutCustom.bind(ie().platform)),$((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),iL(this.gl,e,this.framebuffer),this.debug&&oL(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(iL(this.gl,this.outputTexture,this.framebuffer),this.debug&&oL(this.gl)):aL(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const s=this.gl;iL(s,e,this.framebuffer),this.debug&&oL(s),this.outputTexture=e,OO(s,(()=>s.viewport(0,0,t,n))),OO(s,(()=>s.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),OO(this.gl,(()=>this.gl.scissor(e,t,n,s)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function pz(e){let t=0;for(;t<e.length;++t){const n=e[t]();if(!n)break}return t-1}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const{addImpl:fz,bincountImpl:gz,bincountReduceImpl:mz,bitwiseAndImpl:bz,castImpl:xz,ceilImpl:yz,concatImpl:vz,equalImpl:wz,expImpl:kz,expm1Impl:Iz,floorImpl:Cz,gatherNdImpl:Sz,gatherV2Impl:$z,greaterImpl:Nz,greaterEqualImpl:Tz,lessImpl:Ez,lessEqualImpl:Rz,linSpaceImpl:Az,logImpl:_z,maxImpl:Fz,maximumImpl:Dz,minimumImpl:Oz,multiplyImpl:Lz,negImpl:Mz,notEqualImpl:zz,prodImpl:Pz,raggedGatherImpl:Bz,raggedRangeImpl:Wz,raggedTensorToTensorImpl:Uz,rangeImpl:Vz,rsqrtImpl:Gz,scatterImpl:Hz,sigmoidImpl:jz,simpleAbsImpl:Kz,sliceImpl:qz,sparseFillEmptyRowsImpl:Xz,sparseReshapeImpl:Jz,sparseSegmentReductionImpl:Yz,sqrtImpl:Zz,staticRegexReplaceImpl:Qz,stridedSliceImpl:eP,stringNGramsImpl:tP,stringSplitImpl:nP,stringToHashBucketFastImpl:sP,subImpl:rP,tileImpl:iP,topKImpl:aP,transposeImpl:oP,uniqueImpl:lP}=o;
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uP(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function cP(e,t){return 1===t?[e]:uP(e,t)}function hP(e,t){if(1===e)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class dP{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=LM(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=cP("rc",this.rank),t=NM(this.rank),n=this.getOutOfBoundsCondition(e),s=this.getSetup(e),r=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${r}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let s=0;s<=1;s++){let r=`${0===n?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let t=2;t<this.rank;t++)r=`${e[e.length-1-t]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${s};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);if(1===this.rank){const e=this.enableShapeUniforms?"outShape":this.outputShape[0];return`getA(rc), (rc + 1 >= ${e} ? 0. : getA(rc + 1)), 0, 0`}return`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class pP{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=LM(this.outputShape.length);let n="";for(let s=0;s<4;s++){let e="thisRC = rc;";s%2===1&&(e+="thisRC.z += 1;"),s>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${s>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${s}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${s>0?"}":""}\n      `}this.userCode=`\n      ${fP(t,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?ML():LL(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}function fP(e,t){const n=t?OL(["r","c","d"],"inputShape"):_L(["r","c","d"],e);return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class gP{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(e,t,n){const s=vP(t,n),r=wP(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const i=bP(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const e=this.freeTextures[r].pop();return this.usedTextures[r].push(e),e}let a;return s===TO.PACKED_2X2_FLOAT32?a=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===TO.PACKED_2X2_FLOAT16?a=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===TO.UNPACKED_FLOAT32?a=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===TO.UNPACKED_FLOAT16?a=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===TO.PACKED_4X1_UNSIGNED_BYTE&&(a=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(a),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),a}releaseTexture(e,t,n,s){if(null==this.freeTextures)return;const r=vP(n,s),i=wP(t,r,s);i in this.freeTextures||(this.freeTextures[i]=[]);const a=bP(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),o=ie().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=a):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const l=this.usedTextures[i],u=l&&l.indexOf(e);if(null==u||u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l[u]=l[l.length-1],l.pop(),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function mP(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function bP(e,t,n,s,r){const i=xP(t,s);let a;if(r){const[t,n]=_O(e[0],e[1]);a=t*n}else{const[t,n]=EO(e[0],e[1]);a=t*n}const o=mP(n,i);return a*o}function xP(e,t){switch(e){case TO.PACKED_2X2_FLOAT32:return ez(t);case TO.PACKED_2X2_FLOAT16:return nz(t);case TO.UNPACKED_FLOAT32:return qM(t);case TO.UNPACKED_FLOAT16:return JM(t);case TO.PACKED_4X1_UNSIGNED_BYTE:return ZM(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function yP(e){return ie().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?TO.PACKED_2X2_FLOAT32:TO.UNPACKED_FLOAT32:e?TO.PACKED_2X2_FLOAT16:TO.UNPACKED_FLOAT16}function vP(e,t){if(e===NO.UPLOAD)return TO.PACKED_2X2_FLOAT32;if(e===NO.RENDER||null==e)return yP(t);if(e===NO.DOWNLOAD||e===NO.PIXELS)return TO.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function wP(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class kP{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=LM(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const IP="if (isnan(x)) return x;",CP="return x;",SP="return abs(x);";const $P="return (x >= 0.0) ? x : (exp(x) - 1.0);",NP=IP+"\n  return (x < 0.0) ? 0.0 : x;\n",TP=IP+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",EP="return x;",RP="return 1.0 / (1.0 + exp(-1.0 * x));",AP="return x;",_P="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",FP="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",DP="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",OP="return 1.0 / (1.0 + exp(-1.0 * x));";class LP{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=LM(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class MP{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=LM(this.outputShape.length);const t=e.length,n=cP("rc",t),s=NM(t),r=hP(t,n),i=n.slice(-2),a=t<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`\n      void main() {\n        ${s} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${a}));\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const zP=ug,PP=1e-7,BP=1e-4,WP={};function UP(e){return e in WP||(WP[e]={}),WP[e]}const VP=ie().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),GP=600;function HP(){return null==ie().global.screen?1024:ie().global.screen.height*ie().global.screen.width*window.devicePixelRatio*GP/1024/1024}class jP extends h{nextDataId(){return jP.nextDataId++}constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!ie().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof dz)t=e;else{const n=IO(ie().getNumber("WEBGL_VERSION"),e);t=new dz(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=IO(ie().getNumber("WEBGL_VERSION"));t=new dz(e),this.binaryCache=UP(ie().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new gP(this.gpgpu),this.numMBBeforeWarning=HP(),this.texData=new c(this,Ta())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,s,r,i){const a=this.makeTensorInfo(t,n),o=this.texData.get(a.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[s,r]},o.texShape=[s,r];const l=pL(t),u=new UM(l,!1,i),c=this.runWebGLProgram(u,[a],n,[[s,r]]);return c.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(a),c.dataId}write(e,t,n){if((ie().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||ie().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:NO.UPLOAD,refCount:1}),s}refCount(e){if(this.texData.has(e)){const t=this.texData.get(e);return t.refCount}return 0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,n,s,r){if(ie().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:NO.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:i,shape:a,isPacked:o}=t;if(null!=i){let t;t=o?new LP(a,EP):new kP(a,EP);const n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===s)return n;const l=null!=this.activeTimers;let u,c;if(l&&(u=ir()),"complex64"===s){const e=this.readSync(r.real.dataId),t=this.readSync(r.imag.dataId);c=Nf(e,t)}else c=this.getValuesFromTexture(e);return l&&(this.downloadWaitMs+=ir()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:i,complexTensorInfos:a,isPacked:o}=t;if(null!=r){let t;t=o?new LP(s,EP):new kP(s,EP);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:i}],i),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(ie().getBool("DEBUG")&&!ie().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===ie().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==i&&ie().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...AO(s))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),t=e[0],n=e[1];u=Nf(t,n)}else if(null==c)u=this.getValuesFromTexture(e);else{const e=w(s);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;OO(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Ta().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:s,shape:r,slice:i,dtype:a,isPacked:o,texture:l}=n;if("complex64"===a)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=i){let n;n=o?new LP(r,EP):new kP(r,EP);const s=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:a}],a),i=this.readToGPU(s,t);return this.disposeIntermediateTensorInfo(s),i}if(null==l)throw null!=s?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=Ta().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if("string"===e.dtype)try{const n=t.map((e=>or(e)));return va(e.shape,e.dtype,n)}catch(n){throw new Error("Failed to decode encoded string bytes into utf-8")}return va(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!PO(n)){if(ie().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=w(t);if(ie().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),s=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(s.texture.texture,...AO(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),i}const i=ie().getBool("WEBGL_PACK")&&!0===s,a=i?pL(t):t,o=i?new BM(a):new PM(a),l=this.runWebGLProgram(o,[{shape:a,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=ur(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),i=ur(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,s&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);a["kernelMs"]=b(e),a["getExtraProfileInfo"]=()=>e.map(((e,t)=>({name:i[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else a["kernelMs"]={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:ir(),endMs:null}}endTimer(e){return ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=ir(),e)}async getQueryTime(e){if(ie().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:s,usage:r,isPacked:i,slice:a}=this.texData.get(e),o=a&&a.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,i)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=VP){return ie().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&w(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){$s("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return zP(e.shape,t)}packedUnaryOp(e,t,n){const s=new LP(e.shape,t),r=this.compileAndRun(s,[e],n);return Ta().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Kz(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(ie().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,SP,e.dtype);const t=new kP(e.shape,SP),n=this.compileAndRun(t,[e]);return Ta().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&M(n[0])){const r=n.map((e=>ar(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){return Ta().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){const t=new MP(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new dP(e.shape),n=!0;return this.runWebGLProgram(t,[e],e.dtype,null,n)}packedReshape(e,t){const n=[hL(e.shape),...dL(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[hL(t),...dL(t)],i=new pP(r,n),a=!0,o=[n],l=this.runWebGLProgram(i,[s],e.dtype,o,a);return{dataId:l.dataId,shape:t,dtype:l.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:s,shape:r,dtype:i}=n;if(null!=t){const e=w(r),n=t[0]*t[1]*4;x(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}const a=pL(r);let o;o=s?new zM(a):new MM(a);const l=!0,u=[null!=t?t:AO(a)],c=this.runWebGLProgram(o,[{shape:a,dtype:i,dataId:e}],i,u,l,t);return{dtype:i,shape:r,dataId:c.dataId}}runWebGLProgram(e,t,n,s,r=!1,i){const a=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(a.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===$O.DENSE){const t=null!=i?i:AO(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===w(a.shape))return o.values=R(a.dtype,0),a;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&w(t.shape)<=ie().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!==!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!mL(n.shape,t.shape)){const e=t,s=t.shape;t.shape=n.shape,t=this.packedReshape(t,s),l.push(t),n=this.texData.get(t.dataId),e.shape=s}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(a.dataId);const c={shape:a.shape,texData:o,isUniform:!1},h=OM(e,u,c),d=this.getAndSaveBinary(h,(()=>AM(this.gpgpu,e,u,c))),p=null!=this.activeTimers;let f;p&&(f=this.startTimer()),ie().get("ENGINE_COMPILE_ONLY")||DM(this.gpgpu,d,u,c,s),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),p&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const g=ie().getNumber("WEBGL_FLUSH_THRESHOLD");if(g>0){const e=ir();e-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!ie().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===r){const e=this.unpackTensor(a);return this.disposeIntermediateTensorInfo(a),e}return a}compileAndRun(e,t,n,s,r=!1){n=n||t[0].dtype;const i=this.runWebGLProgram(e,t,n,s,r);return i}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!ie().getBool("IS_TEST")){const e=Object.keys(this.binaryCache);e.forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!==typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Ra((()=>{if(!ie().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=ie().getBool("DEBUG");ie().set("DEBUG",!1);const t=this.abs(Ya(1e-8)).dataSync()[0];if(ie().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?PP:BP}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:i,usage:a,isPacked:o}=t;if(null!=i)return;const l=null!=this.activeTimers;let u;l&&(u=ir());let c=t.texShape;if(null==c&&(c=fL(n,o),t.texShape=c),null!=r){const e=pL(n);let i,a=c[1],h=c[0];const d=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!o&&d||([a,h]=_O(c[0],c[1])),i=o?new VM(e,d):new UM(e,d);const p=d?[h,a]:c,f=this.makeTensorInfo(p,s),g=this.texData.get(f.dataId);g.usage=d?NO.PIXELS:NO.UPLOAD,g.texShape=p,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),a,h,r);const m=[[h,a]],b=!0,x=this.runWebGLProgram(i,[f],s,m,b),y=this.texData.get(x.dataId);t.texShape=y.texShape,t.isPacked=y.isPacked,t.usage=y.usage,ie().get("ENGINE_COMPILE_ONLY")?this.disposeData(x.dataId):(t.texture=y.texture,t.values=null,this.texData.delete(x.dataId)),this.disposeIntermediateTensorInfo(f),l&&(this.uploadWaitMs+=ir()-u)}else{const e=this.acquireTexture(c,a,s,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:s}=n;return null!=t&&(n.values=KP(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*O(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(const[,t]of Object.entries(this.binaryCache)){const n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(n){throw n}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Zp(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)){if(console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS))throw HO(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.");throw new Error("Failed to link vertex and fragment shaders.")}return!0}getUniformLocations(){for(const e of Object.values(this.binaryCache)){this.gpgpu.buildVao(e.webGLProgram);const{variablesLocations:t,customUniformLocations:n,infLoc:s,nanLoc:r,outShapeLocation:i,outShapeStridesLocation:a,outTexShapeLocation:o}=_M(this.gpgpu,e.program,e.webGLProgram);e.variablesLocations=t,e.customUniformLocations=n,e.infLoc=s,e.nanLoc=r,e.outShapeLocation=i,e.outShapeStridesLocation=a,e.outTexShapeLocation=o}}createTensorFromGPUData(e,t,n){e.channels=e.channels||"RGBA";const{texture:s,height:r,width:i,channels:a}=e,o=Ta().backend;if(!o.gpgpu.gl.isTexture(s))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const l=o.writeTexture(s,t,n,r,i,a);return Ta().makeTensorFromDataId(l,t,n,o)}}function KP(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}jP.nextDataId=0;
/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
ii()&&Fa("webgl",(()=>new jP),2);const qP="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class XP{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=bo(t,n),this.enableShapeUniforms=LM(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const JP="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n";class YP{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=bo(t,n);const r=this.outputShape.length;this.enableShapeUniforms=LM(r);let i="";if(s)if(0===r||1===w(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{const e=NM(r);if(i=`\n          ${e} coords = getOutputCoords();\n        `,1===r)this.enableShapeUniforms?i+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=cP("coords",r);this.enableShapeUniforms?i+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= outShape[${r} - 2];\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= outShape[${r} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:i+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function ZP(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const QP={kernelName:Tt,backendName:"webgl",kernelFunc:ZP};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eB(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,i=n.makeTensorInfo(s.shape,"complex64"),a=n.texData.get(i.dataId),o=ZP({inputs:{x:s},backend:n}),l=ZP({inputs:{x:r},backend:n});return a.complexTensorInfos={real:o,imag:l},i}const tB={kernelName:Pe,backendName:"webgl",kernelFunc:eB},nB="return (a < 0.) ? b * a : a;",sB="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";function rB(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:i}=s,a=n.makeTensorInfo([],"float32",nr(i,"float32")),o=ie().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new YP(sB,r.shape,a.shape):new XP(nB,r.shape,a.shape),l=n.runWebGLProgram(o,[r,a],"float32");return n.disposeIntermediateTensorInfo(a),l}const iB={kernelName:Dt,backendName:"webgl",kernelFunc:rB},aB="return (a < 0.) ? b * a : a;",oB="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";function lB(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t,i=ie().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new YP(oB,s.shape,r.shape):new XP(aB,s.shape,r.shape);return n.runWebGLProgram(i,[s,r],"float32")}const uB={kernelName:bn,backendName:"webgl",kernelFunc:lB},cB="if (isnan(x)) return x;";function hB({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:i})=>{const{x:a}=r,o=i,l=s||a.dtype;if(o.shouldExecuteOnCPU([a])&&null!=n){const e=o.texData.get(a.dataId),t=n(e.values,l);return o.makeTensorInfo(a.shape,l,t)}const u=ie().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t;let c;return c=u?new LP(a.shape,t):new kP(a.shape,e),o.runWebGLProgram(c,[a],l)}}function dB({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:i}){return({inputs:a,backend:o})=>{const{a:l,b:u}=a,c=o;if(s&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[s,r]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,s]=t,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},i={dataId:s.dataId,dtype:s.dtype,shape:u.shape},a=new XP(e,l.shape,u.shape);return c.runWebGLProgram(a,[r,i],Br(n.dtype,s.dtype))})),i=eB({inputs:{real:s,imag:r},backend:c});return c.disposeIntermediateTensorInfo(s),c.disposeIntermediateTensorInfo(r),i}const h=i||Br(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=r){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?og(e):e,s="string"===l.dtype?og(t):t,[i,a]=r(l.shape,u.shape,n,s,h),o=c.makeTensorInfo(a,h),d=c.texData.get(o.dataId);return d.values=i,o}const d=ie().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t;let p;return p=d?new YP(t,l.shape,u.shape,n):new XP(e,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function pB(e,t=!1){if("linear"===e)return t?AP:CP;if("relu"===e)return t?FP:NP;if("elu"===e)return t?_P:$P;if("relu6"===e)return t?DP:TP;if("prelu"===e)return t?oB:aB;if("leakyrelu"===e)return t?sB:nB;if("sigmoid"===e)return t?OP:RP;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class fB{constructor(e,t,n,s=!1,r=!1,i=!1,a=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=LM(this.outputShape.length);const u=s?e[1]:e[2],c=Math.ceil(u/2),h=s?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",p=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",m="";a&&(g=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${a}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${a}\n        }`:`vec4 activation(vec4 x) {\n          ${a}\n        }`,m="result = activation(result);");const b=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let x="rc.x",y="rc.x";e[0]<t[0]?x=`imod(rc.x, ${e[0]})`:t[0]<e[0]&&(y=`imod(rc.x, ${t[0]})`),this.userCode=`\n      ${g}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        int batchA = ${x};\n        int batchB = ${y};\n        for (int i = 0; i < ${c}; i++) {\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const gB={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class mB{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=bo(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const bB="return a * b;";function xB(e){const{inputs:t,backend:n}=e,{a:s,b:r}=t,i=Br(s.dtype,r.dtype);if("complex64"===s.dtype){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),i=new mB(gB.REAL,s.shape,r.shape),a=new mB(gB.IMAG,s.shape,r.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],l=n.runWebGLProgram(i,o,"float32"),u=n.runWebGLProgram(a,o,"float32"),c=eB({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([s,r])){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),[a,o]=Lz(s.shape,r.shape,e.values,t.values,i),l=n.makeTensorInfo(o,i),u=n.texData.get(l.dataId);return u.values=a,l}let a;return a=ie().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new YP(bB,s.shape,r.shape):new XP(bB,s.shape,r.shape),n.runWebGLProgram(a,[s,r],i)}const yB={kernelName:an,backendName:"webgl",kernelFunc:xB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vB(e,t,n){const s=[hL(e.shape),...dL(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},i=[hL(t),...dL(t)],a=new pP(i,s),o=!0,l=[s],u=n.runWebGLProgram(a,[r],e.dtype,l,o);return{dataId:u.dataId,shape:t,dtype:u.dtype}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wB(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:i}=s,a=n,o=w(r.shape),l=N(i,o),u=w(l);x(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=a.texData.get(r.dataId);return!c.isPacked||mL(r.shape,l)||null!==c.texture&&mL(c.shape,l)?(a.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):vB(r,l,a)}const kB={kernelName:$n,backendName:"webgl",kernelFunc:wB};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class IB{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:i}=e;this.outputShape=[s,i];const a=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${I(e)?e.toPrecision(2):e}, ones);`}let u="";r%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class CB{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:i}=e;this.outputShape=[s,i];let a="0.0",o="";"prod"===t?a="1.0":"min"===t?(a="1.0 / 1e-20",o="min"):"max"===t&&(a="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(a="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(a="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";r%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${a};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${a});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function SB(e){const t=[];while(0===t.length||1!==t[t.length-1].outSize){const n=t.length?t[t.length-1].outSize:e[1],s=lf(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}function $B(e,t,n,s){const r=SB(e.shape);let i=e;for(let a=0;a<r.length;a++){const{inSize:o,windowSize:l,outSize:u}=r[a];let c,h;c="mean"===n?0===a?new IB({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new IB({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new CB({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=i,i=s.runWebGLProgram(c,[i],t),h.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(h)}return i}
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class NB{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[t[i]];this.outputShape=n,this.rank=n.length;const s=NM(this.rank),r=TB(t);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}function TB(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let r=0;r<e.length;r++)s[e[r]]=n[r];return s.join()}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class EB{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let u=0;u<n.length;u++)n[u]=e[t[u]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=NM(this.rank),r=uP("rc",this.rank),i=new Array(this.rank);for(let u=0;u<t.length;u++)i[t[u]]=r[u];const a=`vec2(${i.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${i.join()}), ${a})`;this.userCode=`\n    void main() {\n      ${s} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function RB(e,t,n){const s=ie().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new EB(e.shape,t):new NB(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function AB(e,t,n,s){const r=t,i=e.shape.length,a=T(r,e.shape);let o=a;const l=zc(o,i),u=null!=l;let c=e;u&&(c=RB(e,l,s),o=Bc(o.length,i)),Mc("sum",o,i);const[h,d]=Oc(c.shape,o);let p=h;n&&(p=Lc(h,a));const f=w(d),g=w(e.shape),m=g/f,b=wB({inputs:{x:c},attrs:{shape:[m,f]},backend:s}),x=Wr(e.dtype),y=$B(b,x,"sum",s),v=wB({inputs:{x:y},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(y),u&&s.disposeIntermediateTensorInfo(c),v}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function _B(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s;return AB(r,i,a,n)}const FB={kernelName:Kn,backendName:"webgl",kernelFunc:_B};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function DB(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:i}=s,a=n,o=r.shape.length,l=new Array(o);for(let c=0;c<l.length;c++)l[c]=r.shape[i[c]];let u;if(a.shouldExecuteOnCPU([r])){const e=a.texData.get(r.dataId),t=e.values,n=oP(t,r.shape,r.dtype,i,l);u=a.makeTensorInfo(l,r.dtype);const s=a.texData.get(u.dataId);s.values=n}else u=RB(r,i,a);return u}const OB={kernelName:gs,backendName:"webgl",kernelFunc:DB},LB=1e3;function MB({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:i=null,preluActivationWeights:a=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],d=s?t.shape[c-1]:t.shape[c-2],p=n?e.shape[u-1]:e.shape[u-2],f=s?t.shape[c-2]:t.shape[c-1],g=e.shape.slice(0,-2),m=t.shape.slice(0,-2),b=w(g),y=w(m),v=bo(e.shape.slice(0,-2),t.shape.slice(0,-2)),k=v.concat([p,f]);x(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`));const I=n?[b,h,p]:[b,p,h],C=s?[y,f,d]:[y,d,f],S=wB({inputs:{x:e},backend:r,attrs:{shape:I}}),$=wB({inputs:{x:t},backend:r,attrs:{shape:C}}),N=[S,$],T=Math.max(b,y),E=n?S.shape[1]:S.shape[2],R=null!=i,A=null!=a,_="leakyrelu"===l,F=null!=l?pB(l,!0):null,D=R||A||_||null!=F;let O;if((1===p||1===f)&&E>LB&&!1===D){let e=S,t=$;n&&(e=DB({inputs:{x:S},backend:r,attrs:{perm:[0,2,1]}}),N.push(e)),s&&(t=DB({inputs:{x:$},backend:r,attrs:{perm:[0,2,1]}}),N.push(t));const i=1!==f,a=1===f;let o=e;i&&(o=wB({inputs:{x:e},backend:r,attrs:{shape:[T,E,1]}}),N.push(o));const l=1===f?2:1;let u=t;a&&(u=wB({inputs:{x:t},backend:r,attrs:{shape:[T,1,E]}}),N.push(u));const c=xB({inputs:{a:o,b:u},backend:r});O=_B({inputs:{x:c},backend:r,attrs:{axis:l,keepDims:!0}}),N.push(c)}else{const l=Br(e.dtype,t.dtype),u=new fB(I,C,[T,p,f],n,s,R,F,A,_),c=[S,$];if(null!=i&&c.push(i),A&&c.push(a),_){const e=r.makeTensorInfo([],"float32",nr(o,"float32"));c.push(e),N.push(e)}O=r.runWebGLProgram(u,c,l)}const L=wB({inputs:{x:O},backend:r,attrs:{shape:k}});N.push(O);for(const x of N)r.disposeIntermediateTensorInfo(x);return L}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function zB(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:i,bias:a,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return MB({a:r,b:i,transposeA:l,transposeB:u,backend:n,bias:a,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}const PB={kernelName:Is,backendName:"webgl",kernelFunc:zB},BB="return abs(x);";function WB(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const e=n.texData.get(s.dataId),t=Kz(e.values);return n.makeTensorInfo(s.shape,s.dtype,t)}let r;return r=ie().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new LP(s.shape,BB):new kP(s.shape,BB),n.runWebGLProgram(r,[s],s.dtype)}const UB={kernelName:de,backendName:"webgl",kernelFunc:WB},VB=IP+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n",GB=hB({opSnippet:VB}),HB={kernelName:pe,backendName:"webgl",kernelFunc:GB},jB=IP+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));",KB=hB({opSnippet:jB}),qB={kernelName:fe,backendName:"webgl",kernelFunc:KB},XB="return a + b;",JB=dB({opSnippet:XB,packedOpSnippet:XB,supportsComplex:!0,cpuKernelImpl:fz}),YB={kernelName:ge,backendName:"webgl",kernelFunc:JB};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ZB{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${s};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class QB{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${s};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eW(e){const{inputs:t,backend:n}=e,s=t;if(1===s.length)return ZP({inputs:{x:s[0]},backend:n});if(s.length>ie().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(s.length/2),t=eW({inputs:s.slice(0,e),backend:n}),r=eW({inputs:s.slice(e),backend:n});return eW({inputs:[t,r],backend:n})}const r=s.map((e=>e.dtype)).reduce(((e,t)=>Br(e,t))),i=s.map((e=>e.shape)),a=ie().getBool("WEBGL_PACK"),o=a?new QB(s[0].shape,i):new ZB(s[0].shape,i);return n.runWebGLProgram(o,s,r)}const tW={kernelName:me,backendName:"webgl",kernelFunc:eW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nW(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s,o=r.shape.length,l=T(i,r.shape);let u=l;const c=zc(u,o);let h=r;null!=c&&(h=DB({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Bc(u.length,o)),Mc("all",u,o);const[d,p]=Oc(h.shape,u),f=w(p),g=wB({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),m=$B(g,g.dtype,"all",n);let b;if(a){const e=Lc(d,l);b=wB({inputs:{x:m},backend:n,attrs:{shape:e}})}else b=wB({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),b}const sW={kernelName:be,backendName:"webgl",kernelFunc:nW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rW(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s,o=r.shape.length,l=T(i,r.shape);let u=l;const c=zc(u,o);let h=r;null!=c&&(h=DB({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Bc(u.length,o)),Mc("any",u,o);const[d,p]=Oc(h.shape,u),f=w(p),g=wB({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),m=$B(g,g.dtype,"any",n);let b;if(a){const e=Lc(d,l);b=wB({inputs:{x:m},backend:n,attrs:{shape:e}})}else b=wB({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),b}const iW={kernelName:xe,backendName:"webgl",kernelFunc:rW};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class aW{constructor(e,t,n){this.variableNames=["A"];const{windowSize:s,batchSize:r,outSize:i}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,i];const a="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${s}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${a} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class oW{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,x(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const r=e[e.length-1],i=Math.ceil(r/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),s||this.variableNames.push("bestIndicesA");const a=this.outputShape,o=a.length,l=NM(o),u=cP("coords",o);let c,h;if(1===i){h=o+1;const e=NM(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const d=["x","y","z","w","u","v"].slice(0,h),p="."+d[h-1],f=d.map((e=>"int "+e)),g=cP("sourceLocR",h-1).concat("inIdx.r"),m=cP("sourceLocG",h-1).concat("inIdx.g"),b=cP("sourceLocB",h-1).concat("inIdx.b"),y=cP("sourceLocA",h-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",w=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,k=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${m.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,I=s?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${a[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${a[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lW(e,t,n,s=null){let r=t.shape[0],i=t.shape[1];null!=s&&(r=s.shape[0],i=s.shape[1]);const a=lf(i),o={windowSize:a,inSize:i,batchSize:r,outSize:Math.ceil(i/a)},l=new aW(o,n,null==s),u=[t];null!=s&&u.push(s);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=lW(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function uW(e,t,n,s=null){const r=null!=s?s.shape:t.shape,i=r[r.length-1],a=lf(i),o=new oW(r,a,n,null==s),l=null==s?[t]:[t,s],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){const s=uW(e,t,n,u);return e.disposeIntermediateTensorInfo(u),s}return u}function cW(e,t,n,s){const r=[n];if(Mc("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!ie().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],i=e.texData.get(t.dataId),a=null!==i&&i.isPacked;let o=t;a&&(o=e.unpackTensor(t),n.push(o));const[l,u]=Oc(o.shape,r),c=w(u),h=wB({inputs:{x:o},backend:e,attrs:{shape:[-1,c]}});n.push(h);const d=lW(e,h,s);n.push(d);const p=wB({inputs:{x:d},backend:e,attrs:{shape:l}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return uW(e,t,s)}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hW(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i}=s;let a=T(i,r.shape);const o=zc(a,r.shape.length);let l=r;const u=[];null!=o&&(l=DB({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),a=Bc(a.length,l.shape.length)),Mc("argMax",[a[0]],l.shape.length);const c=cW(n,l,a[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const dW={kernelName:ye,backendName:"webgl",kernelFunc:hW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pW(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i}=s;let a=T(i,r.shape);const o=zc(a,r.shape.length);let l=r;const u=[];null!=o&&(l=DB({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),a=Bc(a.length,l.shape.length)),Mc("argMin",[a[0]],l.shape.length);const c=cW(n,l,a[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const fW={kernelName:ve,backendName:"webgl",kernelFunc:pW},gW=IP+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n",mW=hB({opSnippet:gW}),bW={kernelName:we,backendName:"webgl",kernelFunc:mW},xW=IP+"return log(x + sqrt(x * x + 1.0));",yW=hB({opSnippet:xW}),vW={kernelName:ke,backendName:"webgl",kernelFunc:yW},wW=IP+"\n  return atan(x);\n",kW=hB({opSnippet:wW}),IW={kernelName:Ie,backendName:"webgl",kernelFunc:kW},CW=qP+"\n  return atan(a, b);\n",SW="\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+JP+"\n  return result;\n",$W=dB({opSnippet:CW,packedOpSnippet:SW}),NW={kernelName:Se,backendName:"webgl",kernelFunc:$W},TW=IP+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;",EW=hB({opSnippet:TW}),RW={kernelName:Ce,backendName:"webgl",kernelFunc:EW};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class AW{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,m=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${a}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${s?r?g:m:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}const x="max";let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / max(count, 1.0)");const v=4*Math.floor(i/4),w=i%4,k=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${x}(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${v}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${k}\n          }\n\n          int xC = xCCorner + ${v};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${k}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class _W{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const i=e.filterWidth,a=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,g=e.padInfo.front,m=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const x="avg"===t;let y="0.0";if(x||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${a}, ${o}, ${l});\n        const ivec3 pads = ivec3(${g}, ${m}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}const v="max";let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / max(count, 1.0)");const k=4*Math.floor(i/4),I=i%4,C=`\n      if (${x}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = ${v}(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${a}, ${o}, ${l});\n      const ivec3 pads = ivec3(${g}, ${m}, ${b});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${k}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${C}\n            }\n\n            int xC = xCCorner + ${k};\n            if (${1===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${C}\n            } else if (${2===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${C}\n            } else if (${3===I}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${C}\n            }\n          }\n        }\n        setOutput(${w});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function FW(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;EL(r,"avgPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s,u=1;x(Gl(a,u),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=Rl(r.shape,i,a,u,o,l);if(1===c.filterWidth&&1===c.filterHeight&&k(c.inShape,c.outShape))return ZP({inputs:{x:r},backend:n});const h=new AW(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}const DW={kernelName:$e,backendName:"webgl",kernelFunc:FW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function OW(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:i,strides:a,pad:o,dimRoundingMode:l,dataFormat:u}=s,c=[1,1,1],h=Al(r.shape,i,a,c,o,l,u),d=new _W(h,"avg",!1);return n.runWebGLProgram(d,[r],"float32")}const LW={kernelName:Te,backendName:"webgl",kernelFunc:OW};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class MW{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,i=e.dilationHeight,a=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${i}) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${a}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class zW{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,g=d-1-e.padInfo.left,m=1/(t*n*s);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${g});\n      const float avgMultiplier = float(${m});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function PW(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=Al(a.shape,o,l,h,u,c),p=new zW(d);return n.runWebGLProgram(p,[r],a.dtype)}const BW={kernelName:Ee,backendName:"webgl",kernelFunc:PW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function WW(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,a=i;EL([r,i],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=Rl(a.shape,o,l,1,u),h=new MW(c);return n.runWebGLProgram(h,[r],a.dtype)}const UW={kernelName:Ne,backendName:"webgl",kernelFunc:WW};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function VW(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:i}=t,{transposeA:a,transposeB:o}=s;return MB({a:r,b:i,transposeA:a,transposeB:o,backend:n})}const GW={kernelName:Re,backendName:"webgl",kernelFunc:VW};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class HW{constructor(e,t,n,s,r,i){this.outputShape=[],this.variableNames=["x","mean","variance"],bo(e,t),bo(e,n);let a="0.0";null!=s&&(bo(e,s),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="1.0";null!=r&&(bo(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class jW{constructor(e,t,n,s,r,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],bo(e,t),bo(e,n);let a="vec4(0.0)";null!=s&&(bo(e,s),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(bo(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const KW=({inputs:e,backend:t,attrs:n})=>{const{x:s,mean:r,variance:i,offset:a,scale:o}=e;x(r.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),x(null==a||r.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),x(null==o||r.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[s,r,i];let c=null;null!=a&&(c=a.shape,u.push(a));let h=null;null!=o&&(h=o.shape,u.push(o));const d=ie().getBool("WEBGL_PACK_NORMALIZATION")?new jW(s.shape,r.shape,i.shape,c,h,l):new HW(s.shape,r.shape,i.shape,c,h,l),p=t.runWebGLProgram(d,u,u[0].dtype);return p},qW={kernelName:It,backendName:"webgl",kernelFunc:KW};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class XW{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=NM(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=YW(this.rank);let s;const r=e.map(((e,t)=>`sourceLoc.${JW[t]} = start[${t}] + coords.${JW[t]};`));s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${r.join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${s}\n        setOutput(getSource(${n}));\n      }\n    `}}const JW=["x","y","z","w","u","v"];function YW(e){if(1===e)return"sourceLoc";if(e<=6)return JW.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ZW{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=NM(this.rank),n=cP("coords",this.rank),s=cP("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,i=`getChannel(getSource(${s.join()}), ${r})`,a=`\n      result.x = ${i};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${s[this.rank-1]};\n        result.y = ${i};\n        --${s[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${s[this.rank-2]};\n        result.z = ${i};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${s[this.rank-1]};\n          result.w = ${i};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${s[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${a}\n        ${o}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function QW(e,t,n,s){const r=s.texData.get(e.dataId),i=s.makeTensorInfo(n,e.dtype),a=s.texData.get(i.dataId);Object.assign(a,r),a.refCount=1,a.shape=n,a.dtype=e.dtype;let o=xl(t,V(e.shape));r.slice&&(o+=r.slice.flatOffset),a.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};const l=s.dataRefCount.get(a.slice.origDataId)||1;return s.dataRefCount.set(a.slice.origDataId,l+1),i}function eU(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:i,size:a}=s,[o,l]=yl(r,i,a);if(il(r,o,l),0===w(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=qz(e.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}const{isPacked:u}=n.texData.get(r.dataId),c=bl(r.shape,o,l);if(u||!c){const e=ie().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ZW(l):new XW(l),t=[o];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),QW(r,o,l,n)}const tU={kernelName:Bn,backendName:"webgl",kernelFunc:eU},nU=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:i,crops:a}=s;x(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((e,t)=>e*t)),l=cf(r.shape,i,o),u=hf(l.length,i.length),c=df(r.shape,i,o),h=pf(a,i.length),d=ff(c,a,i.length),p=[],f=wB({inputs:{x:r},backend:n,attrs:{shape:l}}),g=DB({inputs:{x:f},backend:n,attrs:{perm:u}}),m=wB({inputs:{x:g},backend:n,attrs:{shape:c}}),b=eU({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return p.push(f),p.push(g),p.push(m),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),b},sU={kernelName:Ae,backendName:"webgl",kernelFunc:nU};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rU(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:i}=t,{size:a}=s,o=n.readSync(r.dataId),l=n.readSync(i.dataId),u=gz(o,l,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,u)}const iU={kernelName:_e,backendName:"webgl",kernelFunc:rU},aU="\n  int r = int(a.r) & int(b.r);\n  int g = int(a.g) & int(b.g);\n  int rb = int(a.b) & int(b.b);\n  int ra = int(a.a) & int(b.a);\n  return vec4(r, g, rb, ra);\n",oU="\n  return float(int(a.r) & int(b.r));\n";function lU(e){const{inputs:t,backend:n}=e,{a:s,b:r}=t,i=ie().getBool("WEBGL_PACK_BINARY_OPERATIONS"),a=ie().getNumber("WEBGL_VERSION");if(n.shouldExecuteOnCPU([s,r])||1===a){const e=n.texData.get(s.dataId).values,t=n.texData.get(r.dataId).values,[i,a]=bz(s.shape,r.shape,e,t,s.dtype),o=n.makeTensorInfo(a,s.dtype),l=n.texData.get(o.dataId);return l.values=i,o}let o;return o=i?new YP(aU,s.shape,r.shape,!1):new XP(oU,s.shape,r.shape),n.runWebGLProgram(o,[s,r],s.dtype)}const uU={kernelName:Fe,backendName:"webgl",kernelFunc:lU};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cU(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,i=n.readSync(s.dataId),a=n.readSync(r.dataId),o=bo(Array.from(i),Array.from(a));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}const hU={kernelName:Oe,backendName:"webgl",kernelFunc:cU},dU="return float(a != b);",pU=dB({opSnippet:dU,cpuKernelImpl:zz,dtype:"bool"}),fU={kernelName:ln,backendName:"webgl",kernelFunc:pU};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gU(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return ZP({inputs:{x:r.complexTensorInfos.real},backend:n})}const mU={kernelName:In,backendName:"webgl",kernelFunc:gU},bU="return float(int(x));";function xU(e,t){const n=new kP(e.shape,bU),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yU(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:i}=s;if("complex64"===i){if("complex64"===r.dtype)return ZP({inputs:{x:r},backend:n});const e=Xc(r.shape),t=yU({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),s=eB({inputs:{real:t,imag:e},backend:n});return e.dispose(),n.disposeIntermediateTensorInfo(t),s}if("complex64"===r.dtype){const e=gU({inputs:{input:r},backend:n}),t=yU({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!D(r.dtype,i)){const e=ZP({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId).values,[t,s,a]=xz(e,r.shape,r.dtype,i);return n.makeTensorInfo(t,s,a)}if("int32"===i)return xU(r,n);if("bool"===i){const e=n.makeTensorInfo([],"bool",R("bool",1)),t={a:r,b:e},s=pU({inputs:t,backend:n});return n.disposeIntermediateTensorInfo(e),s}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${i}`)}const vU={kernelName:Le,backendName:"webgl",kernelFunc:yU},wU="return ceil(x);",kU=hB({opSnippet:wU,packedOpSnippet:wU,cpuKernelImpl:yz}),IU={kernelName:Me,backendName:"webgl",kernelFunc:kU};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class CU{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class SU{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $U(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:i,clipValueMax:a}=s;let o;o=ie().getBool("WEBGL_PACK_CLIP")?new SU(r.shape):new CU(r.shape);const l=[[i],[a]];return n.runWebGLProgram(o,[r],r.dtype,l)}const NU={kernelName:ze,backendName:"webgl",kernelFunc:$U};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class TU{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function EU(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function RU(e){const{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),i=new TU(s.shape),a=[EU(s,r.complexTensorInfos.real),EU(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(i,a,a[0].dtype)}const AU={kernelName:Be,backendName:"webgl",kernelFunc:RU};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class _U{constructor(e){this.outputShape=[],this.outputShape=ef(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let i=1;i<t.length;i++)t[i]=t[i-1]+e[i][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<t.length;i++){const e=t[i-1];n.push(`else if (yC < ${t[i]}) setOutput(getT${i}(yR, yC-${e}));`)}const s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class FU{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=ef(e,t);const n=this.outputShape,s=n.length,r=NM(s),i=cP("coords",s),a=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let f=1;f<o.length;f++)o[f]=o[f-1]+e[f][t];const l=a[t],u=a.slice(-2),c=a.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let f=1;f<o.length;f++){const e=o[f-1];h+=`\n        if (${l} < ${o[f]}  && ${l} >= ${o[f-1]}) {\n          return getChannel(\n            getT${f}(${DU(a,l,e)}),\n            vec2(${DU(u,l,e)}));\n        }`}const d=o.length,p=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${DU(a,l,p)}),\n          vec2(${DU(u,l,p)}));`,this.userCode=`\n      float getValue(${a.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[s-1]} = ${i[s-1]} + 1;\n        if (${i[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[s-2]} = ${i[s-2]} + 1;\n        if (${i[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[s-1]} = ${i[s-1]} - 1;\n        if (${i[s-2]} < ${n[s-2]} &&\n            ${i[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function DU(e,t,n){const s=e.indexOf(t),r=e.map(((e,t)=>t===s?`${e} - ${n}`:e));return r.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function OU(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.texData.get(s.dataId);return ZP({inputs:{x:r.complexTensorInfos.imag},backend:n})}const LU={kernelName:Rt,backendName:"webgl",kernelFunc:OU};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function MU(e,t,n){const s=e[0].dtype;if("complex64"===s){const s=e.map((e=>gU({inputs:{input:e},backend:n}))),r=e.map((e=>OU({inputs:{input:e},backend:n}))),i=MU(s,t,n),a=MU(r,t,n),o=eB({inputs:{real:i,imag:a},backend:n});return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(a),o}let r=n.shouldExecuteOnCPU(e);if("string"===s&&(r=!0),r){const r=e.map((e=>{const s=w(e.shape.slice(t)),r=[-1,s];return wB({inputs:{x:e},backend:n,attrs:{shape:r}})})),i=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),a=ef(r.map((e=>e.shape)),1),o=1===r[0].shape[0],l=vz(i,a,s,o),u=ef(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,s,l);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}const i=e.filter((e=>w(e.shape)>0)),a=ie().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&i[0].shape.length>1;if(1===i.length){const t=a?new kP(e[0].shape,EP):new LP(e[0].shape,EP);return n.runWebGLProgram(t,e,s)}const o=ie().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(i.length>o){const e=[];for(let r=0;r<i.length;r+=o){const s=i.slice(r,r+o);e.push(MU(s,t,n))}const s=MU(e,t,n);for(const t of e)n.disposeIntermediateTensorInfo(t);return s}if(a){const e=new FU(i.map((e=>e.shape)),t);return n.runWebGLProgram(e,i,s)}const{tensors2D:l,outShape:u}=zU(i,t,n),c=new _U(l.map((e=>e.shape))),h=n.runWebGLProgram(c,l,s);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));const d=wB({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),d}function zU(e,t,n){const s=ef(e.map((e=>e.shape)),t),r=e.map((e=>wB({inputs:{x:e},attrs:{shape:[-1,w(e.shape.slice(t))]},backend:n})));return{tensors2D:r,outShape:s}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function PU(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,i=T(r,t[0].shape)[0],a=t.map((e=>e.shape));Qp(a,i);const o=ef(t.map((e=>e.shape)),i);if(0===w(o))return n.makeTensorInfo(o,t[0].dtype,[]);const l=t.filter((e=>w(e.shape)>0));return 1===l.length?ZP({inputs:{x:l[0]},backend:n}):MU(l,i,n)}const BU={kernelName:We,backendName:"webgl",kernelFunc:PU};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class WU{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const i=e.padInfo.top,a=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,g="channelsLast"===e.dataFormat,m=g?1:2,b=g?2:3,x=g?3:1;let y="",v="";n&&(y=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");const w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${x}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${g}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${g}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${g}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${g}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}}class UU{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${i}, ${a});\n      const ivec3 pads = ivec3(${t}, ${n}, ${s});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class VU{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=LM(this.outputShape.length);const i=e.padInfo.left,a=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,c=u;let h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<u;g++)h+=`\n           vec4 xTexelC${2*g};\n           int xTexelC${2*g}Ready;\n           vec4 xTexelC${2*g+1};\n           int xTexelC${2*g+1}Ready;\n           vec4 xC${g};`;h+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let g=0;g<u;g++)h+=`\n           xTexelC${2*g} = vec4(0.0);\n           xTexelC${2*g}Ready = 0;\n           xTexelC${2*g+1} = vec4(0.0);\n           xTexelC${2*g+1}Ready = 0;\n           xC${g} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let m=0;m<(c+1)/2;m++){const t=2*m;if(h+=`\n           xC = xCCorner + ${t*o};\n           `,1===a){if(t<u&&(i%2===1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n               `,h+=1===o&&t>0?`\n                 xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                   } else {\n                     xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xC${t} = xTexelC${t};\n                 `,t+1<u)){const e=i%2===0?g(o):o;o%2===0&&i%2===1||o%2!==0&&i%2!==1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                     xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${t+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${t+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                     } else {\n                      xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                     }\n                     `:`\n                     xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                     `):h+=1===e?`\n                     xC${t+1} = xTexelC${t};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                       xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${t+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${t+1}Ready = 1;\n                     }\n\n                     xC${t+1} = xTexelC${t+1};\n                     `}}else t<u&&(i%2===1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n               `,t+1<u&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                   xTexelC${t} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${t}.zw = vec2(0.0);\n                   }\n                   xTexelC${t}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                   xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${t+1}.zw = vec2(0.);\n                   }\n                   xTexelC${t+1}Ready = 1;\n                 }\n\n                 xC${t} = vec4(\n                   xTexelC${t}.xy, xTexelC${t+1}.xy);\n               `,t+1<u&&(h+=`\n                   xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                 `)));t<u&&(h+=`\n             wTexel = getW(r, ${t}, d1, d2);\n             dotProd += xC${t}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${t}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,t+1<u&&(h+=`\n               wTexel = getW(r, ${t+1}, d1, d2);\n               dotProd += xC${t+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${t+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",p="";n&&(d=s?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:r?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,p="result = activation(result);");const f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${p}\n         setOutput(result);\n       }\n     `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class GU{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=LM(this.outputShape.length);const{dataFormat:n}=t,s=AL(),r="channelsLast"===n,i=r?1:2,a=r?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let l="";for(let u=0;u<=1;u++)for(let e=0;e<=1;e++)l+=`\n          blockIndex = rc.z + ${e};\n          pos = rc.y + ${u};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${i}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${a}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${r}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*u+e}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${s.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function HU(e,t){const n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function jU({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const l=e.shape,u=s.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],d=n.outChannels,p="channelsLast"===n.dataFormat,f=!1,g=!1;let m;const b=[];if(null!=i){const e=HU(i.shape,p);null!=e&&(i=wB({inputs:{x:i},backend:s,attrs:{shape:e}}),b.push(i))}if(null!=r){const e=HU(r.shape,p);null!=e&&(r=wB({inputs:{x:r},backend:s,attrs:{shape:e}}),b.push(r))}const y=(1===h||1===d)&&c>LB,v=!y&&u.isPacked&&p&&null!=u.texture&&l[2]%2!==0&&k(u.shape.slice(-3),l.slice(-3));if(v){const c=l[0]*l[1]*(l[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},d=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,x(mL(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const p=wB({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});b.push(p);const y=MB({a:h,b:p,backend:s,transposeA:f,transposeB:g,bias:r,activation:o,preluActivationWeights:i,leakyreluAlpha:a}),v=s.texData.get(y.dataId);x(v.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=d,v.shape=n.outShape,m=ZP({inputs:{x:y},backend:s}),m.shape=n.outShape,b.push(y)}else{const l=n.outHeight*n.outWidth,u=wB({inputs:{x:e},backend:s,attrs:{shape:p?[n.batchSize,l,n.inChannels]:[n.batchSize,n.inChannels,l]}}),c=wB({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=MB({a:p?u:c,b:p?c:u,transposeA:!p,transposeB:g,backend:s,bias:r,activation:o,preluActivationWeights:i,leakyreluAlpha:a});m=wB({inputs:{x:h},backend:s,attrs:{shape:n.outShape}}),b.push(u),b.push(c),b.push(h)}for(const x of b)s.disposeIntermediateTensorInfo(x);return m}function KU({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:a=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:d,dataFormat:p}=n,f="channelsLast"===p,g=l*u*c,m=d*h,b=[n.batchSize,g,m],x=!0,y=!1,v=[];if(null!=i){const e=HU(i.shape,f);null!=e&&(i=wB({inputs:{x:i},backend:s,attrs:{shape:e}}),v.push(i))}if(null!=r){const e=HU(r.shape,f);null!=e&&(r=wB({inputs:{x:r},backend:s,attrs:{shape:e}}),v.push(r))}const k=wB({inputs:{x:t},backend:s,attrs:{shape:[1,g,w(t.shape)/g]}});v.push(k);const I=new GU(b,n),C=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],S=s.runWebGLProgram(I,[e],"float32",C),$=wB({inputs:{x:S},backend:s,attrs:{shape:b}});v.push(S),v.push($);const N=null!=r,T=null!=i,E="leakyrelu"===o,R=o?pB(o,!0):null,A=new fB(f?$.shape:k.shape,f?k.shape:$.shape,f?[n.batchSize,m,n.outChannels]:[n.batchSize,n.outChannels,m],x,y,N,R,T,E),_=f?[$,k]:[k,$];if(r&&_.push(r),T&&_.push(i),E){const e=s.makeTensorInfo([],"float32",nr(a,"float32"));_.push(e),v.push(e)}const F=s.runWebGLProgram(A,_,"float32"),D=wB({inputs:{x:F},backend:s,attrs:{shape:n.outShape}});v.push(F);for(const w of v)s.disposeIntermediateTensorInfo(w);return D}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qU(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:a,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=jl(l),d=_l(r.shape,i.shape,a,u,o,c,!1,h);let p;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if(d.strideWidth<=2&&"channelsLast"===h&&ie().getBool("WEBGL_EXP_CONV")){const e=new VU(d),t=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];p=n.runWebGLProgram(e,[r,i],"float32",t)}else if(ie().getBool("WEBGL_CONV_IM2COL"))p=KU({x:r,filter:i,convInfo:d,backend:n});else{const e=new WU(d);p=n.runWebGLProgram(e,[r,i],"float32")}else p=jU({x:r,filter:i,convInfo:d,backend:n});const f=wB({inputs:{x:p},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(p),f}const XU={kernelName:Ue,backendName:"webgl",kernelFunc:qU};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class JU{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,i="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              ${i?"float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);":"float dyValue = getDy(b, d2, yR, yC);\n              float xValue = getX(b, d1, xR, xC);\n              dotProd += (xValue * dyValue);"}\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class YU{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,i="channelsLast"===e.dataFormat,a=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=i?1:2,u=i?2:3,c=i?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${i}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ZU{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,i=e.padInfo.top,a=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${r};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${i};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${s} - ${a};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class QU{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,i=e.strideHeight,a=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=s-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${i}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${s}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${s} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eV(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:a,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=jl(l),d=_l(r.shape,c,a,1,o,u,!1,h),p=new JU(d);return n.runWebGLProgram(p,[r,i],"float32")}const tV={kernelName:Ve,backendName:"webgl",kernelFunc:eV};
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class nV{constructor(e){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=e.inShape,this.enableShapeUniforms=LM(this.outputShape.length);const t=e.filterHeight,n=e.filterWidth,s=t-1-e.padInfo.top,r=n-1-e.padInfo.left;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${r});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n\n        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        vec4 result = vec4(0.);\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / strides[0];\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            int wCPerm = ${n} - 1 - wC;\n\n            float dyC = float(dyCCorner + wC) / strides[1];\n            bool idyCVal = (dyC >= 0.0) && (dyC < ${e.outWidth}.0)\n              && (fract(dyC) == 0.0);\n            int idyC = int(dyC);\n\n            float dyC2 = float(dyCCorner + wC + 1) / strides[1];\n            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${e.outWidth}.0)\n              && (fract(dyC2) == 0.0);\n            int idyC2 = int(dyC2);\n\n            if (idyCVal && idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?\n                  dySample : getDy(batch, idyR, idyC2, d2);\n\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n\n                dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample2.xy : dySample2.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC, d2);\n                vec2 dyValue = mod(float(idyC), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.xy += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            } else if (idyCVal2) {\n              for (int d2 = 0; d2 < ${e.outChannels}; d2 += 2) {\n                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);\n                vec4 dySample = getDy(batch, idyR, idyC2, d2);\n                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?\n                  dySample.xy : dySample.zw;\n                result.zw += vec2(dot(dyValue, wValue.xy),\n                  dot(dyValue, wValue.zw));\n              }\n            }\n          }\n        }\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sV(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{inputShape:a,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=jl(u),d=_l(a,i.shape,o,1,l,c,!1,h);if(ie().getBool("WEBGL_PACK")&&"channelsLast"===h){const e=[[d.strideHeight,d.strideWidth]],t=new nV(d);return n.runWebGLProgram(t,[r,i],"float32",e)}{const e=new YU(d);return n.runWebGLProgram(e,[r,i],"float32")}}const rV={kernelName:Ge,backendName:"webgl",kernelFunc:sV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function iV(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:a,pad:o,dilations:l}=s,u=Fl(r.shape,i.shape,a,l,o),c=new UU(u);return n.runWebGLProgram(c,[r,i],"float32")}const aV={kernelName:He,backendName:"webgl",kernelFunc:iV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function oV(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:a,pad:o,filterShape:l}=s,u=Fl(r.shape,l,a,1,o),c=new ZU(u);return n.runWebGLProgram(c,[r,i],"float32")}const lV={kernelName:je,backendName:"webgl",kernelFunc:oV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uV(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{pad:a,strides:o,inputShape:l}=s,u=Fl(l,i.shape,o,1,a),c=new QU(u);return n.runWebGLProgram(c,[r,i],"float32")}const cV={kernelName:Ke,backendName:"webgl",kernelFunc:uV},hV=cB+"\n  return cos(x);\n",dV=`\n  vec4 result = cos(x);\n  bvec4 isNaN = isnan(x);\n  ${JP}\n  return result;\n`,pV=hB({opSnippet:hV,packedOpSnippet:dV}),fV={kernelName:qe,backendName:"webgl",kernelFunc:pV},gV="\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n",mV=hB({opSnippet:gV}),bV={kernelName:Xe,backendName:"webgl",kernelFunc:mV};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class xV{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,a,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===s?1:0,[p,f]=[a-1+".0",o-1+".0"],[g,m,b]=c>1?[""+(a-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[x,y,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${g});\n      const float width_ratio = float(${x});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${i}) {\n          return;\n        }\n\n        float height_scale = ${m};\n        float width_scale = ${y};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const yV=e=>{const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:i,boxInd:a}=t,{cropSize:o,method:l,extrapolationValue:u}=s,c=new xV(r.shape,i.shape,o,l,u);return n.runWebGLProgram(c,[r,i,a],"float32")},vV={kernelName:Ze,backendName:"webgl",kernelFunc:yV};var wV;(function(e){e["Prod"]="*",e["Sum"]="+"})(wV||(wV={}));class kV{constructor(e,t,n,s){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,i=this.op===wV.Prod?"1.0":"0.0",a=n?i:`getX(${IV(r,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1];let l="",u="";n?(l=s?"end != "+(o-1):"end != 0",u=s?"end + 1":"end - 1"):(l=s?`end + pow2 < ${o}`:"end >= pow2",u=s?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${NM(r)} coords = getOutputCoords();\n        int end = ${CV(r,"coords",this.op)};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${CV(r,"coords",this.op)} = idx;\n          val ${this.op}= getX(${IV(r,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}}function IV(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function CV(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function SV(e,t,n,s,r,i){const a=t.shape.length,o=zc([s],a);let l=t;null!=o&&(l=DB({inputs:{x:t},backend:n,attrs:{perm:o}}));const u=Bc(1,a)[0];if(u!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const c=l.shape[u];let h=ZP({inputs:{x:l},backend:n});for(let d=0;d<=Math.ceil(Math.log2(c))-1;d++){const t=new kV(e,l.shape,!1,i),s=[[d]],r=h;h=n.runWebGLProgram(t,[h],h.dtype,s),n.disposeIntermediateTensorInfo(r)}if(r){const t=new kV(e,l.shape,r,i),s=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(s)}if(null!=o){const e=Pc(o),t=DB({inputs:{x:h},backend:n,attrs:{perm:e}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),t}return h}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $V(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,exclusive:a,reverse:o}=s;return SV(wV.Prod,r,n,i,a,o)}const NV={kernelName:Je,backendName:"webgl",kernelFunc:$V};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function TV(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,exclusive:a,reverse:o}=s;return SV(wV.Sum,r,n,i,a,o)}const EV={kernelName:Ye,backendName:"webgl",kernelFunc:TV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function RV(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:i}=t,{size:a,binaryOutput:o}=s;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(i.dataId),s=gz(e,t,i.dtype,i.shape,a);return n.makeTensorInfo([a],i.dtype,s)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(i),s=mz(e,t,a,o);return n.makeTensorInfo(s.shape,i.dtype,s.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const AV={kernelName:Qe,backendName:"webgl",kernelFunc:RV};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class _V{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function FV(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:i,dataFormat:a}=s,o=r.shape[0],l="NHWC"===a?r.shape[1]:r.shape[2],u="NHWC"===a?r.shape[2]:r.shape[3],c="NHWC"===a?r.shape[3]:r.shape[1],h=l*i,d=u*i,p=c/(i*i),f="NHWC"===a?[o,h,d,p]:[o,p,h,d],g=new _V(f,i,a);return n.runWebGLProgram(g,[r],r.dtype)}const DV={kernelName:et,backendName:"webgl",kernelFunc:FV};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class OV{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=LM(this.outputShape.length);const i=e.filterHeight,a=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${i}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class LV{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=LM(this.outputShape.length);const i=e.outChannels/e.inChannels,a=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let g=0;g<c;g++)d+=`\n          vec4 xTexelC${2*g};\n          int xTexelC${2*g}Ready;\n          vec4 xTexelC${2*g+1};\n          int xTexelC${2*g+1}Ready;\n          vec4 xC${g};`;d+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let g=0;g<c;g++)d+=`\n          xTexelC${2*g} = vec4(0.0);\n          xTexelC${2*g}Ready = 0;\n          xTexelC${2*g+1} = vec4(0.0);\n          xTexelC${2*g+1}Ready = 0;\n          xC${g} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let b=0;b<(h+1)/2;b++){const e=2*b;if(d+=`\n          xC = xCCorner + ${e*l};\n          `,1===o){if(e<c&&(a%2===1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n              `,d+=1===l&&e>0?`\n                xC${e} = vec4(xTexelC${e-2}.zw, xTexelC${e}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${e} = vec4(previous.zw, xTexelC${e}.xy);\n                  } else {\n                    xC${e} = vec4(0.0, 0.0, xTexelC${e}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xC${e} = xTexelC${e};\n                `,e+1<c)){const t=a%2===0?g(l):l;l%2===0&&a%2===1||l%2!==0&&a%2!==1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${t};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                    xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${e+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${e+1}Ready = 1;\n                  }\n                  `,d+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${e+1} = vec4(previous.zw, xTexelC${e+1}.xy);\n                    } else {\n                     xC${e+1} = vec4(0.0, 0.0, xTexelC${e+1}.xy);\n                    }\n                    `:`\n                    xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.xy);\n                    `):d+=1===t?`\n                    xC${e+1} = xTexelC${e};\n                    `:`\n                    xCOffset = xC + ${t};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                      xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${e+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${e+1}Ready = 1;\n                    }\n\n                    xC${e+1} = xTexelC${e+1};\n                    `}}else e<c&&(a%2===1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n              `,e+1<c&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${e+1} = vec4(xTexelC${e+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${e}Ready == 0) {\n                  xTexelC${e} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${e}.zw = vec2(0.0);\n                  }\n                  xTexelC${e}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${e+1}Ready == 0) {\n                  xTexelC${e+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${e+1}.zw = vec2(0.);\n                  }\n                  xTexelC${e+1}Ready = 1;\n                }\n\n                xC${e} = vec4(\n                  xTexelC${e}.xy, xTexelC${e+1}.xy);\n              `,e+1<c&&(d+=`\n                  xC${e+1} = vec4(xTexelC${e}.zw, xTexelC${e+1}.zw);\n                `)));e<c&&(d+=`\n            wTexel = getW(r, ${e}, d1, q);\n            dotProd += xC${e} * vec4(wTexel.xz, wTexel.xz);\n          `,e+1<c&&(d+=`\n              wTexel = getW(r, ${e+1}, d1, q);\n              dotProd += xC${e+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let p="",f="";n&&(p=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function MV(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:a,pad:o,dilations:l,dimRoundingMode:u}=s;let c=l;null==c&&(c=[1,1]),x(Gl(a,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${c}'`));const h=_l(r.shape,i.shape,a,c,o,u,!0);let d;d=ie().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels===1?new LV(h):new OV(h);const p=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(d,[r,i],"float32",p)}const zV={kernelName:tt,backendName:"webgl",kernelFunc:MV};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class PV{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,i=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${i} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class BV{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,i=t-1-e.padInfo.top,a=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function WV(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s,h=_l(r.shape,c,a,o,l,u,!0),d=new PV(h);return n.runWebGLProgram(d,[r,i],"float32")}const UV={kernelName:nt,backendName:"webgl",kernelFunc:WV};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function VV(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:i}=t,{strides:a,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s,h=_l(c,i.shape,a,o,l,u,!0),d=new BV(h);return n.runWebGLProgram(d,[r,i],"float32")}const GV={kernelName:st,backendName:"webgl",kernelFunc:VV};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class HV{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function jV(e){const{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],i=w(s.shape),a=wB({inputs:{x:s},backend:n,attrs:{shape:[i]}}),o=new HV(i),l=n.runWebGLProgram(o,[a],a.dtype),u=wB({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(l),u}const KV={kernelName:rt,backendName:"webgl",kernelFunc:jV};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class qV{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:i,filterHeight:a,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=s;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${i});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${a}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function XV(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i}=t,{strides:a,pad:o,dilations:l}=s,u=El(r.shape,i.shape,a,o,"NHWC",l);let c;const h=new qV(u);c=n.runWebGLProgram(h,[r,i],"float32");const d=wB({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),d}const JV={kernelName:it,backendName:"webgl",kernelFunc:XV};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function YV(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,i=t,{allDims:a,summedDims:o,idDims:l}=Pf(r,i.length);Wf(a.length,l,i);const{path:u,steps:c}=Uf(o,l),h=c.length;let d=null,p=a.length;const f=[];for(let g=0;g<h;++g){for(const e of c[g]){const{permutationIndices:t,expandDims:s}=Bf(p,l[e]);let r;Vf(t)?r=i[e]:(r=DB({inputs:{x:i[e]},backend:n,attrs:{perm:t}}),f.push(r));const a=r.shape.slice();for(let e=0;e<s.length;++e)a.splice(s[e],0,1);k(r.shape,a)||(r=wB({inputs:{x:r},backend:n,attrs:{shape:a}}),f.push(r)),null===d?d=r:(d=xB({inputs:{a:r,b:d},backend:n}),f.push(d))}g<h-1&&(u[g]>=0&&(d=_B({inputs:{x:d},backend:n,attrs:{axis:u[g]-(a.length-p),keepDims:!1}}),f.push(d)),p--)}for(const g of f)g!==d&&n.disposeIntermediateTensorInfo(g);return d}const ZV={kernelName:ct,backendName:"webgl",kernelFunc:YV},QV="return (x >= 0.0) ? x : (exp(x) - 1.0);",eG="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",tG=hB({opSnippet:QV,packedOpSnippet:eG}),nG={kernelName:ht,backendName:"webgl",kernelFunc:tG},sG="return (b >= 0.0) ? a : a * (b + 1.0);",rG="\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",iG=e=>{const{inputs:t,backend:n}=e,{dy:s,y:r}=t,i=ie().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new YP(rG,s.shape,r.shape):new XP(sG,s.shape,r.shape);return n.runWebGLProgram(i,[s,r],s.dtype)},aG={kernelName:dt,backendName:"webgl",kernelFunc:iG},oG="\n  return vec4(equal(a, b));\n",lG="return float(a == b);",uG=dB({opSnippet:lG,packedOpSnippet:oG,dtype:"bool",cpuKernelImpl:wz}),cG={kernelName:ft,backendName:"webgl",kernelFunc:uG},hG=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${wf};\n  float a1 = ${kf};\n  float a2 = ${If};\n  float a3 = ${Cf};\n  float a4 = ${Sf};\n  float a5 = ${$f};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,dG=hB({opSnippet:hG}),pG={kernelName:pt,backendName:"webgl",kernelFunc:dG},fG=cB+"\n  return exp(x);\n",gG="\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",mG=hB({opSnippet:fG,packedOpSnippet:gG,cpuKernelImpl:kz,dtype:"float32"}),bG={kernelName:gt,backendName:"webgl",kernelFunc:mG};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function xG(e){const{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:i}=t,a=i.shape.length,o=i.shape.slice();let l=r;return r<0&&(x(-(a+1)<=r,(()=>`Axis must be in the interval [${-(a+1)}, ${a}]`)),l=a+r+1),o.splice(l,0,1),wB({inputs:{x:i},backend:s,attrs:{shape:o}})}const yG={kernelName:mt,backendName:"webgl",kernelFunc:xG},vG="return exp(x) - 1.0;",wG=hB({opSnippet:vG,packedOpSnippet:vG,cpuKernelImpl:Iz}),kG={kernelName:bt,backendName:"webgl",kernelFunc:wG};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class IG{constructor(e,t,n){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${s}.0`:"1.0";let a;if("real"===e)a="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);a="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${a}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${s});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${s}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function CG(e,t,n){const s=n.texData.get(e.dataId),r=w(e.shape),i=e.shape[e.shape.length-1],a=r/i,o=wB({inputs:{x:e},backend:n,attrs:{shape:[a,i]}}),l=o.shape,u=new IG("real",l,t),c=new IG("imag",l,t),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],d=n.runWebGLProgram(u,h,"float32"),p=n.runWebGLProgram(c,h,"float32"),f=eB({inputs:{real:d,imag:p},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p);const g=wB({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),g}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function SG(e){const{inputs:t,backend:n}=e,{input:s}=t;return CG(s,!1,n)}const $G={kernelName:xt,backendName:"webgl",kernelFunc:SG};
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class NG{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function TG(e){const{backend:t,attrs:n}=e,{shape:s,value:r}=n;let{dtype:i}=n;if(i=i||B(r),"string"===i){const e=A(i,w(s));return e.fill(r),t.makeTensorInfo(s,i,e)}{const e=new NG(s,r),n=[[r]];return t.runWebGLProgram(e,[],i,n)}}const EG={kernelName:yt,backendName:"webgl",kernelFunc:TG};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class RG{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const AG={kernelName:vt,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,s=t,r=new RG(n.shape),i=s.runWebGLProgram(r,[n],n.dtype);return i}},_G="return floor(x);",FG=hB({opSnippet:_G,packedOpSnippet:_G,cpuKernelImpl:Cz}),DG={kernelName:wt,backendName:"webgl",kernelFunc:FG},OG="\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",LG="\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",MG=dB({opSnippet:OG,packedOpSnippet:LG,dtype:"int32"}),zG={kernelName:kt,backendName:"webgl",kernelFunc:MG};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class PG{constructor(e){this.variableNames=["A"];const t=AL(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class BG{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=AL(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const WG={kernelName:ws,backendName:"webgl",kernelFunc:GG};let UG,VG=ie().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function GG(e){const{inputs:t,backend:n,attrs:s}=e;let{pixels:r}=t;const{numChannels:i}=s,a="undefined"!==typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!==typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=a?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],h=[u,l,i];if(o||a){const e=ie().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");null!=UG&&e===VG||(VG=e,UG=document.createElement("canvas").getContext("2d",{willReadFrequently:VG})),UG.canvas.width=l,UG.canvas.height=u,UG.drawImage(r,0,0,l,u),r=UG.canvas}const d=n.makeTensorInfo(c,"int32");n.texData.get(d.dataId).usage=NO.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);const p=ie().getBool("WEBGL_PACK")?new BG(h):new PG(h),f=n.runWebGLProgram(p,[d],"int32");return n.disposeData(d.dataId),f}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function HG(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=s,g=jl(c),m=_l(r.shape,i.shape,l,h,u,d,!1,g);let b;const x=[],y=null!=a,v=null!=o,w="leakyrelu"===p,k=()=>{const e=[r,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){const t=wB({inputs:{x:e},backend:n,attrs:{shape:[e.shape[0],1,1]}});return x.push(t),t}return e};if(y&&e.push(t(a,c)),v&&e.push(t(o,c)),w){const t=n.makeTensorInfo([],"float32",nr(f,"float32"));e.push(t),x.push(t)}return e};if(1!==m.filterHeight||1!==m.filterWidth||1!==m.dilationHeight||1!==m.dilationWidth||1!==m.strideHeight||1!==m.strideWidth||"SAME"!==m.padInfo.type&&"VALID"!==m.padInfo.type)if(m.strideWidth<=2&&"channelsLast"===g&&ie().getBool("WEBGL_EXP_CONV")){const e=p?pB(p,!0):null,t=new VU(m,y,e,v,w),s=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],r=k();b=n.runWebGLProgram(t,r,"float32",s)}else if(ie().getBool("WEBGL_CONV_IM2COL"))b=KU({x:r,filter:i,convInfo:m,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=p?pB(p,!1):null,t=new WU(m,y,e,v,w),s=k();b=n.runWebGLProgram(t,s,"float32")}else b=jU({x:r,filter:i,convInfo:m,backend:n,bias:a,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const I=wB({inputs:{x:b},backend:n,attrs:{shape:m.outShape}});return x.push(b),x.forEach((e=>n.disposeIntermediateTensorInfo(e))),I}const jG={kernelName:Cs,backendName:"webgl",kernelFunc:HG};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function KG(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:i,bias:a,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:d,leakyreluAlpha:p}=s,f=[];let g=c;null==g&&(g=[1,1]),x(Gl(l,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${g}'`));const m=_l(r.shape,i.shape,l,g,u,h,!0),b=ie().getBool("WEBGL_PACK_DEPTHWISECONV")&&m.strideWidth<=2&&m.outChannels/m.inChannels===1,y=d?pB(d,b):null,v=[r,i],w=null!=a,k=null!=o,I="leakyrelu"===d;if(w&&v.push(a),k&&v.push(o),I){const e=n.makeTensorInfo([],"float32",nr(p,"float32"));v.push(e),f.push(e)}let C;C=b?new LV(m,w,y,k,I):new OV(m,w,y,k,I);const S=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]],$=n.runWebGLProgram(C,v,"float32",S);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),$}const qG={kernelName:Ss,backendName:"webgl",kernelFunc:KG};class XG{constructor(e,t,n,s){this.sliceDim=e,this.strides=t,this.paramsShape=s,this.variableNames=["x","indices"],this.outputShape=n;const r=NM(n.length);let i="\n    int index;";for(let a=0;a<this.sliceDim;a++)i+=`\n          index = round(getIndices(coords[0], ${a}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[a]};\n          flattenIndex += index * ${this.strides[a]};`;this.userCode=`\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${i}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function JG(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,i=r.shape,a=i[i.length-1],o=w(s.shape),[l,u,c,h]=gf(s,r),d=wB({inputs:{x:r},backend:n,attrs:{shape:[u,a]}}),p=wB({inputs:{x:s},backend:n,attrs:{shape:[w(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||"string"===s.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(s),i=Sz(e,t,s.dtype,u,a,c,h,s.shape,o);return n.makeTensorInfo(l,s.dtype,i.values)}const f=new XG(a,h,[u,c],s.shape),g=n.runWebGLProgram(f,[p,d],p.dtype),m=wB({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(g),m}const YG={kernelName:St,backendName:"webgl",kernelFunc:JG};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class ZG{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=NM(this.rank),s=QG(e,2);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${s}));\n      }\n    `}}function QG(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<e.length;r++)2===r?s.push("index"):s.push(`${n[r]}`);return s.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eH(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:i}=t,{axis:a,batchDims:o}=s,l=T(a,r.shape)[0];if(ie().get("DEBUG")){const e=n.readSync(i.dataId),t=r.shape[l];for(let n=0;n<e.length;++n){const s=e[n];x(s<=t-1&&s>=0,(()=>`GatherV2: the index value ${s} is not in [0, ${t-1}]`))}}const u=ag(r,i,l,o),c=w(i.shape),h=[],d=wB({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=wB({inputs:{x:i},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(d),h.push(p);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,i])||"string"===r.dtype){const e=n.bufferSync(p),t=n.bufferSync(d),s=$z(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,s.dtype,s.values)}const g=new ZG(d.shape,f),m=n.runWebGLProgram(g,[d,p],d.dtype);h.push(m);const b=wB({inputs:{x:m},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}const tH={kernelName:Ct,backendName:"webgl",kernelFunc:eH},nH="return float(a > b);",sH="\n  return vec4(greaterThan(a, b));\n",rH=dB({opSnippet:nH,packedOpSnippet:sH,cpuKernelImpl:Nz,dtype:"bool"}),iH={kernelName:$t,backendName:"webgl",kernelFunc:rH},aH="return float(a >= b);",oH="\n  return vec4(greaterThanEqual(a, b));\n",lH=dB({opSnippet:aH,packedOpSnippet:oH,dtype:"bool",cpuKernelImpl:Tz}),uH={kernelName:Nt,backendName:"webgl",kernelFunc:lH};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function cH(e){const{inputs:t,backend:n}=e,{input:s}=t;return CG(s,!0,n)}const hH={kernelName:Et,backendName:"webgl",kernelFunc:cH},dH="return float(!isnan(x) && !isinf(x));",pH=hB({opSnippet:dH,dtype:"bool"}),fH={kernelName:At,backendName:"webgl",kernelFunc:pH},gH="return float(isinf(x));",mH=hB({opSnippet:gH,dtype:"bool"}),bH={kernelName:_t,backendName:"webgl",kernelFunc:mH},xH="return float(isnan(x));",yH=hB({opSnippet:xH,dtype:"bool"}),vH={kernelName:Ft,backendName:"webgl",kernelFunc:yH},wH="return float(a < b);",kH="\n  return vec4(lessThan(a, b));\n",IH=dB({opSnippet:wH,packedOpSnippet:kH,cpuKernelImpl:Ez,dtype:"bool"}),CH={kernelName:Ot,backendName:"webgl",kernelFunc:IH},SH="return float(a <= b);",$H="\n  return vec4(lessThanEqual(a, b));\n",NH=dB({opSnippet:SH,packedOpSnippet:$H,cpuKernelImpl:Rz,dtype:"bool"}),TH={kernelName:Lt,backendName:"webgl",kernelFunc:NH};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function EH(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:i}=n,a=Az(s,r,i);return t.makeTensorInfo([a.length],"float32",a)}const RH={kernelName:Mt,backendName:"webgl",kernelFunc:EH},AH=cB+"\n  return x < 0.0 ? 0./0. : log(x);\n",_H="\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",FH=hB({opSnippet:AH,packedOpSnippet:_H,cpuKernelImpl:_z}),DH={kernelName:zt,backendName:"webgl",kernelFunc:FH},OH=cB+"\n  return log(1.0 + x);\n",LH=hB({opSnippet:OH}),MH={kernelName:Pt,backendName:"webgl",kernelFunc:LH},zH="return float(a >= 1.0 && b >= 1.0);",PH="\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",BH=dB({opSnippet:zH,packedOpSnippet:PH,dtype:"bool"}),WH={kernelName:Bt,backendName:"webgl",kernelFunc:BH},UH="return float(!(x >= 1.0));",VH=hB({opSnippet:UH}),GH={kernelName:Wt,backendName:"webgl",kernelFunc:VH},HH="return float(a >= 1.0 || b >= 1.0);",jH="\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",KH=dB({opSnippet:HH,packedOpSnippet:jH,dtype:"bool"}),qH={kernelName:Ut,backendName:"webgl",kernelFunc:KH};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class XH{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];const i=t,a=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${i}; j <= ${i}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${a}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class JH{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=t,a=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${i};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${i}; j <= ${i}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${a}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const YH=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:i,bias:a,alpha:o,beta:l}=s,u=ie().getBool("WEBGL_PACK_NORMALIZATION")?new JH(r.shape,i,a,o,l):new XH(r.shape,i,a,o,l);return n.runWebGLProgram(u,[r],r.dtype)},ZH={kernelName:Gt,backendName:"webgl",kernelFunc:YH};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class QH{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${s}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${s})\n                * float(${r})\n                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const ej=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r,y:i,dy:a}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s,h=new QH(r.shape,o,l,u,c);return n.runWebGLProgram(h,[r,i,a],r.dtype)},tj={kernelName:Ht,backendName:"webgl",kernelFunc:ej};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nj(e,t,n,s){const r=w(t),i=w(e.shape),a=i/r,o=wB({inputs:{x:e},attrs:{shape:[a,r]},backend:s}),l=$B(o,e.dtype,"max",s),u=wB({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(l),u}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function sj(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:i,keepDims:a}=s,o=r.shape.length,l=T(i,r.shape);let u=l;const c=zc(u,o),h=null!=c,d=n.shouldExecuteOnCPU([r]);let p=r;if(h){if(d){const e=n.texData.get(p.dataId),t=e.values,s=new Array(o);for(let n=0;n<s.length;n++)s[n]=r.shape[c[n]];const i=oP(t,r.shape,r.dtype,c,s);p=n.makeTensorInfo(s,r.dtype);const a=n.texData.get(p.dataId);a.values=i}else p=RB(r,c,n);u=Bc(u.length,o)}Mc("max",u,o);const[f,g]=Oc(p.shape,u);let m,b=f;if(a&&(b=Lc(f,l)),d){const e=n.texData.get(p.dataId),t=e.values,s=Fz(t,w(g),b,r.dtype);m=n.makeTensorInfo(b,r.dtype);const i=n.texData.get(m.dataId);i.values=s}else m=nj(p,g,b,n);return h&&n.disposeIntermediateTensorInfo(p),m}const rj={kernelName:jt,backendName:"webgl",kernelFunc:sj},ij=qP+"\n  return max(a, b);\n",aj="\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+JP+"\n  return result;\n",oj=dB({opSnippet:ij,packedOpSnippet:aj,cpuKernelImpl:Dz}),lj={kernelName:Kt,backendName:"webgl",kernelFunc:oj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function uj(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;EL(r,"maxPool");const{filterSize:i,strides:a,pad:o,dimRoundingMode:l}=s,u=1;x(Gl(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=Rl(r.shape,i,a,u,o,l);if(1===c.filterWidth&&1===c.filterHeight&&k(c.inShape,c.outShape))return ZP({inputs:{x:r},backend:n});const h=new AW(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}const cj={kernelName:qt,backendName:"webgl",kernelFunc:uj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hj(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:i,strides:a,pad:o,dataFormat:l,dimRoundingMode:u}=s,c=[1,1,1],h=Al(r.shape,i,a,c,o,u,l),d=new _W(h,"max",!1);return n.runWebGLProgram(d,[r],r.dtype)}const dj={kernelName:Jt,backendName:"webgl",kernelFunc:hj};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class pj{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,i=e.effectiveFilterWidth,a=r-1-e.padInfo.top,o=i-1-e.padInfo.left,l=r*i-1;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${i} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class fj{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,i=e.dilationHeight,a=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${i}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${a}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gj(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i}=t,a=i,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=[1,1,1],d=Al(a.shape,o,l,h,u,c),p=new _W(d,"max",!0),f=n.runWebGLProgram(p,[a],a.dtype),g=new fj(d),m=n.runWebGLProgram(g,[r,f],a.dtype);return n.disposeIntermediateTensorInfo(f),m}const mj={kernelName:Yt,backendName:"webgl",kernelFunc:gj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bj(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:i,output:a}=t,o=i;EL([i,a],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,d=Rl(o.shape,l,u,1,c,h),p=!0,f=new AW(d,"max",p),g=n.runWebGLProgram(f,[o],o.dtype),m=new pj(d),b=n.runWebGLProgram(m,[r,g],o.dtype);return n.disposeIntermediateTensorInfo(g),b}const xj={kernelName:Xt,backendName:"webgl",kernelFunc:bj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yj(e,t,n,s){let r=new AW(n,"max",!1);const i=s.runWebGLProgram(r,[e],"float32");r=new AW(n,"max",!0,!0,t);const a=s.runWebGLProgram(r,[e],"float32");return[i,a]}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const vj={kernelName:Zt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:i,pad:a,includeBatchInIndex:o}=t,l=n;x(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const u=[1,1];x(Gl(i,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${u}'`));const c=Rl(s.shape,r,i,u,a),[h,d]=yj(s,o,c,l);return[h,d]}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function wj(e,t,n,s){const r=w(t),i=w(e.shape),a=i/r,o=wB({inputs:{x:e},attrs:{shape:[a,r]},backend:s}),l=$B(o,"float32","mean",s),u=wB({inputs:{x:l},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(o),s.disposeIntermediateTensorInfo(l),u}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const kj={kernelName:Qt,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{keepDims:r,axis:i}=t,a=n,o=s.shape.length,l=T(i,s.shape);let u=l;const c=zc(u,o),h=null!=c,d=a.shouldExecuteOnCPU([s]),p=[];let f=s;if(h){if(d){const e=a.texData.get(f.dataId),t=e.values,n=new Array(o);for(let a=0;a<n.length;a++)n[a]=s.shape[c[a]];const r=oP(t,s.shape,s.dtype,c,n);f=a.makeTensorInfo(n,s.dtype);const i=a.texData.get(f.dataId);i.values=r}else f=RB(s,c,a);p.push(f),u=Bc(u.length,o)}Mc("sum",u,o);const[g,m]=Oc(f.shape,u);let b=g;r&&(b=Lc(g,l));const x=wj(f,m,b,a);for(const y of p)a.disposeIntermediateTensorInfo(y);return x}};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Ij(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s,o=r.shape.length,l=T(i,r.shape);let u=l;const c=zc(u,o);let h=r;null!=c&&(h=DB({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Bc(u.length,r.shape.length)),Mc("min",u,o);const[d,p]=Oc(h.shape,u),f=w(p),g=wB({inputs:{x:h},backend:n,attrs:{shape:[-1,f]}}),m=$B(g,g.dtype,"min",n);let b;if(a){const e=Lc(d,l);b=wB({inputs:{x:m},backend:n,attrs:{shape:e}})}else b=wB({inputs:{x:m},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),b}const Cj={kernelName:en,backendName:"webgl",kernelFunc:Ij},Sj=qP+"\n  return min(a, b);\n",$j="\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+JP+"\n  return result;\n",Nj=dB({opSnippet:Sj,packedOpSnippet:$j,cpuKernelImpl:Oz}),Tj={kernelName:tn,backendName:"webgl",kernelFunc:Nj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Ej{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=NM(s),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l="reflect"===n?0:1;this.userCode=1!==s?`\n      ${r} start = ${r}(${i});\n      ${r} end = ${r}(${a});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${s}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Rj{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=NM(s),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=cP("rc",s),l=cP("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===s){const e=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[s-2]} += 1;\n        if(${o[s-2]} < ${this.outputShape[s-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[s-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${i});\n      const ${r} end = ${r}(${a});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const Aj=({inputs:e,backend:t,attrs:n})=>{const{x:s}=e,{paddings:r,mode:i}=n,a=ie().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Rj(s.shape,r,i):new Ej(s.shape,r,i),o=t.runWebGLProgram(a,[s],s.dtype);return o},_j={kernelName:nn,backendName:"webgl",kernelFunc:Aj},Fj="if (b == 0.0) return NAN;\n  return mod(a, b);",Dj="\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+JP+"\n  return result;\n",Oj=dB({opSnippet:Fj,packedOpSnippet:Dj}),Lj={kernelName:sn,backendName:"webgl",kernelFunc:Oj};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Mj{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const zj="\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",Pj="\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",Bj=dB({opSnippet:zj,packedOpSnippet:Pj,checkOutOfBounds:!0}),Wj={kernelName:ut,backendName:"webgl",kernelFunc:Bj},Uj="return a - b;",Vj=dB({opSnippet:Uj,packedOpSnippet:Uj,supportsComplex:!0,cpuKernelImpl:rP}),Gj={kernelName:us,backendName:"webgl",kernelFunc:Vj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Hj(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:i}=s,a=T([i],r.shape),o=sj({inputs:{x:r},backend:n,attrs:{reductionIndices:a,keepDims:!1}}),l=Lc(o.shape,a),u=wB({inputs:{x:o},backend:n,attrs:{shape:l}}),c=Vj({inputs:{a:r,b:u},backend:n}),h=mG({inputs:{x:c},backend:n}),d=_B({inputs:{x:h},backend:n,attrs:{axis:a,keepDims:!1}}),p=wB({inputs:{x:d},backend:n,attrs:{shape:l}}),f=Bj({inputs:{a:h,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),f}const jj={kernelName:Jn,backendName:"webgl",kernelFunc:Hj};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Kj(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:i,seed:a,normalized:o}=s,l=o?r:Hj({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new Mj(u,c,i),d=[[a]],p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}const qj={kernelName:rn,backendName:"webgl",kernelFunc:Kj},Xj=IP+"\n  return -x;\n",Jj="\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n";function Yj(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){const e=n.texData.get(s.dataId),[t,r]=Mz(e.values,s.shape,s.dtype);return n.makeTensorInfo(r,s.dtype,t)}let r;return r=ie().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new LP(s.shape,Jj):new kP(s.shape,Xj),n.runWebGLProgram(r,[s],s.dtype)}const Zj={kernelName:on,backendName:"webgl",kernelFunc:Yj},Qj=Zd;function eK(e){$s("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(i.dataId),{selectedIndices:h}=Qj(u,c,a,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}const tK={kernelName:un,backendName:"webgl",kernelFunc:eK},nK=Qd;function sK(e){$s("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s,c=n.readSync(r.dataId),h=n.readSync(i.dataId),{selectedIndices:d,validOutputs:p}=nK(c,h,a,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}const rK={kernelName:cn,backendName:"webgl",kernelFunc:sK},iK=ep;function aK(e){$s("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:i}=t,{maxOutputSize:a,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),h=n.readSync(i.dataId),d=a,p=o,f=l,g=u,{selectedIndices:m,selectedScores:b}=iK(c,h,d,p,f,g);return[n.makeTensorInfo([m.length],"int32",new Int32Array(m)),n.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const oK={kernelName:hn,backendName:"webgl",kernelFunc:aK};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class lK{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${s}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const uK=e=>{const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{dtype:i,depth:a,onValue:o,offValue:l}=s,u=w(r.shape),c=new lK(u,a,o,l),h=wB({inputs:{x:r},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[h],i);n.disposeIntermediateTensorInfo(h);const p=[...r.shape,a],f=wB({inputs:{x:d},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(d),f},cK={kernelName:pn,backendName:"webgl",kernelFunc:uK};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function hK(e){const{inputs:t,backend:n}=e,{x:s}=t;if("complex64"===s.dtype){const e=gU({inputs:{input:s},backend:n}),t=hK({inputs:{x:e},backend:n}),r=OU({inputs:{input:s},backend:n}),i=hK({inputs:{x:r},backend:n}),a=eB({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),a}return TG({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:n})}const dK={kernelName:ys,backendName:"webgl",kernelFunc:hK};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function pK(e){const{inputs:t,backend:n}=e,{x:s}=t;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const e=gU({inputs:{input:s},backend:n}),t=pK({inputs:{x:e},backend:n}),r=OU({inputs:{input:s},backend:n}),i=hK({inputs:{x:r},backend:n}),a=eB({inputs:{real:t,imag:i},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i),a}return TG({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:n})}const fK={kernelName:dn,backendName:"webgl",kernelFunc:pK};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function gK(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return xG({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const i=t[0].shape,a=t[0].dtype;t.forEach((e=>{y(i,e.shape,"All tensors passed to stack must have matching shapes"),x(a===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=t.map((e=>{const t=xG({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),u=PU({inputs:l,backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const mK={kernelName:fn,backendName:"webgl",kernelFunc:gK};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class bK{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=NM(s),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${r} start = ${r}(${i});\n      ${r} end = ${r}(${a});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${i};\n        int end = ${a};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class xK{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=NM(s),i=t.map((e=>e[0])).join(","),a=t.map(((t,n)=>t[0]+e[n])).join(","),o=cP("rc",s),l=cP("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${o[s-1]} += 1;\n       if(${u}) {\n      `,1===s?"":`}\n       rc = outputLoc;\n       ${o[s-2]} += 1;\n       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${o[s-1]} += 1;\n         if(${u}) {`],d=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let f=0,g=1===s?2:4;f<g;f++)p+=`\n        ${h[f]}\n        if (${d}) {\n          result[${f}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${f}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===s?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${i});\n      const ${r} end = ${r}(${a});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const yK=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:i,constantValue:a}=s;if(0===w(r.shape)){const e=i.map(((e,t)=>e[0]+r.shape[t]+e[1]));return TG({backend:n,attrs:{shape:e,value:a,dtype:r.dtype}})}const o=ie().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new xK(r.shape,i,a):new bK(r.shape,i,a),l=[[a]];return n.runWebGLProgram(o,[r],r.dtype,l)},vK={kernelName:gn,backendName:"webgl",kernelFunc:yK},wK="\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",kK="\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+JP+"\n  return result;\n",IK=dB({opSnippet:wK,packedOpSnippet:kK}),CK={kernelName:mn,backendName:"webgl",kernelFunc:IK};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function SK(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:i,keepDims:a}=s,o=r.shape.length,l=[],u=T(i,r.shape);let c=u;const h=zc(c,o);let d,p=r;if(null!=h&&(p=DB({inputs:{x:r},backend:n,attrs:{perm:h}}),c=Bc(c.length,o),l.push(p)),Mc("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:s,outDtype:r}=Pz(p.shape,p.dtype,e,c);d=n.makeTensorInfo(s,r,t)}else{const[e,t]=Oc(p.shape,c),s=w(t),i=wB({inputs:{x:p},backend:n,attrs:{shape:[-1,s]}}),a=Wr(r.dtype),o=$B(i,a,"prod",n);d=wB({inputs:{x:o},backend:n,attrs:{shape:e}}),l.push(i),l.push(o)}if(a){l.push(d);const e=Lc(d.shape,u);d=wB({inputs:{x:d},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const $K={kernelName:xn,backendName:"webgl",kernelFunc:SK};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function NK(e){const{inputs:t,backend:n,attrs:s}=e,{paramsNestedSplits:r,paramsDenseValues:i,indices:a}=t,{outputRaggedRank:o}=s,l=r.map((e=>n.readSync(e.dataId))),u=r.map((e=>e.shape)),c=n.readSync(i.dataId),h=n.readSync(a.dataId),[d,p,f]=Bz(l,u,c,i.shape,i.dtype,h,a.shape,o),g=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),m=n.makeTensorInfo(f,i.dtype,p);return g.concat([m])}const TK={kernelName:yn,backendName:"webgl",kernelFunc:NK};
/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function EK(e){const{inputs:t,backend:n}=e,{starts:s,limits:r,deltas:i}=t,a=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(i.dataId),[u,c]=Wz(a,s.shape,s.dtype,o,r.shape,l,i.shape),h=n.makeTensorInfo([u.length],"int32",u),d=n.makeTensorInfo([c.length],s.dtype,c);return[h,d]}const RK={kernelName:vn,backendName:"webgl",kernelFunc:EK};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function AK(e){const{inputs:t,backend:n,attrs:s}=e,{shape:r,values:i,defaultValue:a,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=s,u=n.readSync(r.dataId),c=n.readSync(i.dataId),h=n.readSync(a.dataId),d=o.map((e=>n.readSync(e.dataId))),p=o.map((e=>e.shape)),[f,g]=Uz(u,r.shape,c,i.shape,i.dtype,h,a.shape,d,p,l);return n.makeTensorInfo(f,i.dtype,g)}const _K={kernelName:wn,backendName:"webgl",kernelFunc:AK},FK=e=>{const{backend:t,attrs:n}=e,{start:s,stop:r,step:i,dtype:a}=n,o=Vz(s,r,i,a);return t.makeTensorInfo([o.length],a,o)},DK={kernelName:kn,backendName:"webgl",kernelFunc:FK},OK="return 1.0 / x;",LK=hB({opSnippet:OK}),MK={kernelName:Cn,backendName:"webgl",kernelFunc:LK},zK=IP+"\n  return (x < 0.0) ? 0.0 : x;\n",PK="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",BK=hB({opSnippet:zK,packedOpSnippet:PK}),WK={kernelName:Sn,backendName:"webgl",kernelFunc:BK},UK=IP+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",VK="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",GK=hB({opSnippet:UK,packedOpSnippet:VK}),HK={kernelName:An,backendName:"webgl",kernelFunc:GK};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class jK{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[s&&t>1?a-1:a,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class KK{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[s&&t>1?a-1:a,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function qK(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:a,size:o}=s,[l,u]=o,c=ie().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new KK(r.shape,l,u,i,a):new jK(r.shape,l,u,i,a);return n.runWebGLProgram(c,[r],"float32")}const XK={kernelName:En,backendName:"webgl",kernelFunc:qK};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class JK{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,i,a]=e,o=[n&&i>1?s-1:s,n&&a>1?r-1:r],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function YK(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:i}=t,{alignCorners:a}=s,o=new JK(i.shape,r.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}const ZK={kernelName:Rn,backendName:"webgl",kernelFunc:YK};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class QK{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[s&&t>1?a-1:a,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let d;d=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${a}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class eq{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,a,o,l]=e;this.outputShape=[i,t,n,l];const u=[s&&t>1?a-1:a,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let d;d=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${a}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function tq(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:i,halfPixelCenters:a,size:o}=s,[l,u]=o,c=ie().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new eq(r.shape,l,u,i,a):new QK(r.shape,l,u,i,a);return n.runWebGLProgram(c,[r],r.dtype)}const nq={kernelName:Nn,backendName:"webgl",kernelFunc:tq};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class sq{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,i,a]=e,o=[n&&i>1?s-1:s,n&&a>1?r-1:r],l=[n&&i>1?i-1:i,n&&a>1?a-1:a],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${i}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${a}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rq(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:i}=t,{alignCorners:a}=s,o=new sq(i.shape,r.shape,a);return n.runWebGLProgram(o,[i],i.dtype)}const iq={kernelName:Tn,backendName:"webgl",kernelFunc:rq};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class aq{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const s=n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`,r=e.map(((e,t)=>s(t))).join(","),i=NM(n);this.userCode=`\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class oq{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const s=cP("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,i=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,a=NM(n);function o(e){return h(e)}function l(e){return e[n-1]="("+e[n-1]+" + 1)",h(e)}function u(e){return e[n-2]="("+e[n-2]+" + 1)",h(e)}function c(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",h(e)}function h(t){const n=e.map(((e,n)=>d(n,t))),s=n.join(","),r=n.slice(-2).join(",");return`getChannel(getX(${s}), vec2(${r}))`}function d(n,s){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${s[n]} - 1`:`${s[n]}`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${a} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o(s.slice())};\n          if(${r}){\n            result.g = ${l(s.slice())};\n          }\n          if(${i}) {\n            result.b = ${u(s.slice())};\n            if(${r}) {\n              result.a = ${c(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function lq(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:i}=s,a=r.shape.length,o=T(i,r.shape);if(0===a)return ZP({inputs:{x:r},backend:n});const l=ie().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new oq(r.shape,o):new aq(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}const uq={kernelName:_n,backendName:"webgl",kernelFunc:lq};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class cq{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],s=e[2];this.outputShape=e;let r="";r="number"===typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const hq={kernelName:ks,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:i,center:a}=t,o=n,l=new cq(s.shape,i),[u,c]=uf(a,s.shape[1],s.shape[2]),h=[[u,c,Math.sin(r),Math.cos(r)]],d=o.runWebGLProgram(l,[s],s.dtype,h);return d}},dq="\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n",pq=hB({opSnippet:dq}),fq={kernelName:Fn,backendName:"webgl",kernelFunc:pq},gq="return inversesqrt(x);",mq=hB({opSnippet:gq,cpuKernelImpl:Gz}),bq={kernelName:Dn,backendName:"webgl",kernelFunc:mq};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class xq{constructor(e,t,n,s,r,i,a=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const l=NM(r.length),u=NM(i.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===s?d="i":2===s&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const g=`getDefaultValue(${f})`,m=t>1?"strides[j]":"strides";this.userCode=`\n        ${l} strides = ${l}(${r});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${h});\n              flattenedIndex += index * ${m};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(${g}, sum, float(found)));\n        }\n      `}}
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class yq{constructor(e,t,n,s,r,i,a=!0,o=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const l=NM(r.length),u=NM(i.length);let c="";1===n?c="i":2===n&&(c="i, j");const h=`getIndices(${c})`;let d="";1===s?d="i":2===s&&(d="i, coords[1]");const p=`getUpdates(${d})`;let f="";o&&(f="coords[0], coords[1]");const g=`getDefaultValue(${f})`,m=t>1?"strides[j]":"strides",b=t>1?"strides[j + 1]":"strides";this.userCode=`\n        ${l} strides = ${l}(${r});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          vec4 sum = vec4(0.);\n          vec4 found = vec4(0.);\n          for (int i = 0; i < ${e}; i+=2) {\n            ivec2 flattenedIndex = ivec2(0);\n            for (int j = 0; j < ${t}; j+=2) {\n              ivec4 index = round(${h});\n              flattenedIndex += index.xz * ${m};\n              if (j + 1 < ${t}) {\n                flattenedIndex += index.yw * ${b};\n              }\n            }\n            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||\n                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {\n              vec4 updVals = ${p};\n              if (flattenedIndex[0] == coords[0]) {\n                sum.xy += updVals.xy;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[0] == coords[0] + 1) {\n                sum.zw += updVals.xy;\n                found.zw = vec2(1.);\n              }\n              if (flattenedIndex[1] == coords[0]) {\n                sum.xy += updVals.zw;\n                found.xy = vec2(1.);\n              } else if (flattenedIndex[1] == coords[0] + 1) {\n                sum.zw += updVals.zw;\n                found.zw = vec2(1.);\n              }\n            }\n          }\n          setOutput(mix(${g}, sum, found));\n        }\n      `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function vq(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:i}=t,{shape:a}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=xf(i,r,a),d=[h/u,u];if(0===h)return n.makeTensorInfo(a,r.dtype);const p=wB({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),f=wB({inputs:{x:i},backend:n,attrs:{shape:[l,u]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0]));let m;m=ie().getBool("WEBGL_PACK")?new yq(l,o,p.shape.length,f.shape.length,c,d):new xq(l,o,p.shape.length,f.shape.length,c,d);const b=n.runWebGLProgram(m,[f,p,g],f.dtype),x=wB({inputs:{x:b},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(g),x}const wq={kernelName:On,backendName:"webgl",kernelFunc:vq};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class kq{constructor(e,t,n,s){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];const r="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,a=2===ie().getNumber("WEBGL_VERSION")?r:i,o="left"===s?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${a}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${o} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}}
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Iq(e){const{inputs:t,backend:n,attrs:s}=e,{sortedSequence:r,values:i}=t,{side:a}=s,o=new kq(r.shape[0],r.shape[1],i.shape[1],a),l=[[r.shape[1]]];return n.runWebGLProgram(o,[r,i],"int32",l)}const Cq={kernelName:Mn,backendName:"webgl",kernelFunc:Iq};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class Sq{constructor(e,t,n){let s,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[],a=[];for(let s=0;s<t.length;s++)a.push(`${n[s]}`),s<e&&i.push(`${n[s]}`);s=i.join(),r=a.join()}const i=NM(n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $q(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:i}=t,a=new Sq(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(a,[s,r,i],Br(r.dtype,i.dtype))}const Nq={kernelName:zn,backendName:"webgl",kernelFunc:$q},Tq=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${yf};\n  float scale = ${vf};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,Eq=hB({opSnippet:Tq}),Rq={kernelName:Pn,backendName:"webgl",kernelFunc:Eq},Aq=cB+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",_q="\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Fq=hB({opSnippet:Aq,packedOpSnippet:_q,cpuKernelImpl:jz}),Dq={kernelName:Gn,backendName:"webgl",kernelFunc:Fq},Oq="\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n",Lq=hB({opSnippet:Oq}),Mq={kernelName:Vn,backendName:"webgl",kernelFunc:Lq},zq=cB+"\n  return sin(x);\n",Pq=`\n  vec4 result = sin(x);\n  bvec4 isNaN = isnan(x);\n  ${JP}\n  return result;\n`,Bq=hB({opSnippet:zq,packedOpSnippet:Pq}),Wq={kernelName:Wn,backendName:"webgl",kernelFunc:Bq},Uq="\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n",Vq=hB({opSnippet:Uq}),Gq={kernelName:Un,backendName:"webgl",kernelFunc:Vq},Hq="\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n",jq=hB({opSnippet:Hq}),Kq={kernelName:Hn,backendName:"webgl",kernelFunc:jq},qq=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:i,paddings:a}=s;x(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=i.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...a);for(let b=1+i.length;b<r.shape.length;++b)l.push([0,0]);const u=[],c=yK({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=cf(c.shape,i,o,!1),d=hf(h.length,i.length,!1),p=df(c.shape,i,o,!1),f=wB({inputs:{x:c},backend:n,attrs:{shape:h}}),g=DB({inputs:{x:f},backend:n,attrs:{perm:d}}),m=wB({inputs:{x:g},backend:n,attrs:{shape:p}});return u.push(c),u.push(f),u.push(g),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),m},Xq={kernelName:qn,backendName:"webgl",kernelFunc:qq};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Jq(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:i,defaultValue:a}=t;if(1!==i.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${i.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==a.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${a.shape}`);const o=n.readSync(s.dataId),l=n.readSync(r.dataId),u=n.readSync(i.dataId),c=n.readSync(a.dataId)[0],[h,d,p,f,g]=Xz(o,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(d,s.dtype,h),n.makeTensorInfo([d[0]],r.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([g.length],s.dtype,new Int32Array(g))]}const Yq={kernelName:Yn,backendName:"webgl",kernelFunc:Jq};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function Zq(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:i}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==i.shape.length)throw new Error(`Target shape should be a vector but received shape ${i.shape}`);const a=Array.from(n.readSync(r.dataId)),o=n.readSync(s.dataId),l=Array.from(n.readSync(i.dataId)),[u,c,h]=Jz(o,s.shape,s.dtype,a,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],i.dtype,new Int32Array(h))]}const Qq={kernelName:Zn,backendName:"webgl",kernelFunc:Zq};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function eX(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${i.shape}`);const a=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(i.dataId),[u,c]=Yz(a,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}const tX={kernelName:Qn,backendName:"webgl",kernelFunc:eX};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nX(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:i}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==i.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${i.shape}`);const a=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(i.dataId),[u,c]=Yz(a,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}const sX={kernelName:es,backendName:"webgl",kernelFunc:nX};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function rX(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:i,defaultValue:a}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=xf(i,r,o),p=!1;if("string"===i.dtype){const e=n.bufferSync(r),t=n.bufferSync(i),s=or(n.readSync(a.dataId)[0]),f=Hz(e,t,o,d,c,u,l,h,s,p);return n.makeTensorInfo(o,f.dtype,f.values)}const f=new xq(u,l,r.shape.length,i.shape.length,h,[d,1],p),g=n.runWebGLProgram(f,[i,r,a],i.dtype),m=wB({inputs:{x:g},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(g),m}const iX={kernelName:ts,backendName:"webgl",kernelFunc:rX};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function aX(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:i,axis:a}=s,o=T(a,r.shape)[0],l=Hf(r,i,o),u=r.shape.length,c=new Array(u).fill(0),h=r.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const s=eU({inputs:{x:r},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,s}))}const oX={kernelName:Xn,backendName:"webgl",kernelFunc:aX},lX="return sqrt(x);",uX=hB({opSnippet:lX,packedOpSnippet:lX,cpuKernelImpl:Zz}),cX={kernelName:jn,backendName:"webgl",kernelFunc:uX},hX="return x * x;",dX=hB({opSnippet:hX}),pX={kernelName:ss,backendName:"webgl",kernelFunc:dX},fX="return (a - b) * (a - b);",gX=dB({opSnippet:fX,packedOpSnippet:fX}),mX={kernelName:ns,backendName:"webgl",kernelFunc:gX};
/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function bX(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;if("string"!==r.dtype)throw new Error("Input must be of datatype string");const i=n.readSync(r.dataId),a=og(i),o=Qz(a,"string",s);return n.makeTensorInfo(r.shape,"string",o)}const xX={kernelName:rs,backendName:"webgl",kernelFunc:bX};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function yX({inputs:e,attrs:t,backend:n}){const{x:s}=e,r=IP+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,i=new kP(s.shape,r);return n.runWebGLProgram(i,[s],s.dtype)}const vX={kernelName:vs,backendName:"webgl",kernelFunc:yX};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class wX{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,r=NM(n.length),i=NM(n.length);let a="";if(1===s)a="coords * strides + begin";else{let e=0;a=n.map(((t,s)=>(e++,1===n.length?`coords * strides[${s}] + begin[${s}]`:`coords[${e-1}] * strides[${s}] + begin[${s}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${e});\n      ${r} strides = ${r}(${t});\n\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function kX(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:i,end:a,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:d}=s,{finalShapeSparse:p,finalShape:f,isIdentity:g,sliceDim0:m,isSimpleSlice:b,begin:y,end:v,strides:w}=vl(r.shape,i,a,o,l,u,c,h,d);let k;if(g)k=wB({inputs:{x:r},backend:n,attrs:{shape:f}});else if(m||b){x(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=ol(y,v,w),t=eU({inputs:{x:r},backend:n,attrs:{begin:y,size:e}});k=wB({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=n.shouldExecuteOnCPU([r]);if(e){const e=n.readSync(r.dataId),t=va(r.shape,r.dtype,e),s=eP(p,t,w,y);k=n.makeTensorInfo(f,r.dtype,s.values)}else{const e=new wX(y,w,p);k=n.runWebGLProgram(e,[r],r.dtype)}}const I=wB({inputs:{x:k},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(k),I}const IX={kernelName:is,backendName:"webgl",kernelFunc:kX};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function CX(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:i,leftPad:a,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,d=n.readSync(c.dataId),p=n.readSync(h.dataId),[f,g]=tP(d,p,r,i,a,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",g)]}const SX={kernelName:as,backendName:"webgl",kernelFunc:CX};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function $X(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:i,delimiter:a}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(1!==i.shape.length)throw new Error(`Input must be a vector, got shape: ${i.shape}`);if(0!==a.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const o=n.readSync(i.dataId),l=n.readSync(a.dataId)[0],[u,c,h]=nP(o,l,r),d=c.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}const NX={kernelName:os,backendName:"webgl",kernelFunc:$X};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function TX(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:i}=t;if("string"!==i.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const a=n.readSync(i.dataId),o=sP(a,r);return n.makeTensorInfo(i.shape,"int32",o)}const EX={kernelName:ls,backendName:"webgl",kernelFunc:TX},RX="return tan(x);",AX=hB({opSnippet:RX}),_X={kernelName:cs,backendName:"webgl",kernelFunc:AX},FX="\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n",DX=hB({opSnippet:FX}),OX={kernelName:hs,backendName:"webgl",kernelFunc:DX};
/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function LX(e){const{inputs:t,backend:n,attrs:s}=e,{tensor:r,indices:i,updates:a}=t,{}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=xf(a,i,r.shape),d=[h/u,u];if(0===h)return n.makeTensorInfo(r.shape,i.dtype);const p=wB({inputs:{x:i},backend:n,attrs:{shape:[l,o]}}),f=wB({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),g=wB({inputs:{x:r},backend:n,attrs:{shape:d}}),m=new xq(l,o,p.shape.length,f.shape.length,c,d,!1,!0),b=n.runWebGLProgram(m,[f,p,g],g.dtype),x=wB({inputs:{x:b},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(b),x}const MX={kernelName:Ln,backendName:"webgl",kernelFunc:LX};
/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class zX{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let i=0;i<n.length;i++)n[i]=e[i]*t[i];this.outputShape=n,this.rank=n.length;const s=NM(this.rank),r=PX(e);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function PX(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<e.length;r++)s.push(`imod(${n[r]}, ${e[r]})`);return s.join()}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function BX(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:i}=s;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>or(e))):e,s=va(r.shape,r.dtype,t),a=iP(s,i);return n.makeTensorInfo(a.shape,a.dtype,a.values)}const a=new zX(r.shape,i),o=n.runWebGLProgram(a,[r],r.dtype);return o}const WX={kernelName:ds,backendName:"webgl",kernelFunc:BX};class UX{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class VX{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function GX(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function HX(e){let t=1;while(t<e)t*=2;return t}function jX(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:i,sorted:a}=s,o=ie().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=ie().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([r])||c<o||i>l){const e=n.readSync(r.dataId),[t,s]=aP(e,u,r.dtype,i,a);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(s.shape,s.dtype,s.values)]}if(0===i)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[r,TG({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),d=null!==h&&h.isPacked,p=d?n.unpackTensor(r):r,f=w(u),g=f/c,m=wB({inputs:{x:p},attrs:{shape:[g,c]},backend:n});d&&GX(n,p);const b=HX(i),x=HX(c);let y=null;const v=()=>null===y?[m,m]:[m,y],k=(e,t,s)=>{const r=v(),i=new UX(s),a=null===y?1:0,o=[[c],[a],[Number.NEGATIVE_INFINITY],[e],[t]],l=y;y=n.runWebGLProgram(i,r,"int32",o),GX(n,l)};for(let w=1;w<b;w*=2){const e=2*w;for(let t=w;t>=1;t/=2)k(e,t,[g,x])}for(let w=x;w>b;w/=2){const e=v(),t=new VX([g,w/2]),s=null===y?1:0,r=[[c],[s],[b]],i=y;y=n.runWebGLProgram(t,e,"int32",r),GX(n,i);const a=b/2,o=2*a;for(let n=a;n>=1;n/=2)k(o,n,y.shape)}let I=y;y=eU({inputs:{x:y},backend:n,attrs:{begin:0,size:[g,i]}}),GX(n,I);let C=eH({inputs:{x:m,indices:y},backend:n,attrs:{axis:1,batchDims:1}});GX(n,m);const S=u.slice(0,-1);S.push(i),I=y,y=wB({inputs:{x:y},attrs:{shape:S},backend:n}),GX(n,I);const $=C;return C=wB({inputs:{x:C},attrs:{shape:S},backend:n}),GX(n,$),[C,y]}const KX={kernelName:ps,backendName:"webgl",kernelFunc:jX};
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class qX{constructor(e,t,n,s,r,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const a="nearest"===n?1:2;let o;switch(s){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1;break}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${a} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}
/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function XX(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:i}=t,{interpolation:a,fillMode:o,fillValue:l,outputShape:u}=s,[c,h,d,p]=r.shape,[f,g]=null!=u?u:[h,d],m=[c,f,g,p],b=new qX(h,d,a,o,l,m);return n.runWebGLProgram(b,[r,i],"float32")}const JX={kernelName:fs,backendName:"webgl",kernelFunc:XX};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function YX(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:i}=t;EL(i,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=s.readSync(i.dataId),{outputValues:o,outputShape:l,indices:u}=lP(a,r,i.shape,i.dtype);return[s.makeTensorInfo(l,i.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}const ZX={kernelName:ms,backendName:"webgl",kernelFunc:YX};
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function QX(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:i}=s;i<0&&(i+=r.shape.length);const a=r,o=a.shape.length,l=r.shape[i],u=new Array(o-1);let c=0;for(let g=0;g<o;g++)g!==i&&(u[c++]=a.shape[g]);const h=[],d=new Array(o).fill(0),p=a.shape.slice();p[i]=1;const f=new Array(l);for(let g=0;g<f.length;g++){d[i]=g;const e=eU({inputs:{x:a},backend:n,attrs:{begin:d,size:p}}),t=wB({inputs:{x:e},backend:n,attrs:{shape:u}});f[g]=t,h.push(e)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const eJ={kernelName:bs,backendName:"webgl",kernelFunc:QX};
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
class tJ{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,s=e.batchSize,r=e.inSize,i=e.numSegments,a=i*Math.ceil(r/n);this.outputShape=[s,a];const o="0.0",l="sumValue",u=4*Math.floor(n/4),c=n%4,h="\n        sumValue += dot(values, segFilter);\n    ";let d="";r%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let p="";r%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${o};\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${p}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${i})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${i})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
function nJ(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:i}=t,{numSegments:a}=s,o=r.shape.length,l=[];let u=0;const c=zc([u],o);let h=r;null!=c&&(h=DB({inputs:{x:r},backend:n,attrs:{perm:c}}),l.push(h),u=Bc(1,o)[0]);const d=ig(h.shape,u,a),p=w([h.shape[u]]),f=wB({inputs:{x:h},backend:n,attrs:{shape:[-1,p]}});l.push(f);const g=Wr(r.dtype),m=(e,t,s,r,i)=>{const a=e.shape[0],o=e.shape[1],u=rg(o,i),c={windowSize:u,inSize:o,batchSize:a,numSegments:i},h=new tJ(c,t),d=n.compileAndRun(h,[e,s],r);if(l.push(d),d.shape[1]===i)return d;const p=FK({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),f=BX({inputs:{x:p},backend:n,attrs:{reps:[o/u]}});l.push(p),l.push(f);const g=m(d,t,f,r,i);return g},b=m(f,"unsortedSegmentSum",i,g,a),x=wB({inputs:{x:b},backend:n,attrs:{shape:d}});let y=x;if(null!=c){l.push(x);const e=Pc(c);y=DB({inputs:{x:y},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const sJ={kernelName:xs,backendName:"webgl",kernelFunc:nJ},rJ=[PB,UB,HB,qB,YB,tW,sW,iW,dW,fW,bW,vW,IW,NW,RW,DW,LW,BW,UW,GW,qW,sU,iU,uU,hU,vU,IU,NU,tB,AU,BU,XU,tV,rV,aV,lV,cV,fV,bV,vV,NV,EV,AV,DV,zV,UV,GV,KV,JV,ZV,nG,aG,cG,pG,bG,yG,kG,$G,EG,AG,DG,zG,WG,jG,qG,YG,tH,iH,uH,QP,hH,LU,fH,bH,vH,iB,CH,TH,RH,DH,MH,WH,GH,qH,ZH,tj,rj,lj,cj,dj,mj,xj,vj,kj,Cj,Tj,_j,Lj,qj,yB,Zj,tK,rK,oK,fU,cK,fK,mK,vK,CK,uB,$K,TK,RK,_K,DK,mU,Wj,MK,WK,HK,kB,XK,ZK,nq,iq,uq,hq,fq,bq,wq,Cq,Nq,Rq,Dq,Mq,Wq,Gq,tU,jj,Kq,Xq,Yq,Qq,tX,sX,iX,oX,cX,pX,mX,xX,vX,IX,SX,NX,EX,Gj,FB,_X,OX,MX,WX,KX,JX,OB,ZX,eJ,sJ,dK];for(const aJ of rJ)Fs(aJ)},4870:function(e,t,n){"use strict";n.d(t,{Bj:function(){return i},Fl:function(){return We},IU:function(){return Re},Jd:function(){return C},PG:function(){return $e},Um:function(){return Ie},WL:function(){return Pe},X$:function(){return T},X3:function(){return Ee},Xl:function(){return Ae},dq:function(){return Le},j:function(){return $},lk:function(){return S},nZ:function(){return o},qj:function(){return ke},qq:function(){return v},yT:function(){return Te}});n(7658);var s=n(7139);let r;class i{constructor(e=!1){this.detached=e,this._active=!0,this.effects=[],this.cleanups=[],this.parent=r,!e&&r&&(this.index=(r.scopes||(r.scopes=[])).push(this)-1)}get active(){return this._active}run(e){if(this._active){const t=r;try{return r=this,e()}finally{r=t}}else 0}on(){r=this}off(){r=this.parent}stop(e){if(this._active){let t,n;for(t=0,n=this.effects.length;t<n;t++)this.effects[t].stop();for(t=0,n=this.cleanups.length;t<n;t++)this.cleanups[t]();if(this.scopes)for(t=0,n=this.scopes.length;t<n;t++)this.scopes[t].stop(!0);if(!this.detached&&this.parent&&!e){const e=this.parent.scopes.pop();e&&e!==this&&(this.parent.scopes[this.index]=e,e.index=this.index)}this.parent=void 0,this._active=!1}}}function a(e,t=r){t&&t.active&&t.effects.push(e)}function o(){return r}const l=e=>{const t=new Set(e);return t.w=0,t.n=0,t},u=e=>(e.w&g)>0,c=e=>(e.n&g)>0,h=({deps:e})=>{if(e.length)for(let t=0;t<e.length;t++)e[t].w|=g},d=e=>{const{deps:t}=e;if(t.length){let n=0;for(let s=0;s<t.length;s++){const r=t[s];u(r)&&!c(r)?r.delete(e):t[n++]=r,r.w&=~g,r.n&=~g}t.length=n}},p=new WeakMap;let f=0,g=1;const m=30;let b;const x=Symbol(""),y=Symbol("");class v{constructor(e,t=null,n){this.fn=e,this.scheduler=t,this.active=!0,this.deps=[],this.parent=void 0,a(this,n)}run(){if(!this.active)return this.fn();let e=b,t=k;while(e){if(e===this)return;e=e.parent}try{return this.parent=b,b=this,k=!0,g=1<<++f,f<=m?h(this):w(this),this.fn()}finally{f<=m&&d(this),g=1<<--f,b=this.parent,k=t,this.parent=void 0,this.deferStop&&this.stop()}}stop(){b===this?this.deferStop=!0:this.active&&(w(this),this.onStop&&this.onStop(),this.active=!1)}}function w(e){const{deps:t}=e;if(t.length){for(let n=0;n<t.length;n++)t[n].delete(e);t.length=0}}let k=!0;const I=[];function C(){I.push(k),k=!1}function S(){const e=I.pop();k=void 0===e||e}function $(e,t,n){if(k&&b){let t=p.get(e);t||p.set(e,t=new Map);let s=t.get(n);s||t.set(n,s=l());const r=void 0;N(s,r)}}function N(e,t){let n=!1;f<=m?c(e)||(e.n|=g,n=!u(e)):n=!e.has(b),n&&(e.add(b),b.deps.push(e))}function T(e,t,n,r,i,a){const o=p.get(e);if(!o)return;let u=[];if("clear"===t)u=[...o.values()];else if("length"===n&&(0,s.kJ)(e)){const e=Number(r);o.forEach(((t,n)=>{("length"===n||n>=e)&&u.push(t)}))}else switch(void 0!==n&&u.push(o.get(n)),t){case"add":(0,s.kJ)(e)?(0,s.S0)(n)&&u.push(o.get("length")):(u.push(o.get(x)),(0,s._N)(e)&&u.push(o.get(y)));break;case"delete":(0,s.kJ)(e)||(u.push(o.get(x)),(0,s._N)(e)&&u.push(o.get(y)));break;case"set":(0,s._N)(e)&&u.push(o.get(x));break}if(1===u.length)u[0]&&E(u[0]);else{const e=[];for(const t of u)t&&e.push(...t);E(l(e))}}function E(e,t){const n=(0,s.kJ)(e)?e:[...e];for(const s of n)s.computed&&R(s,t);for(const s of n)s.computed||R(s,t)}function R(e,t){(e!==b||e.allowRecurse)&&(e.scheduler?e.scheduler():e.run())}const A=(0,s.fY)("__proto__,__v_isRef,__isVue"),_=new Set(Object.getOwnPropertyNames(Symbol).filter((e=>"arguments"!==e&&"caller"!==e)).map((e=>Symbol[e])).filter(s.yk)),F=P(),D=P(!1,!0),O=P(!0),L=M();function M(){const e={};return["includes","indexOf","lastIndexOf"].forEach((t=>{e[t]=function(...e){const n=Re(this);for(let t=0,r=this.length;t<r;t++)$(n,"get",t+"");const s=n[t](...e);return-1===s||!1===s?n[t](...e.map(Re)):s}})),["push","pop","shift","unshift","splice"].forEach((t=>{e[t]=function(...e){C();const n=Re(this)[t].apply(this,e);return S(),n}})),e}function z(e){const t=Re(this);return $(t,"has",e),t.hasOwnProperty(e)}function P(e=!1,t=!1){return function(n,r,i){if("__v_isReactive"===r)return!e;if("__v_isReadonly"===r)return e;if("__v_isShallow"===r)return t;if("__v_raw"===r&&i===(e?t?ye:xe:t?be:me).get(n))return n;const a=(0,s.kJ)(n);if(!e){if(a&&(0,s.RI)(L,r))return Reflect.get(L,r,i);if("hasOwnProperty"===r)return z}const o=Reflect.get(n,r,i);return((0,s.yk)(r)?_.has(r):A(r))?o:(e||$(n,"get",r),t?o:Le(o)?a&&(0,s.S0)(r)?o:o.value:(0,s.Kn)(o)?e?Ce(o):ke(o):o)}}const B=U(),W=U(!0);function U(e=!1){return function(t,n,r,i){let a=t[n];if(Ne(a)&&Le(a)&&!Le(r))return!1;if(!e&&(Te(r)||Ne(r)||(a=Re(a),r=Re(r)),!(0,s.kJ)(t)&&Le(a)&&!Le(r)))return a.value=r,!0;const o=(0,s.kJ)(t)&&(0,s.S0)(n)?Number(n)<t.length:(0,s.RI)(t,n),l=Reflect.set(t,n,r,i);return t===Re(i)&&(o?(0,s.aU)(r,a)&&T(t,"set",n,r,a):T(t,"add",n,r)),l}}function V(e,t){const n=(0,s.RI)(e,t),r=e[t],i=Reflect.deleteProperty(e,t);return i&&n&&T(e,"delete",t,void 0,r),i}function G(e,t){const n=Reflect.has(e,t);return(0,s.yk)(t)&&_.has(t)||$(e,"has",t),n}function H(e){return $(e,"iterate",(0,s.kJ)(e)?"length":x),Reflect.ownKeys(e)}const j={get:F,set:B,deleteProperty:V,has:G,ownKeys:H},K={get:O,set(e,t){return!0},deleteProperty(e,t){return!0}},q=(0,s.l7)({},j,{get:D,set:W}),X=e=>e,J=e=>Reflect.getPrototypeOf(e);function Y(e,t,n=!1,s=!1){e=e["__v_raw"];const r=Re(e),i=Re(t);n||(t!==i&&$(r,"get",t),$(r,"get",i));const{has:a}=J(r),o=s?X:n?Fe:_e;return a.call(r,t)?o(e.get(t)):a.call(r,i)?o(e.get(i)):void(e!==r&&e.get(t))}function Z(e,t=!1){const n=this["__v_raw"],s=Re(n),r=Re(e);return t||(e!==r&&$(s,"has",e),$(s,"has",r)),e===r?n.has(e):n.has(e)||n.has(r)}function Q(e,t=!1){return e=e["__v_raw"],!t&&$(Re(e),"iterate",x),Reflect.get(e,"size",e)}function ee(e){e=Re(e);const t=Re(this),n=J(t),s=n.has.call(t,e);return s||(t.add(e),T(t,"add",e,e)),this}function te(e,t){t=Re(t);const n=Re(this),{has:r,get:i}=J(n);let a=r.call(n,e);a||(e=Re(e),a=r.call(n,e));const o=i.call(n,e);return n.set(e,t),a?(0,s.aU)(t,o)&&T(n,"set",e,t,o):T(n,"add",e,t),this}function ne(e){const t=Re(this),{has:n,get:s}=J(t);let r=n.call(t,e);r||(e=Re(e),r=n.call(t,e));const i=s?s.call(t,e):void 0,a=t.delete(e);return r&&T(t,"delete",e,void 0,i),a}function se(){const e=Re(this),t=0!==e.size,n=void 0,s=e.clear();return t&&T(e,"clear",void 0,void 0,n),s}function re(e,t){return function(n,s){const r=this,i=r["__v_raw"],a=Re(i),o=t?X:e?Fe:_e;return!e&&$(a,"iterate",x),i.forEach(((e,t)=>n.call(s,o(e),o(t),r)))}}function ie(e,t,n){return function(...r){const i=this["__v_raw"],a=Re(i),o=(0,s._N)(a),l="entries"===e||e===Symbol.iterator&&o,u="keys"===e&&o,c=i[e](...r),h=n?X:t?Fe:_e;return!t&&$(a,"iterate",u?y:x),{next(){const{value:e,done:t}=c.next();return t?{value:e,done:t}:{value:l?[h(e[0]),h(e[1])]:h(e),done:t}},[Symbol.iterator](){return this}}}}function ae(e){return function(...t){return"delete"!==e&&this}}function oe(){const e={get(e){return Y(this,e)},get size(){return Q(this)},has:Z,add:ee,set:te,delete:ne,clear:se,forEach:re(!1,!1)},t={get(e){return Y(this,e,!1,!0)},get size(){return Q(this)},has:Z,add:ee,set:te,delete:ne,clear:se,forEach:re(!1,!0)},n={get(e){return Y(this,e,!0)},get size(){return Q(this,!0)},has(e){return Z.call(this,e,!0)},add:ae("add"),set:ae("set"),delete:ae("delete"),clear:ae("clear"),forEach:re(!0,!1)},s={get(e){return Y(this,e,!0,!0)},get size(){return Q(this,!0)},has(e){return Z.call(this,e,!0)},add:ae("add"),set:ae("set"),delete:ae("delete"),clear:ae("clear"),forEach:re(!0,!0)},r=["keys","values","entries",Symbol.iterator];return r.forEach((r=>{e[r]=ie(r,!1,!1),n[r]=ie(r,!0,!1),t[r]=ie(r,!1,!0),s[r]=ie(r,!0,!0)})),[e,n,t,s]}const[le,ue,ce,he]=oe();function de(e,t){const n=t?e?he:ce:e?ue:le;return(t,r,i)=>"__v_isReactive"===r?!e:"__v_isReadonly"===r?e:"__v_raw"===r?t:Reflect.get((0,s.RI)(n,r)&&r in t?n:t,r,i)}const pe={get:de(!1,!1)},fe={get:de(!1,!0)},ge={get:de(!0,!1)};const me=new WeakMap,be=new WeakMap,xe=new WeakMap,ye=new WeakMap;function ve(e){switch(e){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function we(e){return e["__v_skip"]||!Object.isExtensible(e)?0:ve((0,s.W7)(e))}function ke(e){return Ne(e)?e:Se(e,!1,j,pe,me)}function Ie(e){return Se(e,!1,q,fe,be)}function Ce(e){return Se(e,!0,K,ge,xe)}function Se(e,t,n,r,i){if(!(0,s.Kn)(e))return e;if(e["__v_raw"]&&(!t||!e["__v_isReactive"]))return e;const a=i.get(e);if(a)return a;const o=we(e);if(0===o)return e;const l=new Proxy(e,2===o?r:n);return i.set(e,l),l}function $e(e){return Ne(e)?$e(e["__v_raw"]):!(!e||!e["__v_isReactive"])}function Ne(e){return!(!e||!e["__v_isReadonly"])}function Te(e){return!(!e||!e["__v_isShallow"])}function Ee(e){return $e(e)||Ne(e)}function Re(e){const t=e&&e["__v_raw"];return t?Re(t):e}function Ae(e){return(0,s.Nj)(e,"__v_skip",!0),e}const _e=e=>(0,s.Kn)(e)?ke(e):e,Fe=e=>(0,s.Kn)(e)?Ce(e):e;function De(e){k&&b&&(e=Re(e),N(e.dep||(e.dep=l())))}function Oe(e,t){e=Re(e);const n=e.dep;n&&E(n)}function Le(e){return!(!e||!0!==e.__v_isRef)}function Me(e){return Le(e)?e.value:e}const ze={get:(e,t,n)=>Me(Reflect.get(e,t,n)),set:(e,t,n,s)=>{const r=e[t];return Le(r)&&!Le(n)?(r.value=n,!0):Reflect.set(e,t,n,s)}};function Pe(e){return $e(e)?e:new Proxy(e,ze)}class Be{constructor(e,t,n,s){this._setter=t,this.dep=void 0,this.__v_isRef=!0,this["__v_isReadonly"]=!1,this._dirty=!0,this.effect=new v(e,(()=>{this._dirty||(this._dirty=!0,Oe(this))})),this.effect.computed=this,this.effect.active=this._cacheable=!s,this["__v_isReadonly"]=n}get value(){const e=Re(this);return De(e),!e._dirty&&e._cacheable||(e._dirty=!1,e._value=e.effect.run()),e._value}set value(e){this._setter(e)}}function We(e,t,n=!1){let r,i;const a=(0,s.mf)(e);a?(r=e,i=s.dG):(r=e.get,i=e.set);const o=new Be(r,i,a||!i,n);return o}},3396:function(e,t,n){"use strict";n.d(t,{$d:function(){return a},FN:function(){return ln},HY:function(){return Nt},P$:function(){return te},Q6:function(){return oe},U2:function(){return se},Us:function(){return wt},Wm:function(){return jt},Y8:function(){return Y},_:function(){return Ht},h:function(){return Tn},iD:function(){return zt},ic:function(){return ke},kq:function(){return Yt},nJ:function(){return Q},nK:function(){return ae},wg:function(){return Ft}});n(7658);var s=n(4870),r=n(7139);function i(e,t,n,s){let r;try{r=s?e(...s):e()}catch(i){o(i,t,n)}return r}function a(e,t,n,s){if((0,r.mf)(e)){const a=i(e,t,n,s);return a&&(0,r.tI)(a)&&a.catch((e=>{o(e,t,n)})),a}const l=[];for(let r=0;r<e.length;r++)l.push(a(e[r],t,n,s));return l}function o(e,t,n,s=!0){const r=t?t.vnode:null;if(t){let s=t.parent;const r=t.proxy,a=n;while(s){const t=s.ec;if(t)for(let n=0;n<t.length;n++)if(!1===t[n](e,r,a))return;s=s.parent}const o=t.appContext.config.errorHandler;if(o)return void i(o,null,10,[e,r,a])}l(e,n,r,s)}function l(e,t,n,s=!0){console.error(e)}let u=!1,c=!1;const h=[];let d=0;const p=[];let f=null,g=0;const m=Promise.resolve();let b=null;function x(e){const t=b||m;return e?t.then(this?e.bind(this):e):t}function y(e){let t=d+1,n=h.length;while(t<n){const s=t+n>>>1,r=$(h[s]);r<e?t=s+1:n=s}return t}function v(e){h.length&&h.includes(e,u&&e.allowRecurse?d+1:d)||(null==e.id?h.push(e):h.splice(y(e.id),0,e),w())}function w(){u||c||(c=!0,b=m.then(T))}function k(e){const t=h.indexOf(e);t>d&&h.splice(t,1)}function I(e){(0,r.kJ)(e)?p.push(...e):f&&f.includes(e,e.allowRecurse?g+1:g)||p.push(e),w()}function C(e,t=(u?d+1:0)){for(0;t<h.length;t++){const e=h[t];e&&e.pre&&(h.splice(t,1),t--,e())}}function S(e){if(p.length){const e=[...new Set(p)];if(p.length=0,f)return void f.push(...e);for(f=e,f.sort(((e,t)=>$(e)-$(t))),g=0;g<f.length;g++)f[g]();f=null,g=0}}const $=e=>null==e.id?1/0:e.id,N=(e,t)=>{const n=$(e)-$(t);if(0===n){if(e.pre&&!t.pre)return-1;if(t.pre&&!e.pre)return 1}return n};function T(e){c=!1,u=!0,h.sort(N);r.dG;try{for(d=0;d<h.length;d++){const e=h[d];e&&!1!==e.active&&i(e,null,14)}}finally{d=0,h.length=0,S(e),u=!1,b=null,(h.length||p.length)&&T(e)}}function E(e,t,...n){if(e.isUnmounted)return;const s=e.vnode.props||r.kT;let i=n;const o=t.startsWith("update:"),l=o&&t.slice(7);if(l&&l in s){const e=`${"modelValue"===l?"model":l}Modifiers`,{number:t,trim:a}=s[e]||r.kT;a&&(i=n.map((e=>(0,r.HD)(e)?e.trim():e))),t&&(i=n.map(r.h5))}let u;let c=s[u=(0,r.hR)(t)]||s[u=(0,r.hR)((0,r._A)(t))];!c&&o&&(c=s[u=(0,r.hR)((0,r.rs)(t))]),c&&a(c,e,6,i);const h=s[u+"Once"];if(h){if(e.emitted){if(e.emitted[u])return}else e.emitted={};e.emitted[u]=!0,a(h,e,6,i)}}function R(e,t,n=!1){const s=t.emitsCache,i=s.get(e);if(void 0!==i)return i;const a=e.emits;let o={},l=!1;if(!(0,r.mf)(e)){const s=e=>{const n=R(e,t,!0);n&&(l=!0,(0,r.l7)(o,n))};!n&&t.mixins.length&&t.mixins.forEach(s),e.extends&&s(e.extends),e.mixins&&e.mixins.forEach(s)}return a||l?((0,r.kJ)(a)?a.forEach((e=>o[e]=null)):(0,r.l7)(o,a),(0,r.Kn)(e)&&s.set(e,o),o):((0,r.Kn)(e)&&s.set(e,null),null)}function A(e,t){return!(!e||!(0,r.F7)(t))&&(t=t.slice(2).replace(/Once$/,""),(0,r.RI)(e,t[0].toLowerCase()+t.slice(1))||(0,r.RI)(e,(0,r.rs)(t))||(0,r.RI)(e,t))}let _=null,F=null;function D(e){const t=_;return _=e,F=e&&e.type.__scopeId||null,t}function O(e,t=_,n){if(!t)return e;if(e._n)return e;const s=(...n)=>{s._d&&Lt(-1);const r=D(t);let i;try{i=e(...n)}finally{D(r),s._d&&Lt(1)}return i};return s._n=!0,s._c=!0,s._d=!0,s}function L(e){const{type:t,vnode:n,proxy:s,withProxy:i,props:a,propsOptions:[l],slots:u,attrs:c,emit:h,render:d,renderCache:p,data:f,setupState:g,ctx:m,inheritAttrs:b}=e;let x,y;const v=D(e);try{if(4&n.shapeFlag){const e=i||s;x=Zt(d.call(e,e,p,a,g,f,m)),y=c}else{const e=t;0,x=Zt(e.length>1?e(a,{attrs:c,slots:u,emit:h}):e(a,null)),y=t.props?c:M(c)}}catch(k){At.length=0,o(k,e,1),x=jt(Et)}let w=x;if(y&&!1!==b){const e=Object.keys(y),{shapeFlag:t}=w;e.length&&7&t&&(l&&e.some(r.tR)&&(y=z(y,l)),w=Xt(w,y))}return n.dirs&&(w=Xt(w),w.dirs=w.dirs?w.dirs.concat(n.dirs):n.dirs),n.transition&&(w.transition=n.transition),x=w,D(v),x}const M=e=>{let t;for(const n in e)("class"===n||"style"===n||(0,r.F7)(n))&&((t||(t={}))[n]=e[n]);return t},z=(e,t)=>{const n={};for(const s in e)(0,r.tR)(s)&&s.slice(9)in t||(n[s]=e[s]);return n};function P(e,t,n){const{props:s,children:r,component:i}=e,{props:a,children:o,patchFlag:l}=t,u=i.emitsOptions;if(t.dirs||t.transition)return!0;if(!(n&&l>=0))return!(!r&&!o||o&&o.$stable)||s!==a&&(s?!a||B(s,a,u):!!a);if(1024&l)return!0;if(16&l)return s?B(s,a,u):!!a;if(8&l){const e=t.dynamicProps;for(let t=0;t<e.length;t++){const n=e[t];if(a[n]!==s[n]&&!A(u,n))return!0}}return!1}function B(e,t,n){const s=Object.keys(t);if(s.length!==Object.keys(e).length)return!0;for(let r=0;r<s.length;r++){const i=s[r];if(t[i]!==e[i]&&!A(n,i))return!0}return!1}function W({vnode:e,parent:t},n){while(t&&t.subTree===e)(e=t.vnode).el=n,t=t.parent}const U=e=>e.__isSuspense;function V(e,t){t&&t.pendingBranch?(0,r.kJ)(e)?t.effects.push(...e):t.effects.push(e):I(e)}const G={};function H(e,t,n){return j(e,t,n)}function j(e,t,{immediate:n,deep:o,flush:l,onTrack:u,onTrigger:c}=r.kT){var h;const d=(0,s.nZ)()===(null==(h=on)?void 0:h.scope)?on:null;let p,f,g=!1,m=!1;if((0,s.dq)(e)?(p=()=>e.value,g=(0,s.yT)(e)):(0,s.PG)(e)?(p=()=>e,o=!0):(0,r.kJ)(e)?(m=!0,g=e.some((e=>(0,s.PG)(e)||(0,s.yT)(e))),p=()=>e.map((e=>(0,s.dq)(e)?e.value:(0,s.PG)(e)?X(e):(0,r.mf)(e)?i(e,d,2):void 0))):p=(0,r.mf)(e)?t?()=>i(e,d,2):()=>{if(!d||!d.isUnmounted)return f&&f(),a(e,d,3,[x])}:r.dG,t&&o){const e=p;p=()=>X(e())}let b,x=e=>{f=I.onStop=()=>{i(e,d,4)}};if(bn){if(x=r.dG,t?n&&a(t,d,3,[p(),m?[]:void 0,x]):p(),"sync"!==l)return r.dG;{const e=Rn();b=e.__watcherHandles||(e.__watcherHandles=[])}}let y=m?new Array(e.length).fill(G):G;const w=()=>{if(I.active)if(t){const e=I.run();(o||g||(m?e.some(((e,t)=>(0,r.aU)(e,y[t]))):(0,r.aU)(e,y)))&&(f&&f(),a(t,d,3,[e,y===G?void 0:m&&y[0]===G?[]:y,x]),y=e)}else I.run()};let k;w.allowRecurse=!!t,"sync"===l?k=w:"post"===l?k=()=>vt(w,d&&d.suspense):(w.pre=!0,d&&(w.id=d.uid),k=()=>v(w));const I=new s.qq(p,k);t?n?w():y=I.run():"post"===l?vt(I.run.bind(I),d&&d.suspense):I.run();const C=()=>{I.stop(),d&&d.scope&&(0,r.Od)(d.scope.effects,I)};return b&&b.push(C),C}function K(e,t,n){const s=this.proxy,i=(0,r.HD)(e)?e.includes(".")?q(s,e):()=>s[e]:e.bind(s,s);let a;(0,r.mf)(t)?a=t:(a=t.handler,n=t);const o=on;dn(this);const l=j(i,a.bind(s),n);return o?dn(o):pn(),l}function q(e,t){const n=t.split(".");return()=>{let t=e;for(let e=0;e<n.length&&t;e++)t=t[n[e]];return t}}function X(e,t){if(!(0,r.Kn)(e)||e["__v_skip"])return e;if(t=t||new Set,t.has(e))return e;if(t.add(e),(0,s.dq)(e))X(e.value,t);else if((0,r.kJ)(e))for(let n=0;n<e.length;n++)X(e[n],t);else if((0,r.DM)(e)||(0,r._N)(e))e.forEach((e=>{X(e,t)}));else if((0,r.PO)(e))for(const n in e)X(e[n],t);return e}function J(e,t,n,r){const i=e.dirs,o=t&&t.dirs;for(let l=0;l<i.length;l++){const u=i[l];o&&(u.oldValue=o[l].value);let c=u.dir[r];c&&((0,s.Jd)(),a(c,n,8,[e.el,u,e,t]),(0,s.lk)())}}function Y(){const e={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return ve((()=>{e.isMounted=!0})),Ie((()=>{e.isUnmounting=!0})),e}const Z=[Function,Array],Q={mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:Z,onEnter:Z,onAfterEnter:Z,onEnterCancelled:Z,onBeforeLeave:Z,onLeave:Z,onAfterLeave:Z,onLeaveCancelled:Z,onBeforeAppear:Z,onAppear:Z,onAfterAppear:Z,onAppearCancelled:Z},ee={name:"BaseTransition",props:Q,setup(e,{slots:t}){const n=ln(),r=Y();let i;return()=>{const a=t.default&&oe(t.default(),!0);if(!a||!a.length)return;let o=a[0];if(a.length>1){let e=!1;for(const t of a)if(t.type!==Et){0,o=t,e=!0;break}}const l=(0,s.IU)(e),{mode:u}=l;if(r.isLeaving)return re(o);const c=ie(o);if(!c)return re(o);const h=se(c,l,r,n);ae(c,h);const d=n.subTree,p=d&&ie(d);let f=!1;const{getTransitionKey:g}=c.type;if(g){const e=g();void 0===i?i=e:e!==i&&(i=e,f=!0)}if(p&&p.type!==Et&&(!Wt(c,p)||f)){const e=se(p,l,r,n);if(ae(p,e),"out-in"===u)return r.isLeaving=!0,e.afterLeave=()=>{r.isLeaving=!1,!1!==n.update.active&&n.update()},re(o);"in-out"===u&&c.type!==Et&&(e.delayLeave=(e,t,n)=>{const s=ne(r,p);s[String(p.key)]=p,e._leaveCb=()=>{t(),e._leaveCb=void 0,delete h.delayedLeave},h.delayedLeave=n})}return o}}},te=ee;function ne(e,t){const{leavingVNodes:n}=e;let s=n.get(t.type);return s||(s=Object.create(null),n.set(t.type,s)),s}function se(e,t,n,s){const{appear:i,mode:o,persisted:l=!1,onBeforeEnter:u,onEnter:c,onAfterEnter:h,onEnterCancelled:d,onBeforeLeave:p,onLeave:f,onAfterLeave:g,onLeaveCancelled:m,onBeforeAppear:b,onAppear:x,onAfterAppear:y,onAppearCancelled:v}=t,w=String(e.key),k=ne(n,e),I=(e,t)=>{e&&a(e,s,9,t)},C=(e,t)=>{const n=t[1];I(e,t),(0,r.kJ)(e)?e.every((e=>e.length<=1))&&n():e.length<=1&&n()},S={mode:o,persisted:l,beforeEnter(t){let s=u;if(!n.isMounted){if(!i)return;s=b||u}t._leaveCb&&t._leaveCb(!0);const r=k[w];r&&Wt(e,r)&&r.el._leaveCb&&r.el._leaveCb(),I(s,[t])},enter(e){let t=c,s=h,r=d;if(!n.isMounted){if(!i)return;t=x||c,s=y||h,r=v||d}let a=!1;const o=e._enterCb=t=>{a||(a=!0,I(t?r:s,[e]),S.delayedLeave&&S.delayedLeave(),e._enterCb=void 0)};t?C(t,[e,o]):o()},leave(t,s){const r=String(e.key);if(t._enterCb&&t._enterCb(!0),n.isUnmounting)return s();I(p,[t]);let i=!1;const a=t._leaveCb=n=>{i||(i=!0,s(),I(n?m:g,[t]),t._leaveCb=void 0,k[r]===e&&delete k[r])};k[r]=e,f?C(f,[t,a]):a()},clone(e){return se(e,t,n,s)}};return S}function re(e){if(ue(e))return e=Xt(e),e.children=null,e}function ie(e){return ue(e)?e.children?e.children[0]:void 0:e}function ae(e,t){6&e.shapeFlag&&e.component?ae(e.component.subTree,t):128&e.shapeFlag?(e.ssContent.transition=t.clone(e.ssContent),e.ssFallback.transition=t.clone(e.ssFallback)):e.transition=t}function oe(e,t=!1,n){let s=[],r=0;for(let i=0;i<e.length;i++){let a=e[i];const o=null==n?a.key:String(n)+String(null!=a.key?a.key:i);a.type===Nt?(128&a.patchFlag&&r++,s=s.concat(oe(a.children,t,o))):(t||a.type!==Et)&&s.push(null!=o?Xt(a,{key:o}):a)}if(r>1)for(let i=0;i<s.length;i++)s[i].patchFlag=-2;return s}const le=e=>!!e.type.__asyncLoader;const ue=e=>e.type.__isKeepAlive;RegExp,RegExp;function ce(e,t){return(0,r.kJ)(e)?e.some((e=>ce(e,t))):(0,r.HD)(e)?e.split(",").includes(t):!!(0,r.Kj)(e)&&e.test(t)}function he(e,t){pe(e,"a",t)}function de(e,t){pe(e,"da",t)}function pe(e,t,n=on){const s=e.__wdc||(e.__wdc=()=>{let t=n;while(t){if(t.isDeactivated)return;t=t.parent}return e()});if(be(t,s,n),n){let e=n.parent;while(e&&e.parent)ue(e.parent.vnode)&&fe(s,t,n,e),e=e.parent}}function fe(e,t,n,s){const i=be(t,e,s,!0);Ce((()=>{(0,r.Od)(s[t],i)}),n)}function ge(e){e.shapeFlag&=-257,e.shapeFlag&=-513}function me(e){return 128&e.shapeFlag?e.ssContent:e}function be(e,t,n=on,r=!1){if(n){const i=n[e]||(n[e]=[]),o=t.__weh||(t.__weh=(...r)=>{if(n.isUnmounted)return;(0,s.Jd)(),dn(n);const i=a(t,n,e,r);return pn(),(0,s.lk)(),i});return r?i.unshift(o):i.push(o),o}}const xe=e=>(t,n=on)=>(!bn||"sp"===e)&&be(e,((...e)=>t(...e)),n),ye=xe("bm"),ve=xe("m"),we=xe("bu"),ke=xe("u"),Ie=xe("bum"),Ce=xe("um"),Se=xe("sp"),$e=xe("rtg"),Ne=xe("rtc");function Te(e,t=on){be("ec",e,t)}const Ee=Symbol.for("v-ndc");const Re=e=>e?fn(e)?Cn(e)||e.proxy:Re(e.parent):null,Ae=(0,r.l7)(Object.create(null),{$:e=>e,$el:e=>e.vnode.el,$data:e=>e.data,$props:e=>e.props,$attrs:e=>e.attrs,$slots:e=>e.slots,$refs:e=>e.refs,$parent:e=>Re(e.parent),$root:e=>Re(e.root),$emit:e=>e.emit,$options:e=>Be(e),$forceUpdate:e=>e.f||(e.f=()=>v(e.update)),$nextTick:e=>e.n||(e.n=x.bind(e.proxy)),$watch:e=>K.bind(e)}),_e=(e,t)=>e!==r.kT&&!e.__isScriptSetup&&(0,r.RI)(e,t),Fe={get({_:e},t){const{ctx:n,setupState:i,data:a,props:o,accessCache:l,type:u,appContext:c}=e;let h;if("$"!==t[0]){const s=l[t];if(void 0!==s)switch(s){case 1:return i[t];case 2:return a[t];case 4:return n[t];case 3:return o[t]}else{if(_e(i,t))return l[t]=1,i[t];if(a!==r.kT&&(0,r.RI)(a,t))return l[t]=2,a[t];if((h=e.propsOptions[0])&&(0,r.RI)(h,t))return l[t]=3,o[t];if(n!==r.kT&&(0,r.RI)(n,t))return l[t]=4,n[t];Oe&&(l[t]=0)}}const d=Ae[t];let p,f;return d?("$attrs"===t&&(0,s.j)(e,"get",t),d(e)):(p=u.__cssModules)&&(p=p[t])?p:n!==r.kT&&(0,r.RI)(n,t)?(l[t]=4,n[t]):(f=c.config.globalProperties,(0,r.RI)(f,t)?f[t]:void 0)},set({_:e},t,n){const{data:s,setupState:i,ctx:a}=e;return _e(i,t)?(i[t]=n,!0):s!==r.kT&&(0,r.RI)(s,t)?(s[t]=n,!0):!(0,r.RI)(e.props,t)&&(("$"!==t[0]||!(t.slice(1)in e))&&(a[t]=n,!0))},has({_:{data:e,setupState:t,accessCache:n,ctx:s,appContext:i,propsOptions:a}},o){let l;return!!n[o]||e!==r.kT&&(0,r.RI)(e,o)||_e(t,o)||(l=a[0])&&(0,r.RI)(l,o)||(0,r.RI)(s,o)||(0,r.RI)(Ae,o)||(0,r.RI)(i.config.globalProperties,o)},defineProperty(e,t,n){return null!=n.get?e._.accessCache[t]=0:(0,r.RI)(n,"value")&&this.set(e,t,n.value,null),Reflect.defineProperty(e,t,n)}};function De(e){return(0,r.kJ)(e)?e.reduce(((e,t)=>(e[t]=null,e)),{}):e}let Oe=!0;function Le(e){const t=Be(e),n=e.proxy,i=e.ctx;Oe=!1,t.beforeCreate&&ze(t.beforeCreate,e,"bc");const{data:a,computed:o,methods:l,watch:u,provide:c,inject:h,created:d,beforeMount:p,mounted:f,beforeUpdate:g,updated:m,activated:b,deactivated:x,beforeDestroy:y,beforeUnmount:v,destroyed:w,unmounted:k,render:I,renderTracked:C,renderTriggered:S,errorCaptured:$,serverPrefetch:N,expose:T,inheritAttrs:E,components:R,directives:A,filters:_}=t,F=null;if(h&&Me(h,i,F),l)for(const s in l){const e=l[s];(0,r.mf)(e)&&(i[s]=e.bind(n))}if(a){0;const t=a.call(n,n);0,(0,r.Kn)(t)&&(e.data=(0,s.qj)(t))}if(Oe=!0,o)for(const s in o){const e=o[s],t=(0,r.mf)(e)?e.bind(n,n):(0,r.mf)(e.get)?e.get.bind(n,n):r.dG;0;const a=!(0,r.mf)(e)&&(0,r.mf)(e.set)?e.set.bind(n):r.dG,l=Nn({get:t,set:a});Object.defineProperty(i,s,{enumerable:!0,configurable:!0,get:()=>l.value,set:e=>l.value=e})}if(u)for(const s in u)Pe(u[s],i,n,s);if(c){const e=(0,r.mf)(c)?c.call(n):c;Reflect.ownKeys(e).forEach((t=>{et(t,e[t])}))}function D(e,t){(0,r.kJ)(t)?t.forEach((t=>e(t.bind(n)))):t&&e(t.bind(n))}if(d&&ze(d,e,"c"),D(ye,p),D(ve,f),D(we,g),D(ke,m),D(he,b),D(de,x),D(Te,$),D(Ne,C),D($e,S),D(Ie,v),D(Ce,k),D(Se,N),(0,r.kJ)(T))if(T.length){const t=e.exposed||(e.exposed={});T.forEach((e=>{Object.defineProperty(t,e,{get:()=>n[e],set:t=>n[e]=t})}))}else e.exposed||(e.exposed={});I&&e.render===r.dG&&(e.render=I),null!=E&&(e.inheritAttrs=E),R&&(e.components=R),A&&(e.directives=A)}function Me(e,t,n=r.dG){(0,r.kJ)(e)&&(e=He(e));for(const i in e){const n=e[i];let a;a=(0,r.Kn)(n)?"default"in n?tt(n.from||i,n.default,!0):tt(n.from||i):tt(n),(0,s.dq)(a)?Object.defineProperty(t,i,{enumerable:!0,configurable:!0,get:()=>a.value,set:e=>a.value=e}):t[i]=a}}function ze(e,t,n){a((0,r.kJ)(e)?e.map((e=>e.bind(t.proxy))):e.bind(t.proxy),t,n)}function Pe(e,t,n,s){const i=s.includes(".")?q(n,s):()=>n[s];if((0,r.HD)(e)){const n=t[e];(0,r.mf)(n)&&H(i,n)}else if((0,r.mf)(e))H(i,e.bind(n));else if((0,r.Kn)(e))if((0,r.kJ)(e))e.forEach((e=>Pe(e,t,n,s)));else{const s=(0,r.mf)(e.handler)?e.handler.bind(n):t[e.handler];(0,r.mf)(s)&&H(i,s,e)}else 0}function Be(e){const t=e.type,{mixins:n,extends:s}=t,{mixins:i,optionsCache:a,config:{optionMergeStrategies:o}}=e.appContext,l=a.get(t);let u;return l?u=l:i.length||n||s?(u={},i.length&&i.forEach((e=>We(u,e,o,!0))),We(u,t,o)):u=t,(0,r.Kn)(t)&&a.set(t,u),u}function We(e,t,n,s=!1){const{mixins:r,extends:i}=t;i&&We(e,i,n,!0),r&&r.forEach((t=>We(e,t,n,!0)));for(const a in t)if(s&&"expose"===a);else{const s=Ue[a]||n&&n[a];e[a]=s?s(e[a],t[a]):t[a]}return e}const Ue={data:Ve,props:qe,emits:qe,methods:Ke,computed:Ke,beforeCreate:je,created:je,beforeMount:je,mounted:je,beforeUpdate:je,updated:je,beforeDestroy:je,beforeUnmount:je,destroyed:je,unmounted:je,activated:je,deactivated:je,errorCaptured:je,serverPrefetch:je,components:Ke,directives:Ke,watch:Xe,provide:Ve,inject:Ge};function Ve(e,t){return t?e?function(){return(0,r.l7)((0,r.mf)(e)?e.call(this,this):e,(0,r.mf)(t)?t.call(this,this):t)}:t:e}function Ge(e,t){return Ke(He(e),He(t))}function He(e){if((0,r.kJ)(e)){const t={};for(let n=0;n<e.length;n++)t[e[n]]=e[n];return t}return e}function je(e,t){return e?[...new Set([].concat(e,t))]:t}function Ke(e,t){return e?(0,r.l7)(Object.create(null),e,t):t}function qe(e,t){return e?(0,r.kJ)(e)&&(0,r.kJ)(t)?[...new Set([...e,...t])]:(0,r.l7)(Object.create(null),De(e),De(null!=t?t:{})):t}function Xe(e,t){if(!e)return t;if(!t)return e;const n=(0,r.l7)(Object.create(null),e);for(const s in t)n[s]=je(e[s],t[s]);return n}function Je(){return{app:null,config:{isNativeTag:r.NO,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let Ye=0;function Ze(e,t){return function(n,s=null){(0,r.mf)(n)||(n=(0,r.l7)({},n)),null==s||(0,r.Kn)(s)||(s=null);const i=Je();const a=new Set;let o=!1;const l=i.app={_uid:Ye++,_component:n,_props:s,_container:null,_context:i,_instance:null,version:An,get config(){return i.config},set config(e){0},use(e,...t){return a.has(e)||(e&&(0,r.mf)(e.install)?(a.add(e),e.install(l,...t)):(0,r.mf)(e)&&(a.add(e),e(l,...t))),l},mixin(e){return i.mixins.includes(e)||i.mixins.push(e),l},component(e,t){return t?(i.components[e]=t,l):i.components[e]},directive(e,t){return t?(i.directives[e]=t,l):i.directives[e]},mount(r,a,u){if(!o){0;const c=jt(n,s);return c.appContext=i,a&&t?t(c,r):e(c,r,u),o=!0,l._container=r,r.__vue_app__=l,Cn(c.component)||c.component.proxy}},unmount(){o&&(e(null,l._container),delete l._container.__vue_app__)},provide(e,t){return i.provides[e]=t,l},runWithContext(e){Qe=l;try{return e()}finally{Qe=null}}};return l}}let Qe=null;function et(e,t){if(on){let n=on.provides;const s=on.parent&&on.parent.provides;s===n&&(n=on.provides=Object.create(s)),n[e]=t}else 0}function tt(e,t,n=!1){const s=on||_;if(s||Qe){const i=s?null==s.parent?s.vnode.appContext&&s.vnode.appContext.provides:s.parent.provides:Qe._context.provides;if(i&&e in i)return i[e];if(arguments.length>1)return n&&(0,r.mf)(t)?t.call(s&&s.proxy):t}else 0}function nt(e,t,n,i=!1){const a={},o={};(0,r.Nj)(o,Ut,1),e.propsDefaults=Object.create(null),rt(e,t,a,o);for(const s in e.propsOptions[0])s in a||(a[s]=void 0);n?e.props=i?a:(0,s.Um)(a):e.type.props?e.props=a:e.props=o,e.attrs=o}function st(e,t,n,i){const{props:a,attrs:o,vnode:{patchFlag:l}}=e,u=(0,s.IU)(a),[c]=e.propsOptions;let h=!1;if(!(i||l>0)||16&l){let s;rt(e,t,a,o)&&(h=!0);for(const i in u)t&&((0,r.RI)(t,i)||(s=(0,r.rs)(i))!==i&&(0,r.RI)(t,s))||(c?!n||void 0===n[i]&&void 0===n[s]||(a[i]=it(c,u,i,void 0,e,!0)):delete a[i]);if(o!==u)for(const e in o)t&&(0,r.RI)(t,e)||(delete o[e],h=!0)}else if(8&l){const n=e.vnode.dynamicProps;for(let s=0;s<n.length;s++){let i=n[s];if(A(e.emitsOptions,i))continue;const l=t[i];if(c)if((0,r.RI)(o,i))l!==o[i]&&(o[i]=l,h=!0);else{const t=(0,r._A)(i);a[t]=it(c,u,t,l,e,!1)}else l!==o[i]&&(o[i]=l,h=!0)}}h&&(0,s.X$)(e,"set","$attrs")}function rt(e,t,n,i){const[a,o]=e.propsOptions;let l,u=!1;if(t)for(let s in t){if((0,r.Gg)(s))continue;const c=t[s];let h;a&&(0,r.RI)(a,h=(0,r._A)(s))?o&&o.includes(h)?(l||(l={}))[h]=c:n[h]=c:A(e.emitsOptions,s)||s in i&&c===i[s]||(i[s]=c,u=!0)}if(o){const t=(0,s.IU)(n),i=l||r.kT;for(let s=0;s<o.length;s++){const l=o[s];n[l]=it(a,t,l,i[l],e,!(0,r.RI)(i,l))}}return u}function it(e,t,n,s,i,a){const o=e[n];if(null!=o){const e=(0,r.RI)(o,"default");if(e&&void 0===s){const e=o.default;if(o.type!==Function&&!o.skipFactory&&(0,r.mf)(e)){const{propsDefaults:r}=i;n in r?s=r[n]:(dn(i),s=r[n]=e.call(null,t),pn())}else s=e}o[0]&&(a&&!e?s=!1:!o[1]||""!==s&&s!==(0,r.rs)(n)||(s=!0))}return s}function at(e,t,n=!1){const s=t.propsCache,i=s.get(e);if(i)return i;const a=e.props,o={},l=[];let u=!1;if(!(0,r.mf)(e)){const s=e=>{u=!0;const[n,s]=at(e,t,!0);(0,r.l7)(o,n),s&&l.push(...s)};!n&&t.mixins.length&&t.mixins.forEach(s),e.extends&&s(e.extends),e.mixins&&e.mixins.forEach(s)}if(!a&&!u)return(0,r.Kn)(e)&&s.set(e,r.Z6),r.Z6;if((0,r.kJ)(a))for(let h=0;h<a.length;h++){0;const e=(0,r._A)(a[h]);ot(e)&&(o[e]=r.kT)}else if(a){0;for(const e in a){const t=(0,r._A)(e);if(ot(t)){const n=a[e],s=o[t]=(0,r.kJ)(n)||(0,r.mf)(n)?{type:n}:(0,r.l7)({},n);if(s){const e=ct(Boolean,s.type),n=ct(String,s.type);s[0]=e>-1,s[1]=n<0||e<n,(e>-1||(0,r.RI)(s,"default"))&&l.push(t)}}}}const c=[o,l];return(0,r.Kn)(e)&&s.set(e,c),c}function ot(e){return"$"!==e[0]}function lt(e){const t=e&&e.toString().match(/^\s*(function|class) (\w+)/);return t?t[2]:null===e?"null":""}function ut(e,t){return lt(e)===lt(t)}function ct(e,t){return(0,r.kJ)(t)?t.findIndex((t=>ut(t,e))):(0,r.mf)(t)&&ut(t,e)?0:-1}const ht=e=>"_"===e[0]||"$stable"===e,dt=e=>(0,r.kJ)(e)?e.map(Zt):[Zt(e)],pt=(e,t,n)=>{if(t._n)return t;const s=O(((...e)=>dt(t(...e))),n);return s._c=!1,s},ft=(e,t,n)=>{const s=e._ctx;for(const i in e){if(ht(i))continue;const n=e[i];if((0,r.mf)(n))t[i]=pt(i,n,s);else if(null!=n){0;const e=dt(n);t[i]=()=>e}}},gt=(e,t)=>{const n=dt(t);e.slots.default=()=>n},mt=(e,t)=>{if(32&e.vnode.shapeFlag){const n=t._;n?(e.slots=(0,s.IU)(t),(0,r.Nj)(t,"_",n)):ft(t,e.slots={})}else e.slots={},t&&gt(e,t);(0,r.Nj)(e.slots,Ut,1)},bt=(e,t,n)=>{const{vnode:s,slots:i}=e;let a=!0,o=r.kT;if(32&s.shapeFlag){const e=t._;e?n&&1===e?a=!1:((0,r.l7)(i,t),n||1!==e||delete i._):(a=!t.$stable,ft(t,i)),o=t}else t&&(gt(e,t),o={default:1});if(a)for(const r in i)ht(r)||r in o||delete i[r]};function xt(e,t,n,a,o=!1){if((0,r.kJ)(e))return void e.forEach(((e,s)=>xt(e,t&&((0,r.kJ)(t)?t[s]:t),n,a,o)));if(le(a)&&!o)return;const l=4&a.shapeFlag?Cn(a.component)||a.component.proxy:a.el,u=o?null:l,{i:c,r:h}=e;const d=t&&t.r,p=c.refs===r.kT?c.refs={}:c.refs,f=c.setupState;if(null!=d&&d!==h&&((0,r.HD)(d)?(p[d]=null,(0,r.RI)(f,d)&&(f[d]=null)):(0,s.dq)(d)&&(d.value=null)),(0,r.mf)(h))i(h,c,12,[u,p]);else{const t=(0,r.HD)(h),i=(0,s.dq)(h);if(t||i){const s=()=>{if(e.f){const n=t?(0,r.RI)(f,h)?f[h]:p[h]:h.value;o?(0,r.kJ)(n)&&(0,r.Od)(n,l):(0,r.kJ)(n)?n.includes(l)||n.push(l):t?(p[h]=[l],(0,r.RI)(f,h)&&(f[h]=p[h])):(h.value=[l],e.k&&(p[e.k]=h.value))}else t?(p[h]=u,(0,r.RI)(f,h)&&(f[h]=u)):i&&(h.value=u,e.k&&(p[e.k]=u))};u?(s.id=-1,vt(s,n)):s()}else 0}}function yt(){}const vt=V;function wt(e){return kt(e)}function kt(e,t){yt();const n=(0,r.E9)();n.__VUE__=!0;const{insert:i,remove:a,patchProp:o,createElement:l,createText:u,createComment:c,setText:h,setElementText:d,parentNode:p,nextSibling:f,setScopeId:g=r.dG,insertStaticContent:m}=e,b=(e,t,n,s=null,r=null,i=null,a=!1,o=null,l=!!t.dynamicChildren)=>{if(e===t)return;e&&!Wt(e,t)&&(s=Q(e),K(e,r,i,!0),e=null),-2===t.patchFlag&&(l=!1,t.dynamicChildren=null);const{type:u,ref:c,shapeFlag:h}=t;switch(u){case Tt:x(e,t,n,s);break;case Et:y(e,t,n,s);break;case Rt:null==e&&w(t,n,s,a);break;case Nt:D(e,t,n,s,r,i,a,o,l);break;default:1&h?N(e,t,n,s,r,i,a,o,l):6&h?O(e,t,n,s,r,i,a,o,l):(64&h||128&h)&&u.process(e,t,n,s,r,i,a,o,l,te)}null!=c&&r&&xt(c,e&&e.ref,i,t||e,!t)},x=(e,t,n,s)=>{if(null==e)i(t.el=u(t.children),n,s);else{const n=t.el=e.el;t.children!==e.children&&h(n,t.children)}},y=(e,t,n,s)=>{null==e?i(t.el=c(t.children||""),n,s):t.el=e.el},w=(e,t,n,s)=>{[e.el,e.anchor]=m(e.children,t,n,s,e.el,e.anchor)},I=({el:e,anchor:t},n,s)=>{let r;while(e&&e!==t)r=f(e),i(e,n,s),e=r;i(t,n,s)},$=({el:e,anchor:t})=>{let n;while(e&&e!==t)n=f(e),a(e),e=n;a(t)},N=(e,t,n,s,r,i,a,o,l)=>{a=a||"svg"===t.type,null==e?T(t,n,s,r,i,a,o,l):A(e,t,r,i,a,o,l)},T=(e,t,n,s,a,u,c,h)=>{let p,f;const{type:g,props:m,shapeFlag:b,transition:x,dirs:y}=e;if(p=e.el=l(e.type,u,m&&m.is,m),8&b?d(p,e.children):16&b&&R(e.children,p,null,s,a,u&&"foreignObject"!==g,c,h),y&&J(e,null,s,"created"),E(p,e,e.scopeId,c,s),m){for(const t in m)"value"===t||(0,r.Gg)(t)||o(p,t,null,m[t],u,e.children,s,a,Z);"value"in m&&o(p,"value",null,m.value),(f=m.onVnodeBeforeMount)&&nn(f,s,e)}y&&J(e,null,s,"beforeMount");const v=(!a||a&&!a.pendingBranch)&&x&&!x.persisted;v&&x.beforeEnter(p),i(p,t,n),((f=m&&m.onVnodeMounted)||v||y)&&vt((()=>{f&&nn(f,s,e),v&&x.enter(p),y&&J(e,null,s,"mounted")}),a)},E=(e,t,n,s,r)=>{if(n&&g(e,n),s)for(let i=0;i<s.length;i++)g(e,s[i]);if(r){let n=r.subTree;if(t===n){const t=r.vnode;E(e,t,t.scopeId,t.slotScopeIds,r.parent)}}},R=(e,t,n,s,r,i,a,o,l=0)=>{for(let u=l;u<e.length;u++){const l=e[u]=o?Qt(e[u]):Zt(e[u]);b(null,l,t,n,s,r,i,a,o)}},A=(e,t,n,s,i,a,l)=>{const u=t.el=e.el;let{patchFlag:c,dynamicChildren:h,dirs:p}=t;c|=16&e.patchFlag;const f=e.props||r.kT,g=t.props||r.kT;let m;n&&It(n,!1),(m=g.onVnodeBeforeUpdate)&&nn(m,n,t,e),p&&J(t,e,n,"beforeUpdate"),n&&It(n,!0);const b=i&&"foreignObject"!==t.type;if(h?_(e.dynamicChildren,h,u,n,s,b,a):l||V(e,t,u,null,n,s,b,a,!1),c>0){if(16&c)F(u,t,f,g,n,s,i);else if(2&c&&f.class!==g.class&&o(u,"class",null,g.class,i),4&c&&o(u,"style",f.style,g.style,i),8&c){const r=t.dynamicProps;for(let t=0;t<r.length;t++){const a=r[t],l=f[a],c=g[a];c===l&&"value"!==a||o(u,a,l,c,i,e.children,n,s,Z)}}1&c&&e.children!==t.children&&d(u,t.children)}else l||null!=h||F(u,t,f,g,n,s,i);((m=g.onVnodeUpdated)||p)&&vt((()=>{m&&nn(m,n,t,e),p&&J(t,e,n,"updated")}),s)},_=(e,t,n,s,r,i,a)=>{for(let o=0;o<t.length;o++){const l=e[o],u=t[o],c=l.el&&(l.type===Nt||!Wt(l,u)||70&l.shapeFlag)?p(l.el):n;b(l,u,c,null,s,r,i,a,!0)}},F=(e,t,n,s,i,a,l)=>{if(n!==s){if(n!==r.kT)for(const u in n)(0,r.Gg)(u)||u in s||o(e,u,n[u],null,l,t.children,i,a,Z);for(const u in s){if((0,r.Gg)(u))continue;const c=s[u],h=n[u];c!==h&&"value"!==u&&o(e,u,h,c,l,t.children,i,a,Z)}"value"in s&&o(e,"value",n.value,s.value)}},D=(e,t,n,s,r,a,o,l,c)=>{const h=t.el=e?e.el:u(""),d=t.anchor=e?e.anchor:u("");let{patchFlag:p,dynamicChildren:f,slotScopeIds:g}=t;g&&(l=l?l.concat(g):g),null==e?(i(h,n,s),i(d,n,s),R(t.children,n,d,r,a,o,l,c)):p>0&&64&p&&f&&e.dynamicChildren?(_(e.dynamicChildren,f,n,r,a,o,l),(null!=t.key||r&&t===r.subTree)&&Ct(e,t,!0)):V(e,t,n,d,r,a,o,l,c)},O=(e,t,n,s,r,i,a,o,l)=>{t.slotScopeIds=o,null==e?512&t.shapeFlag?r.ctx.activate(t,n,s,a,l):M(t,n,s,r,i,a,l):z(e,t,l)},M=(e,t,n,s,r,i,a)=>{const o=e.component=an(e,s,r);if(ue(e)&&(o.ctx.renderer=te),xn(o),o.asyncDep){if(r&&r.registerDep(o,B),!e.el){const e=o.subTree=jt(Et);y(null,e,t,n)}}else B(o,e,t,n,r,i,a)},z=(e,t,n)=>{const s=t.component=e.component;if(P(e,t,n)){if(s.asyncDep&&!s.asyncResolved)return void U(s,t,n);s.next=t,k(s.update),s.update()}else t.el=e.el,s.vnode=t},B=(e,t,n,i,a,o,l)=>{const u=()=>{if(e.isMounted){let t,{next:n,bu:s,u:i,parent:u,vnode:c}=e,h=n;0,It(e,!1),n?(n.el=c.el,U(e,n,l)):n=c,s&&(0,r.ir)(s),(t=n.props&&n.props.onVnodeBeforeUpdate)&&nn(t,u,n,c),It(e,!0);const d=L(e);0;const f=e.subTree;e.subTree=d,b(f,d,p(f.el),Q(f),e,a,o),n.el=d.el,null===h&&W(e,d.el),i&&vt(i,a),(t=n.props&&n.props.onVnodeUpdated)&&vt((()=>nn(t,u,n,c)),a)}else{let s;const{el:l,props:u}=t,{bm:c,m:h,parent:d}=e,p=le(t);if(It(e,!1),c&&(0,r.ir)(c),!p&&(s=u&&u.onVnodeBeforeMount)&&nn(s,d,t),It(e,!0),l&&se){const n=()=>{e.subTree=L(e),se(l,e.subTree,e,a,null)};p?t.type.__asyncLoader().then((()=>!e.isUnmounted&&n())):n()}else{0;const s=e.subTree=L(e);0,b(null,s,n,i,e,a,o),t.el=s.el}if(h&&vt(h,a),!p&&(s=u&&u.onVnodeMounted)){const e=t;vt((()=>nn(s,d,e)),a)}(256&t.shapeFlag||d&&le(d.vnode)&&256&d.vnode.shapeFlag)&&e.a&&vt(e.a,a),e.isMounted=!0,t=n=i=null}},c=e.effect=new s.qq(u,(()=>v(h)),e.scope),h=e.update=()=>c.run();h.id=e.uid,It(e,!0),h()},U=(e,t,n)=>{t.component=e;const r=e.vnode.props;e.vnode=t,e.next=null,st(e,t.props,r,n),bt(e,t.children,n),(0,s.Jd)(),C(),(0,s.lk)()},V=(e,t,n,s,r,i,a,o,l=!1)=>{const u=e&&e.children,c=e?e.shapeFlag:0,h=t.children,{patchFlag:p,shapeFlag:f}=t;if(p>0){if(128&p)return void H(u,h,n,s,r,i,a,o,l);if(256&p)return void G(u,h,n,s,r,i,a,o,l)}8&f?(16&c&&Z(u,r,i),h!==u&&d(n,h)):16&c?16&f?H(u,h,n,s,r,i,a,o,l):Z(u,r,i,!0):(8&c&&d(n,""),16&f&&R(h,n,s,r,i,a,o,l))},G=(e,t,n,s,i,a,o,l,u)=>{e=e||r.Z6,t=t||r.Z6;const c=e.length,h=t.length,d=Math.min(c,h);let p;for(p=0;p<d;p++){const s=t[p]=u?Qt(t[p]):Zt(t[p]);b(e[p],s,n,null,i,a,o,l,u)}c>h?Z(e,i,a,!0,!1,d):R(t,n,s,i,a,o,l,u,d)},H=(e,t,n,s,i,a,o,l,u)=>{let c=0;const h=t.length;let d=e.length-1,p=h-1;while(c<=d&&c<=p){const s=e[c],r=t[c]=u?Qt(t[c]):Zt(t[c]);if(!Wt(s,r))break;b(s,r,n,null,i,a,o,l,u),c++}while(c<=d&&c<=p){const s=e[d],r=t[p]=u?Qt(t[p]):Zt(t[p]);if(!Wt(s,r))break;b(s,r,n,null,i,a,o,l,u),d--,p--}if(c>d){if(c<=p){const e=p+1,r=e<h?t[e].el:s;while(c<=p)b(null,t[c]=u?Qt(t[c]):Zt(t[c]),n,r,i,a,o,l,u),c++}}else if(c>p)while(c<=d)K(e[c],i,a,!0),c++;else{const f=c,g=c,m=new Map;for(c=g;c<=p;c++){const e=t[c]=u?Qt(t[c]):Zt(t[c]);null!=e.key&&m.set(e.key,c)}let x,y=0;const v=p-g+1;let w=!1,k=0;const I=new Array(v);for(c=0;c<v;c++)I[c]=0;for(c=f;c<=d;c++){const s=e[c];if(y>=v){K(s,i,a,!0);continue}let r;if(null!=s.key)r=m.get(s.key);else for(x=g;x<=p;x++)if(0===I[x-g]&&Wt(s,t[x])){r=x;break}void 0===r?K(s,i,a,!0):(I[r-g]=c+1,r>=k?k=r:w=!0,b(s,t[r],n,null,i,a,o,l,u),y++)}const C=w?St(I):r.Z6;for(x=C.length-1,c=v-1;c>=0;c--){const e=g+c,r=t[e],d=e+1<h?t[e+1].el:s;0===I[c]?b(null,r,n,d,i,a,o,l,u):w&&(x<0||c!==C[x]?j(r,n,d,2):x--)}}},j=(e,t,n,s,r=null)=>{const{el:a,type:o,transition:l,children:u,shapeFlag:c}=e;if(6&c)return void j(e.component.subTree,t,n,s);if(128&c)return void e.suspense.move(t,n,s);if(64&c)return void o.move(e,t,n,te);if(o===Nt){i(a,t,n);for(let e=0;e<u.length;e++)j(u[e],t,n,s);return void i(e.anchor,t,n)}if(o===Rt)return void I(e,t,n);const h=2!==s&&1&c&&l;if(h)if(0===s)l.beforeEnter(a),i(a,t,n),vt((()=>l.enter(a)),r);else{const{leave:e,delayLeave:s,afterLeave:r}=l,o=()=>i(a,t,n),u=()=>{e(a,(()=>{o(),r&&r()}))};s?s(a,o,u):u()}else i(a,t,n)},K=(e,t,n,s=!1,r=!1)=>{const{type:i,props:a,ref:o,children:l,dynamicChildren:u,shapeFlag:c,patchFlag:h,dirs:d}=e;if(null!=o&&xt(o,null,n,e,!0),256&c)return void t.ctx.deactivate(e);const p=1&c&&d,f=!le(e);let g;if(f&&(g=a&&a.onVnodeBeforeUnmount)&&nn(g,t,e),6&c)Y(e.component,n,s);else{if(128&c)return void e.suspense.unmount(n,s);p&&J(e,null,t,"beforeUnmount"),64&c?e.type.remove(e,t,n,r,te,s):u&&(i!==Nt||h>0&&64&h)?Z(u,t,n,!1,!0):(i===Nt&&384&h||!r&&16&c)&&Z(l,t,n),s&&q(e)}(f&&(g=a&&a.onVnodeUnmounted)||p)&&vt((()=>{g&&nn(g,t,e),p&&J(e,null,t,"unmounted")}),n)},q=e=>{const{type:t,el:n,anchor:s,transition:r}=e;if(t===Nt)return void X(n,s);if(t===Rt)return void $(e);const i=()=>{a(n),r&&!r.persisted&&r.afterLeave&&r.afterLeave()};if(1&e.shapeFlag&&r&&!r.persisted){const{leave:t,delayLeave:s}=r,a=()=>t(n,i);s?s(e.el,i,a):a()}else i()},X=(e,t)=>{let n;while(e!==t)n=f(e),a(e),e=n;a(t)},Y=(e,t,n)=>{const{bum:s,scope:i,update:a,subTree:o,um:l}=e;s&&(0,r.ir)(s),i.stop(),a&&(a.active=!1,K(o,e,t,n)),l&&vt(l,t),vt((()=>{e.isUnmounted=!0}),t),t&&t.pendingBranch&&!t.isUnmounted&&e.asyncDep&&!e.asyncResolved&&e.suspenseId===t.pendingId&&(t.deps--,0===t.deps&&t.resolve())},Z=(e,t,n,s=!1,r=!1,i=0)=>{for(let a=i;a<e.length;a++)K(e[a],t,n,s,r)},Q=e=>6&e.shapeFlag?Q(e.component.subTree):128&e.shapeFlag?e.suspense.next():f(e.anchor||e.el),ee=(e,t,n)=>{null==e?t._vnode&&K(t._vnode,null,null,!0):b(t._vnode||null,e,t,null,null,null,n),C(),S(),t._vnode=e},te={p:b,um:K,m:j,r:q,mt:M,mc:R,pc:V,pbc:_,n:Q,o:e};let ne,se;return t&&([ne,se]=t(te)),{render:ee,hydrate:ne,createApp:Ze(ee,ne)}}function It({effect:e,update:t},n){e.allowRecurse=t.allowRecurse=n}function Ct(e,t,n=!1){const s=e.children,i=t.children;if((0,r.kJ)(s)&&(0,r.kJ)(i))for(let r=0;r<s.length;r++){const e=s[r];let t=i[r];1&t.shapeFlag&&!t.dynamicChildren&&((t.patchFlag<=0||32===t.patchFlag)&&(t=i[r]=Qt(i[r]),t.el=e.el),n||Ct(e,t)),t.type===Tt&&(t.el=e.el)}}function St(e){const t=e.slice(),n=[0];let s,r,i,a,o;const l=e.length;for(s=0;s<l;s++){const l=e[s];if(0!==l){if(r=n[n.length-1],e[r]<l){t[s]=r,n.push(s);continue}i=0,a=n.length-1;while(i<a)o=i+a>>1,e[n[o]]<l?i=o+1:a=o;l<e[n[i]]&&(i>0&&(t[s]=n[i-1]),n[i]=s)}}i=n.length,a=n[i-1];while(i-- >0)n[i]=a,a=t[a];return n}const $t=e=>e.__isTeleport;const Nt=Symbol.for("v-fgt"),Tt=Symbol.for("v-txt"),Et=Symbol.for("v-cmt"),Rt=Symbol.for("v-stc"),At=[];let _t=null;function Ft(e=!1){At.push(_t=e?null:[])}function Dt(){At.pop(),_t=At[At.length-1]||null}let Ot=1;function Lt(e){Ot+=e}function Mt(e){return e.dynamicChildren=Ot>0?_t||r.Z6:null,Dt(),Ot>0&&_t&&_t.push(e),e}function zt(e,t,n,s,r,i){return Mt(Ht(e,t,n,s,r,i,!0))}function Pt(e,t,n,s,r){return Mt(jt(e,t,n,s,r,!0))}function Bt(e){return!!e&&!0===e.__v_isVNode}function Wt(e,t){return e.type===t.type&&e.key===t.key}const Ut="__vInternal",Vt=({key:e})=>null!=e?e:null,Gt=({ref:e,ref_key:t,ref_for:n})=>("number"===typeof e&&(e=""+e),null!=e?(0,r.HD)(e)||(0,s.dq)(e)||(0,r.mf)(e)?{i:_,r:e,k:t,f:!!n}:e:null);function Ht(e,t=null,n=null,s=0,i=null,a=(e===Nt?0:1),o=!1,l=!1){const u={__v_isVNode:!0,__v_skip:!0,type:e,props:t,key:t&&Vt(t),ref:t&&Gt(t),scopeId:F,slotScopeIds:null,children:n,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:a,patchFlag:s,dynamicProps:i,dynamicChildren:null,appContext:null,ctx:_};return l?(en(u,n),128&a&&e.normalize(u)):n&&(u.shapeFlag|=(0,r.HD)(n)?8:16),Ot>0&&!o&&_t&&(u.patchFlag>0||6&a)&&32!==u.patchFlag&&_t.push(u),u}const jt=Kt;function Kt(e,t=null,n=null,i=0,a=null,o=!1){if(e&&e!==Ee||(e=Et),Bt(e)){const s=Xt(e,t,!0);return n&&en(s,n),Ot>0&&!o&&_t&&(6&s.shapeFlag?_t[_t.indexOf(e)]=s:_t.push(s)),s.patchFlag|=-2,s}if($n(e)&&(e=e.__vccOpts),t){t=qt(t);let{class:e,style:n}=t;e&&!(0,r.HD)(e)&&(t.class=(0,r.C_)(e)),(0,r.Kn)(n)&&((0,s.X3)(n)&&!(0,r.kJ)(n)&&(n=(0,r.l7)({},n)),t.style=(0,r.j5)(n))}const l=(0,r.HD)(e)?1:U(e)?128:$t(e)?64:(0,r.Kn)(e)?4:(0,r.mf)(e)?2:0;return Ht(e,t,n,i,a,l,o,!0)}function qt(e){return e?(0,s.X3)(e)||Ut in e?(0,r.l7)({},e):e:null}function Xt(e,t,n=!1){const{props:s,ref:i,patchFlag:a,children:o}=e,l=t?tn(s||{},t):s,u={__v_isVNode:!0,__v_skip:!0,type:e.type,props:l,key:l&&Vt(l),ref:t&&t.ref?n&&i?(0,r.kJ)(i)?i.concat(Gt(t)):[i,Gt(t)]:Gt(t):i,scopeId:e.scopeId,slotScopeIds:e.slotScopeIds,children:o,target:e.target,targetAnchor:e.targetAnchor,staticCount:e.staticCount,shapeFlag:e.shapeFlag,patchFlag:t&&e.type!==Nt?-1===a?16:16|a:a,dynamicProps:e.dynamicProps,dynamicChildren:e.dynamicChildren,appContext:e.appContext,dirs:e.dirs,transition:e.transition,component:e.component,suspense:e.suspense,ssContent:e.ssContent&&Xt(e.ssContent),ssFallback:e.ssFallback&&Xt(e.ssFallback),el:e.el,anchor:e.anchor,ctx:e.ctx,ce:e.ce};return u}function Jt(e=" ",t=0){return jt(Tt,null,e,t)}function Yt(e="",t=!1){return t?(Ft(),Pt(Et,null,e)):jt(Et,null,e)}function Zt(e){return null==e||"boolean"===typeof e?jt(Et):(0,r.kJ)(e)?jt(Nt,null,e.slice()):"object"===typeof e?Qt(e):jt(Tt,null,String(e))}function Qt(e){return null===e.el&&-1!==e.patchFlag||e.memo?e:Xt(e)}function en(e,t){let n=0;const{shapeFlag:s}=e;if(null==t)t=null;else if((0,r.kJ)(t))n=16;else if("object"===typeof t){if(65&s){const n=t.default;return void(n&&(n._c&&(n._d=!1),en(e,n()),n._c&&(n._d=!0)))}{n=32;const s=t._;s||Ut in t?3===s&&_&&(1===_.slots._?t._=1:(t._=2,e.patchFlag|=1024)):t._ctx=_}}else(0,r.mf)(t)?(t={default:t,_ctx:_},n=32):(t=String(t),64&s?(n=16,t=[Jt(t)]):n=8);e.children=t,e.shapeFlag|=n}function tn(...e){const t={};for(let n=0;n<e.length;n++){const s=e[n];for(const e in s)if("class"===e)t.class!==s.class&&(t.class=(0,r.C_)([t.class,s.class]));else if("style"===e)t.style=(0,r.j5)([t.style,s.style]);else if((0,r.F7)(e)){const n=t[e],i=s[e];!i||n===i||(0,r.kJ)(n)&&n.includes(i)||(t[e]=n?[].concat(n,i):i)}else""!==e&&(t[e]=s[e])}return t}function nn(e,t,n,s=null){a(e,t,7,[n,s])}const sn=Je();let rn=0;function an(e,t,n){const i=e.type,a=(t?t.appContext:e.appContext)||sn,o={uid:rn++,vnode:e,type:i,parent:t,appContext:a,root:null,next:null,subTree:null,effect:null,update:null,scope:new s.Bj(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:t?t.provides:Object.create(a.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:at(i,a),emitsOptions:R(i,a),emit:null,emitted:null,propsDefaults:r.kT,inheritAttrs:i.inheritAttrs,ctx:r.kT,data:r.kT,props:r.kT,attrs:r.kT,slots:r.kT,refs:r.kT,setupState:r.kT,setupContext:null,attrsProxy:null,slotsProxy:null,suspense:n,suspenseId:n?n.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return o.ctx={_:o},o.root=t?t.root:o,o.emit=E.bind(null,o),e.ce&&e.ce(o),o}let on=null;const ln=()=>on||_;let un,cn,hn="__VUE_INSTANCE_SETTERS__";(cn=(0,r.E9)()[hn])||(cn=(0,r.E9)()[hn]=[]),cn.push((e=>on=e)),un=e=>{cn.length>1?cn.forEach((t=>t(e))):cn[0](e)};const dn=e=>{un(e),e.scope.on()},pn=()=>{on&&on.scope.off(),un(null)};function fn(e){return 4&e.vnode.shapeFlag}let gn,mn,bn=!1;function xn(e,t=!1){bn=t;const{props:n,children:s}=e.vnode,r=fn(e);nt(e,n,r,t),mt(e,s);const i=r?yn(e,t):void 0;return bn=!1,i}function yn(e,t){const n=e.type;e.accessCache=Object.create(null),e.proxy=(0,s.Xl)(new Proxy(e.ctx,Fe));const{setup:a}=n;if(a){const n=e.setupContext=a.length>1?In(e):null;dn(e),(0,s.Jd)();const l=i(a,e,0,[e.props,n]);if((0,s.lk)(),pn(),(0,r.tI)(l)){if(l.then(pn,pn),t)return l.then((n=>{vn(e,n,t)})).catch((t=>{o(t,e,0)}));e.asyncDep=l}else vn(e,l,t)}else wn(e,t)}function vn(e,t,n){(0,r.mf)(t)?e.type.__ssrInlineRender?e.ssrRender=t:e.render=t:(0,r.Kn)(t)&&(e.setupState=(0,s.WL)(t)),wn(e,n)}function wn(e,t,n){const i=e.type;if(!e.render){if(!t&&gn&&!i.render){const t=i.template||Be(e).template;if(t){0;const{isCustomElement:n,compilerOptions:s}=e.appContext.config,{delimiters:a,compilerOptions:o}=i,l=(0,r.l7)((0,r.l7)({isCustomElement:n,delimiters:a},s),o);i.render=gn(t,l)}}e.render=i.render||r.dG,mn&&mn(e)}dn(e),(0,s.Jd)(),Le(e),(0,s.lk)(),pn()}function kn(e){return e.attrsProxy||(e.attrsProxy=new Proxy(e.attrs,{get(t,n){return(0,s.j)(e,"get","$attrs"),t[n]}}))}function In(e){const t=t=>{e.exposed=t||{}};return{get attrs(){return kn(e)},slots:e.slots,emit:e.emit,expose:t}}function Cn(e){if(e.exposed)return e.exposeProxy||(e.exposeProxy=new Proxy((0,s.WL)((0,s.Xl)(e.exposed)),{get(t,n){return n in t?t[n]:n in Ae?Ae[n](e):void 0},has(e,t){return t in e||t in Ae}}))}function Sn(e,t=!0){return(0,r.mf)(e)?e.displayName||e.name:e.name||t&&e.__name}function $n(e){return(0,r.mf)(e)&&"__vccOpts"in e}const Nn=(e,t)=>(0,s.Fl)(e,t,bn);function Tn(e,t,n){const s=arguments.length;return 2===s?(0,r.Kn)(t)&&!(0,r.kJ)(t)?Bt(t)?jt(e,null,[t]):jt(e,t):jt(e,null,t):(s>3?n=Array.prototype.slice.call(arguments,2):3===s&&Bt(n)&&(n=[n]),jt(e,t,n))}const En=Symbol.for("v-scx"),Rn=()=>{{const e=tt(En);return e}};const An="3.3.4"},9242:function(e,t,n){"use strict";n.d(t,{ri:function(){return le}});n(7658);var s=n(7139),r=n(3396),i=n(4870);const a="http://www.w3.org/2000/svg",o="undefined"!==typeof document?document:null,l=o&&o.createElement("template"),u={insert:(e,t,n)=>{t.insertBefore(e,n||null)},remove:e=>{const t=e.parentNode;t&&t.removeChild(e)},createElement:(e,t,n,s)=>{const r=t?o.createElementNS(a,e):o.createElement(e,n?{is:n}:void 0);return"select"===e&&s&&null!=s.multiple&&r.setAttribute("multiple",s.multiple),r},createText:e=>o.createTextNode(e),createComment:e=>o.createComment(e),setText:(e,t)=>{e.nodeValue=t},setElementText:(e,t)=>{e.textContent=t},parentNode:e=>e.parentNode,nextSibling:e=>e.nextSibling,querySelector:e=>o.querySelector(e),setScopeId(e,t){e.setAttribute(t,"")},insertStaticContent(e,t,n,s,r,i){const a=n?n.previousSibling:t.lastChild;if(r&&(r===i||r.nextSibling)){while(1)if(t.insertBefore(r.cloneNode(!0),n),r===i||!(r=r.nextSibling))break}else{l.innerHTML=s?`<svg>${e}</svg>`:e;const r=l.content;if(s){const e=r.firstChild;while(e.firstChild)r.appendChild(e.firstChild);r.removeChild(e)}t.insertBefore(r,n)}return[a?a.nextSibling:t.firstChild,n?n.previousSibling:t.lastChild]}};function c(e,t,n){const s=e._vtc;s&&(t=(t?[t,...s]:[...s]).join(" ")),null==t?e.removeAttribute("class"):n?e.setAttribute("class",t):e.className=t}function h(e,t,n){const r=e.style,i=(0,s.HD)(n);if(n&&!i){if(t&&!(0,s.HD)(t))for(const e in t)null==n[e]&&p(r,e,"");for(const e in n)p(r,e,n[e])}else{const s=r.display;i?t!==n&&(r.cssText=n):t&&e.removeAttribute("style"),"_vod"in e&&(r.display=s)}}const d=/\s*!important$/;function p(e,t,n){if((0,s.kJ)(n))n.forEach((n=>p(e,t,n)));else if(null==n&&(n=""),t.startsWith("--"))e.setProperty(t,n);else{const r=m(e,t);d.test(n)?e.setProperty((0,s.rs)(r),n.replace(d,""),"important"):e[r]=n}}const f=["Webkit","Moz","ms"],g={};function m(e,t){const n=g[t];if(n)return n;let r=(0,s._A)(t);if("filter"!==r&&r in e)return g[t]=r;r=(0,s.kC)(r);for(let s=0;s<f.length;s++){const n=f[s]+r;if(n in e)return g[t]=n}return t}const b="http://www.w3.org/1999/xlink";function x(e,t,n,r,i){if(r&&t.startsWith("xlink:"))null==n?e.removeAttributeNS(b,t.slice(6,t.length)):e.setAttributeNS(b,t,n);else{const r=(0,s.Pq)(t);null==n||r&&!(0,s.yA)(n)?e.removeAttribute(t):e.setAttribute(t,r?"":n)}}function y(e,t,n,r,i,a,o){if("innerHTML"===t||"textContent"===t)return r&&o(r,i,a),void(e[t]=null==n?"":n);const l=e.tagName;if("value"===t&&"PROGRESS"!==l&&!l.includes("-")){e._value=n;const s="OPTION"===l?e.getAttribute("value"):e.value,r=null==n?"":n;return s!==r&&(e.value=r),void(null==n&&e.removeAttribute(t))}let u=!1;if(""===n||null==n){const r=typeof e[t];"boolean"===r?n=(0,s.yA)(n):null==n&&"string"===r?(n="",u=!0):"number"===r&&(n=0,u=!0)}try{e[t]=n}catch(c){0}u&&e.removeAttribute(t)}function v(e,t,n,s){e.addEventListener(t,n,s)}function w(e,t,n,s){e.removeEventListener(t,n,s)}function k(e,t,n,s,r=null){const i=e._vei||(e._vei={}),a=i[t];if(s&&a)a.value=s;else{const[n,o]=C(t);if(s){const a=i[t]=T(s,r);v(e,n,a,o)}else a&&(w(e,n,a,o),i[t]=void 0)}}const I=/(?:Once|Passive|Capture)$/;function C(e){let t;if(I.test(e)){let n;t={};while(n=e.match(I))e=e.slice(0,e.length-n[0].length),t[n[0].toLowerCase()]=!0}const n=":"===e[2]?e.slice(3):(0,s.rs)(e.slice(2));return[n,t]}let S=0;const $=Promise.resolve(),N=()=>S||($.then((()=>S=0)),S=Date.now());function T(e,t){const n=e=>{if(e._vts){if(e._vts<=n.attached)return}else e._vts=Date.now();(0,r.$d)(E(e,n.value),t,5,[e])};return n.value=e,n.attached=N(),n}function E(e,t){if((0,s.kJ)(t)){const n=e.stopImmediatePropagation;return e.stopImmediatePropagation=()=>{n.call(e),e._stopped=!0},t.map((e=>t=>!t._stopped&&e&&e(t)))}return t}const R=/^on[a-z]/,A=(e,t,n,r,i=!1,a,o,l,u)=>{"class"===t?c(e,r,i):"style"===t?h(e,n,r):(0,s.F7)(t)?(0,s.tR)(t)||k(e,t,n,r,o):("."===t[0]?(t=t.slice(1),1):"^"===t[0]?(t=t.slice(1),0):_(e,t,r,i))?y(e,t,r,a,o,l,u):("true-value"===t?e._trueValue=r:"false-value"===t&&(e._falseValue=r),x(e,t,r,i))};function _(e,t,n,r){return r?"innerHTML"===t||"textContent"===t||!!(t in e&&R.test(t)&&(0,s.mf)(n)):"spellcheck"!==t&&"draggable"!==t&&"translate"!==t&&("form"!==t&&(("list"!==t||"INPUT"!==e.tagName)&&(("type"!==t||"TEXTAREA"!==e.tagName)&&((!R.test(t)||!(0,s.HD)(n))&&t in e))))}"undefined"!==typeof HTMLElement&&HTMLElement;const F="transition",D="animation",O=(e,{slots:t})=>(0,r.h)(r.P$,B(e),t);O.displayName="Transition";const L={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},M=O.props=(0,s.l7)({},r.nJ,L),z=(e,t=[])=>{(0,s.kJ)(e)?e.forEach((e=>e(...t))):e&&e(...t)},P=e=>!!e&&((0,s.kJ)(e)?e.some((e=>e.length>1)):e.length>1);function B(e){const t={};for(const s in e)s in L||(t[s]=e[s]);if(!1===e.css)return t;const{name:n="v",type:r,duration:i,enterFromClass:a=`${n}-enter-from`,enterActiveClass:o=`${n}-enter-active`,enterToClass:l=`${n}-enter-to`,appearFromClass:u=a,appearActiveClass:c=o,appearToClass:h=l,leaveFromClass:d=`${n}-leave-from`,leaveActiveClass:p=`${n}-leave-active`,leaveToClass:f=`${n}-leave-to`}=e,g=W(i),m=g&&g[0],b=g&&g[1],{onBeforeEnter:x,onEnter:y,onEnterCancelled:v,onLeave:w,onLeaveCancelled:k,onBeforeAppear:I=x,onAppear:C=y,onAppearCancelled:S=v}=t,$=(e,t,n)=>{G(e,t?h:l),G(e,t?c:o),n&&n()},N=(e,t)=>{e._isLeaving=!1,G(e,d),G(e,f),G(e,p),t&&t()},T=e=>(t,n)=>{const s=e?C:y,i=()=>$(t,e,n);z(s,[t,i]),H((()=>{G(t,e?u:a),V(t,e?h:l),P(s)||K(t,r,m,i)}))};return(0,s.l7)(t,{onBeforeEnter(e){z(x,[e]),V(e,a),V(e,o)},onBeforeAppear(e){z(I,[e]),V(e,u),V(e,c)},onEnter:T(!1),onAppear:T(!0),onLeave(e,t){e._isLeaving=!0;const n=()=>N(e,t);V(e,d),Y(),V(e,p),H((()=>{e._isLeaving&&(G(e,d),V(e,f),P(w)||K(e,r,b,n))})),z(w,[e,n])},onEnterCancelled(e){$(e,!1),z(v,[e])},onAppearCancelled(e){$(e,!0),z(S,[e])},onLeaveCancelled(e){N(e),z(k,[e])}})}function W(e){if(null==e)return null;if((0,s.Kn)(e))return[U(e.enter),U(e.leave)];{const t=U(e);return[t,t]}}function U(e){const t=(0,s.He)(e);return t}function V(e,t){t.split(/\s+/).forEach((t=>t&&e.classList.add(t))),(e._vtc||(e._vtc=new Set)).add(t)}function G(e,t){t.split(/\s+/).forEach((t=>t&&e.classList.remove(t)));const{_vtc:n}=e;n&&(n.delete(t),n.size||(e._vtc=void 0))}function H(e){requestAnimationFrame((()=>{requestAnimationFrame(e)}))}let j=0;function K(e,t,n,s){const r=e._endId=++j,i=()=>{r===e._endId&&s()};if(n)return setTimeout(i,n);const{type:a,timeout:o,propCount:l}=q(e,t);if(!a)return s();const u=a+"end";let c=0;const h=()=>{e.removeEventListener(u,d),i()},d=t=>{t.target===e&&++c>=l&&h()};setTimeout((()=>{c<l&&h()}),o+1),e.addEventListener(u,d)}function q(e,t){const n=window.getComputedStyle(e),s=e=>(n[e]||"").split(", "),r=s(`${F}Delay`),i=s(`${F}Duration`),a=X(r,i),o=s(`${D}Delay`),l=s(`${D}Duration`),u=X(o,l);let c=null,h=0,d=0;t===F?a>0&&(c=F,h=a,d=i.length):t===D?u>0&&(c=D,h=u,d=l.length):(h=Math.max(a,u),c=h>0?a>u?F:D:null,d=c?c===F?i.length:l.length:0);const p=c===F&&/\b(transform|all)(,|$)/.test(s(`${F}Property`).toString());return{type:c,timeout:h,propCount:d,hasTransform:p}}function X(e,t){while(e.length<t.length)e=e.concat(e);return Math.max(...t.map(((t,n)=>J(t)+J(e[n]))))}function J(e){return 1e3*Number(e.slice(0,-1).replace(",","."))}function Y(){return document.body.offsetHeight}const Z=new WeakMap,Q=new WeakMap,ee={name:"TransitionGroup",props:(0,s.l7)({},M,{tag:String,moveClass:String}),setup(e,{slots:t}){const n=(0,r.FN)(),s=(0,r.Y8)();let a,o;return(0,r.ic)((()=>{if(!a.length)return;const t=e.moveClass||`${e.name||"v"}-move`;if(!re(a[0].el,n.vnode.el,t))return;a.forEach(te),a.forEach(ne);const s=a.filter(se);Y(),s.forEach((e=>{const n=e.el,s=n.style;V(n,t),s.transform=s.webkitTransform=s.transitionDuration="";const r=n._moveCb=e=>{e&&e.target!==n||e&&!/transform$/.test(e.propertyName)||(n.removeEventListener("transitionend",r),n._moveCb=null,G(n,t))};n.addEventListener("transitionend",r)}))})),()=>{const l=(0,i.IU)(e),u=B(l);let c=l.tag||r.HY;a=o,o=t.default?(0,r.Q6)(t.default()):[];for(let e=0;e<o.length;e++){const t=o[e];null!=t.key&&(0,r.nK)(t,(0,r.U2)(t,u,s,n))}if(a)for(let e=0;e<a.length;e++){const t=a[e];(0,r.nK)(t,(0,r.U2)(t,u,s,n)),Z.set(t,t.el.getBoundingClientRect())}return(0,r.Wm)(c,null,o)}}};ee.props;function te(e){const t=e.el;t._moveCb&&t._moveCb(),t._enterCb&&t._enterCb()}function ne(e){Q.set(e,e.el.getBoundingClientRect())}function se(e){const t=Z.get(e),n=Q.get(e),s=t.left-n.left,r=t.top-n.top;if(s||r){const t=e.el.style;return t.transform=t.webkitTransform=`translate(${s}px,${r}px)`,t.transitionDuration="0s",e}}function re(e,t,n){const s=e.cloneNode();e._vtc&&e._vtc.forEach((e=>{e.split(/\s+/).forEach((e=>e&&s.classList.remove(e)))})),n.split(/\s+/).forEach((e=>e&&s.classList.add(e))),s.style.display="none";const r=1===t.nodeType?t:t.parentNode;r.appendChild(s);const{hasTransform:i}=q(s);return r.removeChild(s),i}const ie=(0,s.l7)({patchProp:A},u);let ae;function oe(){return ae||(ae=(0,r.Us)(ie))}const le=(...e)=>{const t=oe().createApp(...e);const{mount:n}=t;return t.mount=e=>{const r=ue(e);if(!r)return;const i=t._component;(0,s.mf)(i)||i.render||i.template||(i.template=r.innerHTML),r.innerHTML="";const a=n(r,!1,r instanceof SVGElement);return r instanceof Element&&(r.removeAttribute("v-cloak"),r.setAttribute("data-v-app","")),a},t};function ue(e){if((0,s.HD)(e)){const t=document.querySelector(e);return t}return e}},7139:function(e,t,n){"use strict";n.d(t,{C_:function(){return Z},DM:function(){return b},E9:function(){return G},F7:function(){return u},Gg:function(){return R},HD:function(){return w},He:function(){return U},Kj:function(){return y},Kn:function(){return I},NO:function(){return o},Nj:function(){return B},Od:function(){return d},PO:function(){return T},Pq:function(){return ee},RI:function(){return f},S0:function(){return E},W7:function(){return N},WV:function(){return se},Z6:function(){return i},_A:function(){return F},_N:function(){return m},aU:function(){return z},dG:function(){return a},e1:function(){return j},fY:function(){return s},h5:function(){return W},hR:function(){return M},hq:function(){return re},ir:function(){return P},j5:function(){return K},kC:function(){return L},kJ:function(){return g},kT:function(){return r},l7:function(){return h},mf:function(){return v},rs:function(){return O},tI:function(){return C},tR:function(){return c},yA:function(){return te},yk:function(){return k},zw:function(){return ie}});n(7658);function s(e,t){const n=Object.create(null),s=e.split(",");for(let r=0;r<s.length;r++)n[s[r]]=!0;return t?e=>!!n[e.toLowerCase()]:e=>!!n[e]}const r={},i=[],a=()=>{},o=()=>!1,l=/^on[^a-z]/,u=e=>l.test(e),c=e=>e.startsWith("onUpdate:"),h=Object.assign,d=(e,t)=>{const n=e.indexOf(t);n>-1&&e.splice(n,1)},p=Object.prototype.hasOwnProperty,f=(e,t)=>p.call(e,t),g=Array.isArray,m=e=>"[object Map]"===$(e),b=e=>"[object Set]"===$(e),x=e=>"[object Date]"===$(e),y=e=>"[object RegExp]"===$(e),v=e=>"function"===typeof e,w=e=>"string"===typeof e,k=e=>"symbol"===typeof e,I=e=>null!==e&&"object"===typeof e,C=e=>I(e)&&v(e.then)&&v(e.catch),S=Object.prototype.toString,$=e=>S.call(e),N=e=>$(e).slice(8,-1),T=e=>"[object Object]"===$(e),E=e=>w(e)&&"NaN"!==e&&"-"!==e[0]&&""+parseInt(e,10)===e,R=s(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),A=e=>{const t=Object.create(null);return n=>{const s=t[n];return s||(t[n]=e(n))}},_=/-(\w)/g,F=A((e=>e.replace(_,((e,t)=>t?t.toUpperCase():"")))),D=/\B([A-Z])/g,O=A((e=>e.replace(D,"-$1").toLowerCase())),L=A((e=>e.charAt(0).toUpperCase()+e.slice(1))),M=A((e=>e?`on${L(e)}`:"")),z=(e,t)=>!Object.is(e,t),P=(e,t)=>{for(let n=0;n<e.length;n++)e[n](t)},B=(e,t,n)=>{Object.defineProperty(e,t,{configurable:!0,enumerable:!1,value:n})},W=e=>{const t=parseFloat(e);return isNaN(t)?e:t},U=e=>{const t=w(e)?Number(e):NaN;return isNaN(t)?e:t};let V;const G=()=>V||(V="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof self?self:"undefined"!==typeof window?window:"undefined"!==typeof n.g?n.g:{});const H="Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console",j=s(H);function K(e){if(g(e)){const t={};for(let n=0;n<e.length;n++){const s=e[n],r=w(s)?Y(s):K(s);if(r)for(const e in r)t[e]=r[e]}return t}return w(e)||I(e)?e:void 0}const q=/;(?![^(]*\))/g,X=/:([^]+)/,J=/\/\*[^]*?\*\//g;function Y(e){const t={};return e.replace(J,"").split(q).forEach((e=>{if(e){const n=e.split(X);n.length>1&&(t[n[0].trim()]=n[1].trim())}})),t}function Z(e){let t="";if(w(e))t=e;else if(g(e))for(let n=0;n<e.length;n++){const s=Z(e[n]);s&&(t+=s+" ")}else if(I(e))for(const n in e)e[n]&&(t+=n+" ");return t.trim()}const Q="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",ee=s(Q);function te(e){return!!e||""===e}function ne(e,t){if(e.length!==t.length)return!1;let n=!0;for(let s=0;n&&s<e.length;s++)n=se(e[s],t[s]);return n}function se(e,t){if(e===t)return!0;let n=x(e),s=x(t);if(n||s)return!(!n||!s)&&e.getTime()===t.getTime();if(n=k(e),s=k(t),n||s)return e===t;if(n=g(e),s=g(t),n||s)return!(!n||!s)&&ne(e,t);if(n=I(e),s=I(t),n||s){if(!n||!s)return!1;const r=Object.keys(e).length,i=Object.keys(t).length;if(r!==i)return!1;for(const n in e){const s=e.hasOwnProperty(n),r=t.hasOwnProperty(n);if(s&&!r||!s&&r||!se(e[n],t[n]))return!1}}return String(e)===String(t)}function re(e,t){return e.findIndex((e=>se(e,t)))}const ie=e=>w(e)?e:null==e?"":g(e)||I(e)&&(e.toString===S||!v(e.toString))?JSON.stringify(e,ae,2):String(e),ae=(e,t)=>t&&t.__v_isRef?ae(e,t.value):m(t)?{[`Map(${t.size})`]:[...t.entries()].reduce(((e,[t,n])=>(e[`${t} =>`]=n,e)),{})}:b(t)?{[`Set(${t.size})`]:[...t.values()]}:!I(t)||g(t)||T(t)?t:String(t)},9438:function(e,t,n){n(1439),n(7585),n(5315),e.exports=r;var s=null;try{s=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(E){}function r(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function i(e){return!0===(e&&e["__isLong__"])}r.prototype.__isLong__,Object.defineProperty(r.prototype,"__isLong__",{value:!0}),r.isLong=i;var a={},o={};function l(e,t){var n,s,r;return t?(e>>>=0,(r=0<=e&&e<256)&&(s=o[e],s)?s:(n=c(e,(0|e)<0?-1:0,!0),r&&(o[e]=n),n)):(e|=0,(r=-128<=e&&e<128)&&(s=a[e],s)?s:(n=c(e,e<0?-1:0,!1),r&&(a[e]=n),n))}function u(e,t){if(isNaN(e))return t?w:v;if(t){if(e<0)return w;if(e>=b)return $}else{if(e<=-x)return N;if(e+1>=x)return S}return e<0?u(-e,t).neg():c(e%m|0,e/m|0,t)}function c(e,t,n){return new r(e,t,n)}r.fromInt=l,r.fromNumber=u,r.fromBits=c;var h=Math.pow;function d(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return v;if("number"===typeof t?(n=t,t=!1):t=!!t,n=n||10,n<2||36<n)throw RangeError("radix");var s;if((s=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===s)return d(e.substring(1),t,n).neg();for(var r=u(h(n,8)),i=v,a=0;a<e.length;a+=8){var o=Math.min(8,e.length-a),l=parseInt(e.substring(a,a+o),n);if(o<8){var c=u(h(n,o));i=i.mul(c).add(u(l))}else i=i.mul(r),i=i.add(u(l))}return i.unsigned=t,i}function p(e,t){return"number"===typeof e?u(e,t):"string"===typeof e?d(e,t):c(e.low,e.high,"boolean"===typeof t?t:e.unsigned)}r.fromString=d,r.fromValue=p;var f=65536,g=1<<24,m=f*f,b=m*m,x=b/2,y=l(g),v=l(0);r.ZERO=v;var w=l(0,!0);r.UZERO=w;var k=l(1);r.ONE=k;var I=l(1,!0);r.UONE=I;var C=l(-1);r.NEG_ONE=C;var S=c(-1,2147483647,!1);r.MAX_VALUE=S;var $=c(-1,-1,!0);r.MAX_UNSIGNED_VALUE=$;var N=c(0,-2147483648,!1);r.MIN_VALUE=N;var T=r.prototype;T.toInt=function(){return this.unsigned?this.low>>>0:this.low},T.toNumber=function(){return this.unsigned?(this.high>>>0)*m+(this.low>>>0):this.high*m+(this.low>>>0)},T.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(N)){var t=u(e),n=this.div(t),s=n.mul(t).sub(this);return n.toString(e)+s.toInt().toString(e)}return"-"+this.neg().toString(e)}var r=u(h(e,6),this.unsigned),i=this,a="";while(1){var o=i.div(r),l=i.sub(o.mul(r)).toInt()>>>0,c=l.toString(e);if(i=o,i.isZero())return c+a;while(c.length<6)c="0"+c;a=""+c+a}},T.getHighBits=function(){return this.high},T.getHighBitsUnsigned=function(){return this.high>>>0},T.getLowBits=function(){return this.low},T.getLowBitsUnsigned=function(){return this.low>>>0},T.getNumBitsAbs=function(){if(this.isNegative())return this.eq(N)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0;t--)if(0!=(e&1<<t))break;return 0!=this.high?t+33:t+1},T.isZero=function(){return 0===this.high&&0===this.low},T.eqz=T.isZero,T.isNegative=function(){return!this.unsigned&&this.high<0},T.isPositive=function(){return this.unsigned||this.high>=0},T.isOdd=function(){return 1===(1&this.low)},T.isEven=function(){return 0===(1&this.low)},T.equals=function(e){return i(e)||(e=p(e)),(this.unsigned===e.unsigned||this.high>>>31!==1||e.high>>>31!==1)&&(this.high===e.high&&this.low===e.low)},T.eq=T.equals,T.notEquals=function(e){return!this.eq(e)},T.neq=T.notEquals,T.ne=T.notEquals,T.lessThan=function(e){return this.comp(e)<0},T.lt=T.lessThan,T.lessThanOrEqual=function(e){return this.comp(e)<=0},T.lte=T.lessThanOrEqual,T.le=T.lessThanOrEqual,T.greaterThan=function(e){return this.comp(e)>0},T.gt=T.greaterThan,T.greaterThanOrEqual=function(e){return this.comp(e)>=0},T.gte=T.greaterThanOrEqual,T.ge=T.greaterThanOrEqual,T.compare=function(e){if(i(e)||(e=p(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},T.comp=T.compare,T.negate=function(){return!this.unsigned&&this.eq(N)?N:this.not().add(k)},T.neg=T.negate,T.add=function(e){i(e)||(e=p(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,r=65535&this.low,a=e.high>>>16,o=65535&e.high,l=e.low>>>16,u=65535&e.low,h=0,d=0,f=0,g=0;return g+=r+u,f+=g>>>16,g&=65535,f+=s+l,d+=f>>>16,f&=65535,d+=n+o,h+=d>>>16,d&=65535,h+=t+a,h&=65535,c(f<<16|g,h<<16|d,this.unsigned)},T.subtract=function(e){return i(e)||(e=p(e)),this.add(e.neg())},T.sub=T.subtract,T.multiply=function(e){if(this.isZero())return v;if(i(e)||(e=p(e)),s){var t=s.mul(this.low,this.high,e.low,e.high);return c(t,s.get_high(),this.unsigned)}if(e.isZero())return v;if(this.eq(N))return e.isOdd()?N:v;if(e.eq(N))return this.isOdd()?N:v;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(y)&&e.lt(y))return u(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,a=this.low>>>16,o=65535&this.low,l=e.high>>>16,h=65535&e.high,d=e.low>>>16,f=65535&e.low,g=0,m=0,b=0,x=0;return x+=o*f,b+=x>>>16,x&=65535,b+=a*f,m+=b>>>16,b&=65535,b+=o*d,m+=b>>>16,b&=65535,m+=r*f,g+=m>>>16,m&=65535,m+=a*d,g+=m>>>16,m&=65535,m+=o*h,g+=m>>>16,m&=65535,g+=n*f+r*d+a*h+o*l,g&=65535,c(b<<16|x,g<<16|m,this.unsigned)},T.mul=T.multiply,T.divide=function(e){if(i(e)||(e=p(e)),e.isZero())throw Error("division by zero");if(s){if(!this.unsigned&&-2147483648===this.high&&-1===e.low&&-1===e.high)return this;var t=(this.unsigned?s.div_u:s.div_s)(this.low,this.high,e.low,e.high);return c(t,s.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?w:v;var n,r,a;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return w;if(e.gt(this.shru(1)))return I;a=w}else{if(this.eq(N)){if(e.eq(k)||e.eq(C))return N;if(e.eq(N))return k;var o=this.shr(1);return n=o.div(e).shl(1),n.eq(v)?e.isNegative()?k:C:(r=this.sub(e.mul(n)),a=n.add(r.div(e)),a)}if(e.eq(N))return this.unsigned?w:v;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=v}r=this;while(r.gte(e)){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));var l=Math.ceil(Math.log(n)/Math.LN2),d=l<=48?1:h(2,l-48),f=u(n),g=f.mul(e);while(g.isNegative()||g.gt(r))n-=d,f=u(n,this.unsigned),g=f.mul(e);f.isZero()&&(f=k),a=a.add(f),r=r.sub(g)}return a},T.div=T.divide,T.modulo=function(e){if(i(e)||(e=p(e)),s){var t=(this.unsigned?s.rem_u:s.rem_s)(this.low,this.high,e.low,e.high);return c(t,s.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))},T.mod=T.modulo,T.rem=T.modulo,T.not=function(){return c(~this.low,~this.high,this.unsigned)},T.and=function(e){return i(e)||(e=p(e)),c(this.low&e.low,this.high&e.high,this.unsigned)},T.or=function(e){return i(e)||(e=p(e)),c(this.low|e.low,this.high|e.high,this.unsigned)},T.xor=function(e){return i(e)||(e=p(e)),c(this.low^e.low,this.high^e.high,this.unsigned)},T.shiftLeft=function(e){return i(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):c(0,this.low<<e-32,this.unsigned)},T.shl=T.shiftLeft,T.shiftRight=function(e){return i(e)&&(e=e.toInt()),0===(e&=63)?this:e<32?c(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):c(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},T.shr=T.shiftRight,T.shiftRightUnsigned=function(e){if(i(e)&&(e=e.toInt()),e&=63,0===e)return this;var t=this.high;if(e<32){var n=this.low;return c(n>>>e|t<<32-e,t>>>e,this.unsigned)}return c(32===e?t:t>>>e-32,0,this.unsigned)},T.shru=T.shiftRightUnsigned,T.shr_u=T.shiftRightUnsigned,T.toSigned=function(){return this.unsigned?c(this.low,this.high,!1):this},T.toUnsigned=function(){return this.unsigned?this:c(this.low,this.high,!0)},T.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},T.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},T.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},r.fromBytes=function(e,t,n){return n?r.fromBytesLE(e,t):r.fromBytesBE(e,t)},r.fromBytesLE=function(e,t){return new r(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},r.fromBytesBE=function(e,t){return new r(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},5431:function(e,t,n){"use strict";n.d(t,{z:function(){return i}});var s,r=function(){return Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/))};function i(e,t){void 0===t&&(t={});var n=t.registrationOptions;void 0===n&&(n={}),delete t.registrationOptions;var i=function(e){var n=[],s=arguments.length-1;while(s-- >0)n[s]=arguments[s+1];t&&t[e]&&t[e].apply(t,n)};"serviceWorker"in navigator&&s.then((function(){r()?(l(e,i,n),navigator.serviceWorker.ready.then((function(e){i("ready",e)})).catch((function(e){return a(i,e)}))):(o(e,i,n),navigator.serviceWorker.ready.then((function(e){i("ready",e)})).catch((function(e){return a(i,e)})))}))}function a(e,t){navigator.onLine||e("offline"),e("error",t)}function o(e,t,n){navigator.serviceWorker.register(e,n).then((function(e){t("registered",e),e.waiting?t("updated",e):e.onupdatefound=function(){t("updatefound",e);var n=e.installing;n.onstatechange=function(){"installed"===n.state&&(navigator.serviceWorker.controller?t("updated",e):t("cached",e))}}})).catch((function(e){return a(t,e)}))}function l(e,t,n){fetch(e).then((function(s){404===s.status?(t("error",new Error("Service worker not found at "+e)),u()):-1===s.headers.get("content-type").indexOf("javascript")?(t("error",new Error("Expected "+e+" to have javascript content-type, but received "+s.headers.get("content-type"))),u()):o(e,t,n)})).catch((function(e){return a(t,e)}))}function u(){"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){return a(emit,e)}))}"undefined"!==typeof window&&(s="undefined"!==typeof Promise?new Promise((function(e){return window.addEventListener("load",e)})):{then:function(e){return window.addEventListener("load",e)}})},4332:function(e,t,n){var s=n(4805),r=n(6788),i=n(9787),a=n(661),o=n(2629),l=n(3363),u=n(4878);u.alea=s,u.xor128=r,u.xorwow=i,u.xorshift7=a,u.xor4096=o,u.tychei=l,e.exports=u},4805:function(e,t,n){var s;e=n.nmd(e),function(e,r,i){function a(e){var t=this,n=u();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new a(e),s=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}function u(){var e=4022871197,t=function(t){t=String(t);for(var n=0;n<t.length;n++){e+=t.charCodeAt(n);var s=.02519603282416938*e;e=s>>>0,s-=e,s*=e,e=s>>>0,s-=e,e+=4294967296*s}return 2.3283064365386963e-10*(e>>>0)};return t}r&&r.exports?r.exports=l:n.amdD&&n.amdO?(s=function(){return l}.call(t,n,t,r),void 0===s||(r.exports=s)):this.alea=l}(0,e,n.amdD)},3363:function(e,t,n){var s;e=n.nmd(e),function(e,r,i){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,s=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-s|0,t.d=s<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var s=0;s<n.length+20;s++)t.b^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new a(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,s=(e+t)/(1<<21)}while(0===s);return s},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?(s=function(){return l}.call(t,n,t,r),void 0===s||(r.exports=s)):this.tychei=l}(0,e,n.amdD)},6788:function(e,t,n){var s;e=n.nmd(e),function(e,r,i){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new a(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,s=(e+t)/(1<<21)}while(0===s);return s},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?(s=function(){return l}.call(t,n,t,r),void 0===s||(r.exports=s)):this.xor128=l}(0,e,n.amdD)},2629:function(e,t,n){var s;e=n.nmd(e),function(e,r,i){function a(e){var t=this;function n(e,t){var n,s,r,i,a,o=[],l=128;for(t===(0|t)?(s=t,t=null):(t+="\0",s=0,l=Math.max(l,t.length)),r=0,i=-32;i<l;++i)t&&(s^=t.charCodeAt((i+32)%t.length)),0===i&&(a=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,i>=0&&(a=a+1640531527|0,n=o[127&i]^=s+a,r=0==n?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,i=512;i>0;--i)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;e.w=a,e.X=o,e.i=r}t.next=function(){var e,n,s=t.w,r=t.X,i=t.i;return t.w=s=s+1640531527|0,n=r[i+34&127],e=r[i=i+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[i]=n^e,t.i=i,n+(s^s>>>16)|0},n(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new a(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,s=(e+t)/(1<<21)}while(0===s);return s},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?(s=function(){return l}.call(t,n,t,r),void 0===s||(r.exports=s)):this.xor4096=l}(0,e,n.amdD)},661:function(e,t,n){var s;e=n.nmd(e),n(7658),function(e,r,i){function a(e){var t=this;function n(e,t){var n,s=[];if(t===(0|t))s[0]=t;else for(t=""+t,n=0;n<t.length;++n)s[7&n]=s[7&n]<<15^t.charCodeAt(n)+s[n+1&7]<<13;while(s.length<8)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],e.x=s,e.i=0,n=256;n>0;--n)e.next()}t.next=function(){var e,n,s=t.x,r=t.i;return e=s[r],e^=e>>>7,n=e^e<<24,e=s[r+1&7],n^=e^e>>>10,e=s[r+3&7],n^=e^e>>>3,e=s[r+4&7],n^=e^e<<7,e=s[r+7&7],e^=e<<13,n^=e^e<<9,s[r]=n,t.i=r+1&7,n},n(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new a(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,s=(e+t)/(1<<21)}while(0===s);return s},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?(s=function(){return l}.call(t,n,t,r),void 0===s||(r.exports=s)):this.xorshift7=l}(0,e,n.amdD)},9787:function(e,t,n){var s;e=n.nmd(e),function(e,r,i){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),s==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new a(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=n.next()>>>11,t=(n.next()>>>0)/4294967296,s=(e+t)/(1<<21)}while(0===s);return s},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?(s=function(){return l}.call(t,n,t,r),void 0===s||(r.exports=s)):this.xorwow=l}(0,e,n.amdD)},4878:function(e,t,n){var s;n(7658),n(1439),n(7585),n(5315),function(r,i,a){var o,l=256,u=6,c=52,h="random",d=a.pow(l,u),p=a.pow(2,c),f=2*p,g=l-1;function m(e,t,n){var s=[];t=1==t?{entropy:!0}:t||{};var r=v(y(t.entropy?[e,k(i)]:null==e?w():e,3),s),o=new b(s),c=function(){var e=o.g(u),t=d,n=0;while(e<p)e=(e+n)*l,t*=l,n=o.g(1);while(e>=f)e/=2,t/=2,n>>>=1;return(e+n)/t};return c.int32=function(){return 0|o.g(4)},c.quick=function(){return o.g(4)/4294967296},c.double=c,v(k(o.S),i),(t.pass||n||function(e,t,n,s){return s&&(s.S&&x(s,o),e.state=function(){return x(o,{})}),n?(a[h]=e,t):e})(c,r,"global"in t?t.global:this==a,t.state)}function b(e){var t,n=e.length,s=this,r=0,i=s.i=s.j=0,a=s.S=[];n||(e=[n++]);while(r<l)a[r]=r++;for(r=0;r<l;r++)a[r]=a[i=g&i+e[r%n]+(t=a[r])],a[i]=t;(s.g=function(e){var t,n=0,r=s.i,i=s.j,a=s.S;while(e--)t=a[r=g&r+1],n=n*l+a[g&(a[r]=a[i=g&i+t])+(a[i]=t)];return s.i=r,s.j=i,n})(l)}function x(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function y(e,t){var n,s=[],r=typeof e;if(t&&"object"==r)for(n in e)try{s.push(y(e[n],t-1))}catch(i){}return s.length?s:"string"==r?e:e+"\0"}function v(e,t){var n,s=e+"",r=0;while(r<s.length)t[g&r]=g&(n^=19*t[g&r])+s.charCodeAt(r++);return k(t)}function w(){try{var e;return o&&(e=o.randomBytes)?e=e(l):(e=new Uint8Array(l),(r.crypto||r.msCrypto).getRandomValues(e)),k(e)}catch(s){var t=r.navigator,n=t&&t.plugins;return[+new Date,r,n,r.screen,k(i)]}}function k(e){return String.fromCharCode.apply(0,e)}if(v(a.random(),i),e.exports){e.exports=m;try{o=n(5042)}catch(I){}}else s=function(){return m}.call(t,n,t,e),void 0===s||(e.exports=s)}("undefined"!==typeof self?self:this,[],Math)},89:function(e,t){"use strict";t.Z=(e,t)=>{const n=e.__vccOpts||e;for(const[s,r]of t)n[s]=r;return n}}}]);
//# sourceMappingURL=chunk-vendors.b7f7d78d.js.map